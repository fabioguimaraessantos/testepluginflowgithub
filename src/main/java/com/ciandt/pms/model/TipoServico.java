/*
 * @(#) TipoServico.java
 * Copyright (c) 2008 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import org.hibernate.annotations.Type;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * Entity gerado a partir da tabela TIPO_SERVICO.
 * 
 * @author Generated by Hibernate Tools 3.2.4.GA
 * @since 30/10/2009 10:42:58
 * @version 09/01/19 1.1 10:08:00
 */
@Entity
@Table(name = "TIPO_SERVICO")
@NamedQueries({
        @NamedQuery(name = "TipoServico.findAll", query = "SELECT t FROM TipoServico t "
                + " WHERE (t.indicadorAtivo = 'A') "
                + " ORDER BY t.nomeTipoServico ASC "),

        @NamedQuery(name = "TipoServico.findByDeal", query = "SELECT ts FROM TipoServico ts "
                + " JOIN ts.dealFiscals deal"
                + " WHERE deal.codigoDealFiscal = ? AND ts.indicadorAtivo = 'A' "
                + " ORDER BY ts.nomeTipoServico ASC "),

        @NamedQuery(name = "TipoServico.findByName", query = "SELECT ts FROM TipoServico ts "
                + " WHERE ts.nomeTipoServico = ? "),

        @NamedQuery(name = "TipoServico.findById", query = "SELECT ts FROM TipoServico ts "
                + " WHERE ts.codigoTipoServico = ? "),

        @NamedQuery(name = "TipoServico.findByCodigoAndDeal", query = "SELECT ts FROM TipoServico ts "
                + " JOIN ts.dealFiscals deal"
                + " WHERE deal.codigoDealFiscal = ? "
                + " AND ts.codigoTipoServico = ? "
                + " ORDER BY ts.nomeTipoServico ASC "),

        @NamedQuery(name = "TipoServico.findAllRelatedTaxaImposto", query = "SELECT ts FROM TipoServico ts "
                + " WHERE ts.indicadorAtivo = 'A' "
                + " AND ts.codigoTipoServico IN "
                + " (SELECT ti.tipoServico.codigoTipoServico FROM TaxaImposto ti "
                + " WHERE ti.empresa.codigoEmpresa = ?"
                + " GROUP BY ti.tipoServico.codigoTipoServico) "
                + " ORDER BY ts.nomeTipoServico ASC "),
        @NamedQuery(name="TipoServico.findByFonteReceita",
                query = "SELECT ts FROM TipoServico ts WHERE ts.codigoFonteReceita = ?"),
        @NamedQuery(name = "TipoServico.findByIdIn",
                query = "SELECT t FROM TipoServico t WHERE t.codigoTipoServico IN :tipoServicoCodes"),
        @NamedQuery(name = "TipoServico.findByIndicadorExibeMsaContrato",
            query = "SELECT t FROM TipoServico t where t.indicadorExibeMsaContrato = ? and t.indicadorAtivo = 'A'")
})
public class TipoServico implements java.io.Serializable {

    // ========================================================================
    // BEGIN - Coloque aqui o codigo manual
    // ========================================================================

    /** Constante para NamedQuery "TipoServico.findByCodigoAndDeal". */
	public static final String FIND_BY_CODIGO_AND_DEAL = "TipoServico.findByCodigoAndDeal";

    /** Constante para NamedQuery "TipoServico.findByDeal". */
    public static final String FIND_BY_DEAL = "TipoServico.findByDeal";

    /** Constante para NamedQuery "TipoServico.findByName". */
    public static final String FIND_BY_NAME = "TipoServico.findByName";

   /** Constante para NamedQuery "TipoServico.findById". */
    public static final String FIND_BY_ID = "TipoServico.findById";

    /** Constante para NamedQuery "TipoServico.findAllRelatedTaxaImposto". */
	public static final String FIND_ALL_RELATED_TAXA_IMPOSTO = "TipoServico.findAllRelatedTaxaImposto";

    public static final String FIND_BY_FONTE_RECEITA = "TipoServico.findByFonteReceita";

    public static final String FIND_BY_EXIBE_MSA_CONTRATO = "TipoServico.findByIndicadorExibeMsaContrato";

    public static final String FIND_BY_ID_IN = "TipoServico.findByIdIn";

    /** Lista dos DealFiscal relacionados com o TipoServico. */
    @ManyToMany(fetch = FetchType.LAZY, mappedBy = "tipoServicos", cascade = CascadeType.ALL)
    private List<DealFiscal> dealFiscals = new ArrayList<DealFiscal>(0);

    /**
     * @param dealFiscals
     *            the dealFiscals to set
     */
    public void setDealFiscals(final List<DealFiscal> dealFiscals) {
        this.dealFiscals = dealFiscals;
    }

    /**
     * @return the dealFiscals
     */
    public List<DealFiscal> getDealFiscals() {
        return dealFiscals;
    }

    // ========================================================================
    // END
    // ========================================================================

    /**
     * Valor do serialVersionUID.
     */
    private static final long serialVersionUID = 1L;

    /** Constante para NamedQuery "TipoServico.findAll". */
    public static final String FIND_ALL = "TipoServico.findAll";

    /**
     * Atributo gerado a partir da coluna TISE_CD_TIPO_SERVICO.
     */
    @Id
    @GeneratedValue(generator = "TipoServicoSeq")
    @SequenceGenerator(name = "TipoServicoSeq", sequenceName = "SQ_TISE_CD_TIPO_SERVICO", allocationSize = 1)
    @Column(name = "TISE_CD_TIPO_SERVICO", unique = true, nullable = false, precision = 18, scale = 0)
    private Long codigoTipoServico;

    /**
     * Atributo gerado a partir da coluna TISE_NM_TIPO_SERVICO.
     */
    @Column(name = "TISE_NM_TIPO_SERVICO", length = 50)
    private String nomeTipoServico;

    /**
     * Atributo gerado a partir da coluna TISE_IN_ATIVO.
     */
    @Column(name = "TISE_IN_ATIVO", length = 1)
    private String indicadorAtivo;

    /**
     * Atributo gerado a partir da coluna FORE_CD_FONTE_RECEITA.
     */
    @Column(name = "FORE_CD_FONTE_RECEITA", nullable = false, precision = 18, scale = 0)
    private Long codigoFonteReceita;

	/**
	 * Atributo gerado a partir da coluna TISE_SG_TIPO_SERVICO.
	 */
	@Column(name = "TISE_SG_TIPO_SERVICO", unique = true, nullable = false)
	private String siglaTipoServico;

	@Column(name = "TISE_IN_MSA_CONTRATO")
    @Type(type="yes_no")
    private Boolean indicadorExibeMsaContrato;

	@Column(name = "TISE_TX_ERP")
    private String descricao;

    /** Lista dos itens da fatura. */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "tipoServico")
    private Set<ItemFatura> itemFaturas = new HashSet<ItemFatura>(0);

    /** Lista das TaxaImposto relacionados com o TipoServico. */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "tipoServico")
    private Set<TaxaImposto> taxaImpostos = new HashSet<TaxaImposto>(0);

    /**
     * Construtor default.
     */
    public TipoServico() {
    }

    /**
     * Construtor com preenchimento da entidade.
     * 
     * @param codigoTipoServico
     *            Valor do atributo codigoTipoServico;
     */
    public TipoServico(final Long codigoTipoServico) {
        this.codigoTipoServico = codigoTipoServico;
    }

    /**
     * Construtor com preenchimento da entidade.
     * 
     * @param codigoTipoServico
     *            Valor do atributo codigoTipoServico;
     * @param nomeTipoServico
     *            Valor do atributo nomeTipoServico;
     * @param indicadorAtivo
     *            Valor do atributo indicadorAtivo;
     * @param itemFaturas
     *            Valor do atributo itemFaturas;
     * @param taxaImpostos
     *            Valor do atributo taxaImpostos;
     */
    public TipoServico(final Long codigoTipoServico,
            final String nomeTipoServico, final String indicadorAtivo,
            final Set<ItemFatura> itemFaturas,
			final Set<TaxaImposto> taxaImpostos, final String siglaTipoServico) {
        this.codigoTipoServico = codigoTipoServico;
        this.nomeTipoServico = nomeTipoServico;
        this.indicadorAtivo = indicadorAtivo;
        this.itemFaturas = itemFaturas;
        this.taxaImpostos = taxaImpostos;
		this.siglaTipoServico = siglaTipoServico;
    }

    public String getDescricao() {
        return descricao;
    }

    public void setDescricao(String descricao) {
        this.descricao = descricao;
    }

    /**
     * Obtem o valor do atributo codigoTipoServico.<BR>
     * Atributo gerado a partir da coluna TISE_CD_TIPO_SERVICO.
     * 
     * @return Valor do atributo codigoTipoServico.
     */
    public Long getCodigoTipoServico() {
        return this.codigoTipoServico;
    }

    /**
     * Atualiza o valor do atributo codigoTipoServico.<BR>
     * Atributo gerado a partir da coluna TISE_CD_TIPO_SERVICO.
     * 
     * @param codigoTipoServico
     *            Novo valor para o atributo codigoTipoServico.
     */
    public void setCodigoTipoServico(final Long codigoTipoServico) {
        this.codigoTipoServico = codigoTipoServico;
    }

    /**
     * Obtem o valor do atributo nomeTipoServico.<BR>
     * Atributo gerado a partir da coluna TISE_NM_TIPO_SERVICO.
     * 
     * @return Valor do atributo nomeTipoServico.
     */
    public String getNomeTipoServico() {
        return this.nomeTipoServico;
    }

    /**
     * Atualiza o valor do atributo nomeTipoServico.<BR>
     * Atributo gerado a partir da coluna TISE_NM_TIPO_SERVICO.
     * 
     * @param nomeTipoServico
     *            Novo valor para o atributo nomeTipoServico.
     */
    public void setNomeTipoServico(final String nomeTipoServico) {
        this.nomeTipoServico = nomeTipoServico;
    }

    /**
     * Obtem o valor do atributo indicadorAtivo.<BR>
     * Atributo gerado a partir da coluna TISE_IN_ATIVO.
     * 
     * @return Valor do atributo indicadorAtivo.
     */
    public String getIndicadorAtivo() {
        return this.indicadorAtivo;
    }

    /**
     * Atualiza o valor do atributo indicadorAtivo.<BR>
     * Atributo gerado a partir da coluna TISE_IN_ATIVO.
     * 
     * @param indicadorAtivo
     *            Novo valor para o atributo indicadorAtivo.
     */
    public void setIndicadorAtivo(final String indicadorAtivo) {
        this.indicadorAtivo = indicadorAtivo;
    }

    /**
	 * @return the siglaTipoServico
	 */
	public String getSiglaTipoServico() {
		return siglaTipoServico;
	}

	/**
	 * @param siglaTipoServico
	 *            the siglaTipoServico to set
	 */
	public void setSiglaTipoServico(String siglaTipoServico) {
		this.siglaTipoServico = siglaTipoServico;
	}

	/**
     * Obtem o valor do atributo itemFaturas.<BR>
     * 
     * @return Valor do atributo itemFaturas.
     */
    public Set<ItemFatura> getItemFaturas() {
        return this.itemFaturas;
    }

    /**
     * Atualiza o valor do atributo itemFaturas.<BR>
     * 
     * @param itemFaturas
     *            Novo valor para o atributo itemFaturas.
     */
    public void setItemFaturas(final Set<ItemFatura> itemFaturas) {
        this.itemFaturas = itemFaturas;
    }

    /**
     * Obtem o valor do atributo taxaImpostos.<BR>
     * 
     * @return Valor do atributo taxaImpostos.
     */
    public Set<TaxaImposto> getTaxaImpostos() {
        return this.taxaImpostos;
    }

    /**
     * Atualiza o valor do atributo taxaImpostos.<BR>
     * 
     * @param taxaImpostos
     *            Novo valor para o atributo taxaImpostos.
     */
    public void setTaxaImpostos(final Set<TaxaImposto> taxaImpostos) {
        this.taxaImpostos = taxaImpostos;
    }

    /**
     * Obtem o valor do atributo codigoFonteReceita.<BR>
     * Atributo gerado a partir da coluna FORE_CD_FONTE_RECEITA.
     *
     * @return Valor do atributo codigoFonteReceita.
     */
    public Long getCodigoFonteReceita() {
        return this.codigoFonteReceita;
    }

    /**
     * Atualiza o valor do atributo codigoFonteReceita.<BR>
     * Atributo gerado a partir da coluna FORE_CD_FONTE_RECEITA.
     *
     * @param codigoFonteReceita
     *            Novo valor para o atributo codigoFonteReceita.
     */
    public void setCodigoFonteReceita(final Long codigoFonteReceita) {
        this.codigoFonteReceita = codigoFonteReceita;
    }

    public Boolean getIndicadorExibeMsaContrato() {
        return indicadorExibeMsaContrato;
    }

    public void setIndicadorExibeMsaContrato(Boolean indicadorExibeMsaContrato) {
        this.indicadorExibeMsaContrato = indicadorExibeMsaContrato;
    }

    /**
     * @see Object#toString()
     * 
     * @return retorna o objeto em formato de String.
     */
    @Override
    public String toString() {
        StringBuffer buffer = new StringBuffer();

		buffer.append(getClass().getName()).append("@")
				.append(Integer.toHexString(hashCode())).append(" [");
		buffer.append("codigoTipoServico").append("='")
				.append(getCodigoTipoServico()).append("' ");
		buffer.append("nomeTipoServico").append("='")
				.append(getNomeTipoServico()).append("' ");
        buffer.append("indicadorAtivo").append("='")
                .append(getIndicadorAtivo()).append("' ");
		buffer.append("siglaTipoServico").append("='")
				.append(getSiglaTipoServico()).append("' ");
        buffer.append("]");

        return buffer.toString();
    }

}