/*
 * @(#) PessoaCidadeBase.java
 * Copyright (c) 2008 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Entity gerado a partir da tabela PESSOA_CIDADE_BASE.
 * 
 * @author Generated by Hibernate Tools 3.2.4.GA
 * @since 06/06/2011
 * @author cmantovani
 */
@Entity
@Table(name = "PESSOA_CIDADE_BASE")
@NamedQueries({
        @NamedQuery(name = "PessoaCidadeBase.findAll", query = "SELECT t FROM PessoaCidadeBase t"),

        @NamedQuery(name = "PessoaCidadeBase.findByStartDate", query = " SELECT t FROM PessoaCidadeBase t "
                + " WHERE t.dataInicio = ? " + " AND t.pessoa.codigoPessoa = ?"),

        @NamedQuery(name = "PessoaCidadeBase.findPrevious", query = "SELECT t FROM PessoaCidadeBase t"
                + " WHERE t.pessoa.codigoPessoa = ? "
                + " AND TRUNC(t.dataInicio) = "
                + "     (SELECT MAX(TRUNC(pcbBefore.dataInicio)) "
                + "         FROM PessoaCidadeBase pcbBefore "
                + "         WHERE pcbBefore.pessoa.codigoPessoa = ?"
                + "         AND pcbBefore.dataInicio < ?)"),

        @NamedQuery(name = "PessoaCidadeBase.findNext", query = "SELECT t FROM PessoaCidadeBase t"
                + " WHERE t.pessoa.codigoPessoa = ? "
                + " AND TRUNC(t.dataInicio) = "
                + "     (SELECT MIN(TRUNC(pcbNext.dataInicio)) "
                + "         FROM PessoaCidadeBase pcbNext "
                + "         WHERE pcbNext.pessoa.codigoPessoa = ?"
                + "         AND pcbNext.dataInicio > ?)"),

        @NamedQuery(name = "PessoaCidadeBase.findByPessoaAndDate", query = "SELECT t FROM PessoaCidadeBase t"
                + " WHERE t.pessoa.codigoPessoa = ? "
                + " AND ((TRUNC(?) between t.dataInicio and t.dataFim) or "
                + "       (t.dataFim is null and t.dataInicio <= TRUNC(?))) ") })
public class PessoaCidadeBase implements java.io.Serializable {

    // ========================================================================
    // BEGIN - Coloque aqui o codigo manual
    // ========================================================================

    /** Constante para NamedQuery "PessoaCidadeBase.findByStartDate". */
    public static final String FIND_BY_START_DATE = "PessoaCidadeBase.findByStartDate";

    /** Constante para NamedQuery "PessoaCidadeBase.findPrevious". */
    public static final String FIND_PREVIOUS = "PessoaCidadeBase.findPrevious";

    /** Constante para NamedQuery "PessoaCidadeBase.findNext". */
    public static final String FIND_NEXT = "PessoaCidadeBase.findNext";

    /** Constante para NamedQuery "PessoaCidadeBase.findByPessoaAndDate". */
    public static final String FIND_BY_PESSOA_AND_DATE = "PessoaCidadeBase.findByPessoaAndDate";

    // ========================================================================
    // END
    // ========================================================================

    /**
     * Valor do serialVersionUID.
     */
    private static final long serialVersionUID = 1L;

    /**
     * Constante para NamedQuery "PessoaCidadeBase.findAll".
     */
    public static final String FIND_ALL = "PessoaCidadeBase.findAll";

    /**
     * Atributo gerado a partir da coluna PECB_CD_PESSOA_CIDADE_BASE.
     */
    @Id
    @GeneratedValue(generator = "PessoaCidadeBaseSeq")
    @SequenceGenerator(name = "PessoaCidadeBaseSeq", sequenceName = "SQ_PECB_CD_PESSOA_CIDADE_BASE", allocationSize = 1)
    @Column(name = "PECB_CD_PESSOA_CIDADE_BASE", unique = true, nullable = false, precision = 18, scale = 0)
    private Long codigoPessoaCidadeBase;

    /**
     * Atributo gerado a partir da coluna PESS_CD_PESSOA.
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "PESS_CD_PESSOA", nullable = false)
    private Pessoa pessoa;

    /**
     * Atributo gerado a partir da coluna CIBA_CD_CIDADE_BASE.
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CIBA_CD_CIDADE_BASE", nullable = false)
    private CidadeBase cidadeBase;

    /**
     * Atributo gerado a partir da coluna PECB_DT_INICIO.
     */
    @Temporal(TemporalType.DATE)
    @Column(name = "PECB_DT_INICIO", length = 7)
    private Date dataInicio;

    /**
     * Atributo gerado a partir da coluna PECB_DT_FIM.
     */
    @Temporal(TemporalType.DATE)
    @Column(name = "PECB_DT_FIM", length = 7)
    private Date dataFim;

    /**
     * Atributo gerado a partir da coluna PECB_DT_CRIACAO.
     */
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "PECB_DT_CRIACAO")
    private Date dataCriacao;

    /**
     * Construtor default.
     */
    public PessoaCidadeBase() {
    }

    /**
     * Construtor com preenchimento da entidade.
     * 
     * @param codigoPessoaCidadeBase
     *            Valor do atributo codigoPessoaCidadeBase;
     * @param pessoa
     *            Valor do atributo pessoa;
     * @param cidadeBase
     *            Valor do atributo cidadeBase;
     */
    public PessoaCidadeBase(final Long codigoPessoaCidadeBase,
            final Pessoa pessoa, final CidadeBase cidadeBase) {
        this.codigoPessoaCidadeBase = codigoPessoaCidadeBase;
        this.pessoa = pessoa;
        this.cidadeBase = cidadeBase;
    }

    /**
     * Construtor com preenchimento da entidade.
     * 
     * @param codigoPessoaCidadeBase
     *            Valor do atributo codigoPessoaCidadeBase;
     * @param pessoa
     *            Valor do atributo pessoa;
     * @param cidadeBase
     *            Valor do atributo cidadeBase;
     * @param dataInicio
     *            Valor do atributo dataInicio;
     * @param dataFim
     *            Valor do atributo dataFim;
     * @param dataCriacao
     *            Valor do atributo dataCriacao;
     */
    public PessoaCidadeBase(final Long codigoPessoaCidadeBase,
            final Pessoa pessoa, final CidadeBase cidadeBase,
            final Date dataInicio, final Date dataFim, final Date dataCriacao) {
        this.codigoPessoaCidadeBase = codigoPessoaCidadeBase;
        this.pessoa = pessoa;
        this.cidadeBase = cidadeBase;
        this.dataInicio = dataInicio;
        this.dataFim = dataFim;
        this.dataCriacao = dataCriacao;
    }

    /**
     * Obtem o valor do atributo codigoPessoaCidadeBase.<BR>
     * Atributo gerado a partir da coluna PECB_CD_PESSOA_CIDADE_BASE.
     * 
     * @return Valor do atributo codigoPessoaCidadeBase.
     */
    public Long getCodigoPessoaCidadeBase() {
        return this.codigoPessoaCidadeBase;
    }

    /**
     * Atualiza o valor do atributo codigoPessoaCidadeBase.<BR>
     * Atributo gerado a partir da coluna PECB_CD_PESSOA_CIDADE_BASE.
     * 
     * @param codigoPessoaCidadeBase
     *            Novo valor para o atributo codigoPessoaCidadeBase.
     */
    public void setCodigoPessoaCidadeBase(final Long codigoPessoaCidadeBase) {
        this.codigoPessoaCidadeBase = codigoPessoaCidadeBase;
    }

    /**
     * Obtem o valor do atributo pessoa.<BR>
     * Atributo gerado a partir da coluna PESS_CD_PESSOA.
     * 
     * @return Valor do atributo pessoa.
     */
    public Pessoa getPessoa() {
        return this.pessoa;
    }

    /**
     * Atualiza o valor do atributo pessoa.<BR>
     * Atributo gerado a partir da coluna PESS_CD_PESSOA.
     * 
     * @param pessoa
     *            Novo valor para o atributo pessoa.
     */
    public void setPessoa(final Pessoa pessoa) {
        this.pessoa = pessoa;
    }

    /**
     * Obtem o valor do atributo cidadeBase.<BR>
     * Atributo gerado a partir da coluna CIBA_CD_CIDADE_BASE.
     * 
     * @return Valor do atributo cidadeBase.
     */
    public CidadeBase getCidadeBase() {
        return this.cidadeBase;
    }

    /**
     * Atualiza o valor do atributo cidadeBase.<BR>
     * Atributo gerado a partir da coluna CIBA_CD_CIDADE_BASE.
     * 
     * @param cidadeBase
     *            Novo valor para o atributo cidadeBase.
     */
    public void setCidadeBase(final CidadeBase cidadeBase) {
        this.cidadeBase = cidadeBase;
    }

    /**
     * Obtem o valor do atributo dataInicio.<BR>
     * Atributo gerado a partir da coluna PECB_DT_INICIO.
     * 
     * @return Valor do atributo dataInicio.
     */
    public Date getDataInicio() {
        return this.dataInicio;
    }

    /**
     * Atualiza o valor do atributo dataInicio.<BR>
     * Atributo gerado a partir da coluna PECB_DT_INICIO.
     * 
     * @param dataInicio
     *            Novo valor para o atributo dataInicio.
     */
    public void setDataInicio(final Date dataInicio) {
        this.dataInicio = dataInicio;
    }

    /**
     * Obtem o valor do atributo dataFim.<BR>
     * Atributo gerado a partir da coluna PECB_DT_FIM.
     * 
     * @return Valor do atributo dataFim.
     */
    public Date getDataFim() {
        return this.dataFim;
    }

    /**
     * Atualiza o valor do atributo dataFim.<BR>
     * Atributo gerado a partir da coluna PECB_DT_FIM.
     * 
     * @param dataFim
     *            Novo valor para o atributo dataFim.
     */
    public void setDataFim(final Date dataFim) {
        this.dataFim = dataFim;
    }

    /**
     * Obtem o valor do atributo dataCriacao.<BR>
     * Atributo gerado a partir da coluna PECB_DT_CRIACAO.
     * 
     * @return Valor do atributo dataCriacao.
     */
    public Date getDataCriacao() {
        return this.dataCriacao;
    }

    /**
     * Atualiza o valor do atributo dataCriacao.<BR>
     * Atributo gerado a partir da coluna PECB_DT_CRIACAO.
     * 
     * @param dataCriacao
     *            Novo valor para o atributo dataCriacao.
     */
    public void setDataCriacao(final Date dataCriacao) {
        this.dataCriacao = dataCriacao;
    }

    /**
     * @see Object#toString()
     * @return String
     */
    @Override
    public String toString() {
        StringBuffer buffer = new StringBuffer();

        buffer.append(getClass().getName()).append("@").append(
                Integer.toHexString(hashCode())).append(" [");
        buffer.append("codigoPessoaCidadeBase").append("='").append(
                getCodigoPessoaCidadeBase()).append("' ");
        buffer.append("pessoa").append("='").append(getPessoa()).append("' ");
        buffer.append("cidadeBase").append("='").append(getCidadeBase())
                .append("' ");
        buffer.append("dataInicio").append("='").append(getDataInicio())
                .append("' ");
        buffer.append("dataFim").append("='").append(getDataFim()).append("' ");
        buffer.append("dataCriacao").append("='").append(getDataCriacao())
                .append("' ");
        buffer.append("]");

        return buffer.toString();
    }

}
