/*
 * @(#) Recurso.java
 * Copyright (c) 2008 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

/**
 * Entity gerado a partir da tabela RECURSO.
 *
 * @author Generated by Hibernate Tools 3.2.4.GA
 * @since 12/08/2009 17:14:06
 * @version 09/01/19 1.1 10:08:00
 */
@Entity
@Table(name = "RECURSO")
@NamedQueries({
    @NamedQuery(name = "Recurso.findAll", query = "SELECT t FROM Recurso t "
        + "WHERE (t.indicadorAtivo = 'A') "
        + "ORDER BY t.indicadorTipoRecurso ASC, t.codigoMnemonico ASC "),
        
    @NamedQuery(name = "Recurso.findByMnemonico", query = "SELECT r FROM Recurso r "
        + " WHERE r.codigoMnemonico = ? "
        + " ORDER BY r.indicadorTipoRecurso ASC, r.codigoMnemonico ASC "),
    
    @NamedQuery(name = "Recurso.findByTipo", query = "SELECT r FROM Recurso r "
        + "WHERE r.indicadorTipoRecurso = ? "
        + "  AND (r.indicadorAtivo = 'A') "
        + "ORDER BY r.codigoMnemonico ASC "),
            
    @NamedQuery(name = "Recurso.quickSearch", query = "SELECT r FROM Recurso r "
        + " WHERE (UPPER(r.codigoMnemonico) like '%'||TRIM(UPPER(?))||'%') "
        + " AND ( (r.indicadorTipoRecurso = ?) OR (? is null) )"
        + " AND r.indicadorAtivo = 'A' "
        + "ORDER BY r.indicadorTipoRecurso ASC, r.codigoMnemonico ASC ")
})
public class Recurso implements java.io.Serializable, Cloneable {

    // ========================================================================
    // BEGIN - Coloque aqui o codigo manual
    // ========================================================================
    
    /** Constante para NamedQuery "Recurso.quickSearch". */
    public static final String FIND_QUICK_SEARCH = "Recurso.quickSearch";
    
    /** Constante para NamedQuery "Recurso.findByMnemonico". */
    public static final String FIND_BY_MNEMONICO = "Recurso.findByMnemonico";
    
    /** Constante para NamedQuery "Recurso.findByTipo". */
    public static final String FIND_BY_TIPO = "Recurso.findByTipo";
    
    /**
     * Realiza uma copia do objeto, porem com uma referencia diferente.
     * 
     * @return a cópia do Objeto
     */
    public Recurso getClone() {
       try {
        return (Recurso) super.clone();
        } catch (CloneNotSupportedException e) {
            e.printStackTrace();
            return null;
        }  
    }
    
    // ========================================================================
    // END
    // ========================================================================
    
    /**
     * Valor do serialVersionUID.
     */
    private static final long serialVersionUID = 1L;

    /** 
     * Constante para NamedQuery "Recurso.findAll".
     */
    public static final String FIND_ALL = "Recurso.findAll";

    /**
     * Atributo gerado a partir da coluna RECU_CD_RECURSO.
     * Codigo do Recurso
     */
    @Id
    @GeneratedValue(generator = "RecursoSeq")
    @SequenceGenerator(name = "RecursoSeq", sequenceName = "SQ_RECU_CD_RECURSO", allocationSize = 1)
    @Column(name = "RECU_CD_RECURSO", unique = true, nullable = false, precision = 18, scale = 0)
    private Long codigoRecurso;

    /**
     * Atributo gerado a partir da coluna RECU_CD_MNEMONICO.
     * Nome do Recurso
     */

    @Column(name = "RECU_CD_MNEMONICO", length = 50)
    private String codigoMnemonico;

    /**
     * Atributo gerado a partir da coluna RECU_IN_TIPO_RECURSO.
     */

    @Column(name = "RECU_IN_TIPO_RECURSO", length = 2)
    private String indicadorTipoRecurso;

    /**
     * Atributo gerado a partir da coluna RECU_IN_ATIVO.
     */

    @Column(name = "RECU_IN_ATIVO", nullable = false, length = 1)
    private String indicadorAtivo;

    /**
     * Relacionamento um pra muitos.
     */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "recurso")
    private Set<PapelAlocacao> papelAlocacaos = new HashSet<PapelAlocacao>(0);

    /**
     * Relacionamento um pra muitos.
     */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "recurso")
    @OrderBy("codigoAlocacao")
    private Set<Alocacao> alocacaos = new HashSet<Alocacao>(0);

    /**
     * Relacionamento um pra muitos.
     */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "recurso")
    private Set<Pessoa> pessoas = new HashSet<Pessoa>(0);

    /**
     * Construtor default.
     */
    public Recurso() {
    }

    /**
     * Construtor com preenchimento da entidade.
     * @param codigoRecurso Valor do atributo codigoRecurso;
     * @param indicadorAtivo Valor do atributo indicadorAtivo;
     */
    public Recurso(final Long codigoRecurso, final String indicadorAtivo) {
        this.codigoRecurso = codigoRecurso;
        this.indicadorAtivo = indicadorAtivo;
    }

    /**
     * Construtor com preenchimento da entidade.
     * @param codigoRecurso Valor do atributo codigoRecurso;
     * @param codigoMnemonico Valor do atributo codigoMnemonico;
     * @param indicadorTipoRecurso Valor do atributo indicadorTipoRecurso;
     * @param indicadorAtivo Valor do atributo indicadorAtivo;
     * @param papelAlocacaos Valor do atributo papelAlocacaos;
     * @param alocacaos Valor do atributo alocacaos;
     * @param pessoas Valor do atributo pessoas;
     */
    public Recurso(final Long codigoRecurso, final String codigoMnemonico,
            final String indicadorTipoRecurso, final String indicadorAtivo,
            final Set<PapelAlocacao> papelAlocacaos, final Set<Alocacao> alocacaos,
            final Set<Pessoa> pessoas) {
        this.codigoRecurso = codigoRecurso;
        this.codigoMnemonico = codigoMnemonico;
        this.indicadorTipoRecurso = indicadorTipoRecurso;
        this.indicadorAtivo = indicadorAtivo;
        this.papelAlocacaos = papelAlocacaos;
        this.alocacaos = alocacaos;
        this.pessoas = pessoas;
    }

    /**
     * Obtem o valor do atributo codigoRecurso.<BR>
     * Atributo gerado a partir da coluna RECU_CD_RECURSO.
     * Codigo do Recurso
     * @return Valor do atributo codigoRecurso.
     */
    public Long getCodigoRecurso() {
        return this.codigoRecurso;
    }

    /**
     * Atualiza o valor do atributo codigoRecurso.<BR>
     * Atributo gerado a partir da coluna RECU_CD_RECURSO.
     * Codigo do Recurso
     * @param codigoRecurso Novo valor para o atributo codigoRecurso.
     */
    public void setCodigoRecurso(final Long codigoRecurso) {
        this.codigoRecurso = codigoRecurso;
    }

    /**
     * Obtem o valor do atributo codigoMnemonico.<BR>
     * Atributo gerado a partir da coluna RECU_CD_MNEMONICO.
     * Nome do Recurso
     * @return Valor do atributo codigoMnemonico.
     */
    public String getCodigoMnemonico() {
        return this.codigoMnemonico;
    }

    /**
     * Atualiza o valor do atributo codigoMnemonico.<BR>
     * Atributo gerado a partir da coluna RECU_CD_MNEMONICO.
     * Nome do Recurso
     * @param codigoMnemonico Novo valor para o atributo codigoMnemonico.
     */
    public void setCodigoMnemonico(final String codigoMnemonico) {
        this.codigoMnemonico = codigoMnemonico;
    }

    /**
     * Obtem o valor do atributo indicadorTipoRecurso.<BR>
     * Atributo gerado a partir da coluna RECU_IN_TIPO_RECURSO.
     * @return Valor do atributo indicadorTipoRecurso.
     */
    public String getIndicadorTipoRecurso() {
        return this.indicadorTipoRecurso;
    }

    /**
     * Atualiza o valor do atributo indicadorTipoRecurso.<BR>
     * Atributo gerado a partir da coluna RECU_IN_TIPO_RECURSO.
     * @param indicadorTipoRecurso Novo valor para o atributo indicadorTipoRecurso.
     */
    public void setIndicadorTipoRecurso(final String indicadorTipoRecurso) {
        this.indicadorTipoRecurso = indicadorTipoRecurso;
    }

    /**
     * Obtem o valor do atributo indicadorAtivo.<BR>
     * Atributo gerado a partir da coluna RECU_IN_ATIVO.
     * @return Valor do atributo indicadorAtivo.
     */
    public String getIndicadorAtivo() {
        return this.indicadorAtivo;
    }

    /**
     * Atualiza o valor do atributo indicadorAtivo.<BR>
     * Atributo gerado a partir da coluna RECU_IN_ATIVO.
     * @param indicadorAtivo Novo valor para o atributo indicadorAtivo.
     */
    public void setIndicadorAtivo(final String indicadorAtivo) {
        this.indicadorAtivo = indicadorAtivo;
    }

    /**
     * Obtem o valor do atributo papelAlocacaos.<BR>

     * @return Valor do atributo papelAlocacaos.
     */
    public Set<PapelAlocacao> getPapelAlocacaos() {
        return this.papelAlocacaos;
    }

    /**
     * Atualiza o valor do atributo papelAlocacaos.<BR>

     * @param papelAlocacaos Novo valor para o atributo papelAlocacaos.
     */
    public void setPapelAlocacaos(final Set<PapelAlocacao> papelAlocacaos) {
        this.papelAlocacaos = papelAlocacaos;
    }

    /**
     * Obtem o valor do atributo alocacaos.<BR>

     * @return Valor do atributo alocacaos.
     */
    public Set<Alocacao> getAlocacaos() {
        return this.alocacaos;
    }

    /**
     * Atualiza o valor do atributo alocacaos.<BR>

     * @param alocacaos Novo valor para o atributo alocacaos.
     */
    public void setAlocacaos(final Set<Alocacao> alocacaos) {
        this.alocacaos = alocacaos;
    }

    /**
     * Obtem o valor do atributo pessoas.<BR>

     * @return Valor do atributo pessoas.
     */
    public Set<Pessoa> getPessoas() {
        return this.pessoas;
    }

    /**
     * Atualiza o valor do atributo pessoas.<BR>

     * @param pessoas Novo valor para o atributo pessoas.
     */
    public void setPessoas(final Set<Pessoa> pessoas) {
        this.pessoas = pessoas;
    }

    /**
     * @see Object#toString()
     * @return representação String do Objeto
     */
    @Override
    public String toString() {
        StringBuffer buffer = new StringBuffer();

        buffer.append(getClass().getName()).append("@").append(
                Integer.toHexString(hashCode())).append(" [");
        buffer.append("codigoRecurso").append("='").append(getCodigoRecurso())
                .append("' ");
        buffer.append("codigoMnemonico").append("='").append(
                getCodigoMnemonico()).append("' ");
        buffer.append("indicadorTipoRecurso").append("='").append(
                getIndicadorTipoRecurso()).append("' ");
        buffer.append("indicadorAtivo").append("='")
                .append(getIndicadorAtivo()).append("' ");
        buffer.append("]");

        return buffer.toString();
    }

}
