/*
 * @(#) Etiqueta.java
 * Copyright (c) 2008 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import javax.persistence.*;
import java.util.ArrayList;
import java.util.List;

/**
 * Entity gerado a partir da tabela ETIQUETA.
 * 
 * @author Generated by Hibernate Tools 3.2.4.GA
 * @since 15/10/2009 09:03:53
 * @version 09/01/19 1.1 10:08:00
 */
@Entity
@Table(name = "ETIQUETA")
@NamedQueries({
        @NamedQuery(name = "Etiqueta.findAll", query = "SELECT t FROM Etiqueta t"),

        @NamedQuery(name = "Etiqueta.findByCliente", query = "SELECT etiq FROM Etiqueta etiq "
                + "WHERE ( (etiq.cliente.codigoCliente = ?) OR (? = 0L) ) "
                + "ORDER BY etiq.nomeEtiqueta ASC "),
                
        @NamedQuery(name = "Etiqueta.findAtivaByCliente", query = "SELECT etiq FROM Etiqueta etiq "
            + "WHERE ( (etiq.cliente.codigoCliente = ?1) OR (?1 = 0L) ) "
            + "AND etiq.indicadorStatus = 'A' "
            + "ORDER BY etiq.nomeEtiqueta ASC "),
            
        @NamedQuery(name = "Etiqueta.findByNomeAndCliente", query = "SELECT etiq FROM Etiqueta etiq "
            + "WHERE etiq.cliente.codigoCliente = ?2 "
            + "AND etiq.nomeEtiqueta = ?1 ")                
})
public class Etiqueta implements java.io.Serializable, Cloneable {

    // ========================================================================
    // BEGIN - Coloque aqui o codigo manual
    // ========================================================================

    /**
     * Constante para NamedQuery "Etiqueta.findByCliente".
     */
    public static final String FIND_BY_CLIENTE = "Etiqueta.findByCliente";
    
    /**
     * Constante para NamedQuery "Etiqueta.findAtivaByCliente".
     */
    public static final String FIND_ATIVA_BY_CLIENTE = "Etiqueta.findAtivaByCliente";
    
    /**
     * Constante para NamedQuery "Etiqueta.findByNomeAndCliente".
     */
    public static final String FIND_BY_NOME_CLIENTE = "Etiqueta.findByNomeAndCliente";

    /** Lista de EtiquetaAlocacao relacionado com a Etiqueta corrente. */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "etiqueta", cascade = CascadeType.ALL)
    private List<EtiquetaAlocacao> etiquetaAlocacaos = new ArrayList<EtiquetaAlocacao>(0);

    /** Lista de EtiquetaItemReceita relacionado com a Etiqueta corrente. */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "etiqueta", cascade = CascadeType.ALL)
    private List<EtiquetaItemReceita> etiquetaItemReceitas = new ArrayList<EtiquetaItemReceita>(0);    
    

    /**
     * Obtem o valor do atributo etiquetaAlocacaos.<BR>
     * 
     * @return Valor do atributo etiquetaAlocacaos.
     */
    public List<EtiquetaAlocacao> getEtiquetaAlocacaos() {
        return this.etiquetaAlocacaos;
    }

    /**
     * Atualiza o valor do atributo etiquetaAlocacaos.<BR>
     * 
     * @param etiquetaAlocacaos
     *            Novo valor para o atributo etiquetaAlocacaos.
     */
    public void setEtiquetaAlocacaos(
            final List<EtiquetaAlocacao> etiquetaAlocacaos) {
        this.etiquetaAlocacaos = etiquetaAlocacaos;
    }

    /**
     * Obtem o valor do atributo etiquetaItemReceitas.<BR>
     * 
     * @return Valor do atributo etiquetaItemReceitas.
     */
    public List<EtiquetaItemReceita> getEtiquetaItemReceitas() {
        return this.etiquetaItemReceitas;
    }

    /**
     * Atualiza o valor do atributo etiquetaItemReceitas.<BR>
     * 
     * @param etiquetaItemReceitas
     *            Novo valor para o atributo etiquetaItemReceitas.
     */
    public void setEtiquetaItemReceitas(
            final List<EtiquetaItemReceita> etiquetaItemReceitas) {
        this.etiquetaItemReceitas = etiquetaItemReceitas;
    }

    /**
     * Realiza uma copia do objeto, porem com uma referencia diferente.
     * 
     * @return a cópia do objeto
     */
    public Etiqueta getClone() {
        try {
            Etiqueta clone = (Etiqueta) super.clone();
            return clone;
        } catch (CloneNotSupportedException e) {
            e.printStackTrace();
            return null;
        }
    }

    // ========================================================================
    // END
    // ========================================================================

    /**
     * Valor do serialVersionUID.
     */
    private static final long serialVersionUID = 1L;

    /**
     * Constante para NamedQuery "Etiqueta.findAll".
     */
    public static final String FIND_ALL = "Etiqueta.findAll";
        
    /** 
     * Constante para o status de ativo".
     */
    public static final String ETIQUETA_ATIVO = "A";
    
    /** 
     * Constante para status de inativo".
     */
    public static final String ETIQUETA_INATIVO = "I";    
        
    /**
     * Atributo gerado a partir da coluna ETIQ_CD_ETIQUETA.
     */
    @Id
    @GeneratedValue(generator = "EtiquetaSeq")
    @SequenceGenerator(name = "EtiquetaSeq", sequenceName = "SQ_ETIQ_CD_ETIQUETA", allocationSize = 1)
    @Column(name = "ETIQ_CD_ETIQUETA", unique = true, nullable = false, precision = 18, scale = 0)
    private Long codigoEtiqueta;

    /**
     * Atributo gerado a partir da coluna CLIE_CD_CLIENTE.
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CLIE_CD_CLIENTE", nullable = false)
    private Cliente cliente;

    /**
     * Atributo gerado a partir da coluna ETIQ_NM_ETIQUETA.
     */

    @Column(name = "ETIQ_NM_ETIQUETA", length = 20)
    private String nomeEtiqueta;
    
    /**
     * Atributo gerado a partir da coluna ETIQ_IN_STATUS.
     * A=Ativo; I=Inativo;
     */
    @Column(name = "ETIQ_IN_STATUS", length = 1)
    private String indicadorStatus;
    
    /**
     * Construtor default.
     */
    public Etiqueta() {
    }

    /**
     * Construtor com preenchimento da entidade.
     * 
     * @param codigoEtiqueta
     *            Valor do atributo codigoEtiqueta;
     * @param cliente
     *            Valor do atributo cliente;
     */
    public Etiqueta(final Long codigoEtiqueta, final Cliente cliente) {
        this.codigoEtiqueta = codigoEtiqueta;
        this.cliente = cliente;
    }

    /**
     * Construtor com preenchimento da entidade.
     * 
     * @param codigoEtiqueta
     *            Valor do atributo codigoEtiqueta;
     * @param cliente
     *            Valor do atributo cliente;
     * @param nomeEtiqueta
     *            Valor do atributo nomeEtiqueta;
     * @param etiquetaAlocacaos
     *            Valor do atributo etiquetaAlocacaos;
     * @param etiquetaItemReceitas
     *            Valor do atributo etiquetaItemReceitas;
     * @param indicadorStatus
     *            Valor do atributo indicadorStatus;
     */
    public Etiqueta(final Long codigoEtiqueta, final Cliente cliente,
            final String nomeEtiqueta,
            final List<EtiquetaAlocacao> etiquetaAlocacaos,
            final List<EtiquetaItemReceita> etiquetaItemReceitas,
            final String indicadorStatus) {
        this.codigoEtiqueta = codigoEtiqueta;
        this.cliente = cliente;
        this.nomeEtiqueta = nomeEtiqueta;
        this.etiquetaAlocacaos = etiquetaAlocacaos;
        this.etiquetaItemReceitas = etiquetaItemReceitas;
        this.indicadorStatus = indicadorStatus;
    }

    /**
     * Obtem o valor do atributo codigoEtiqueta.<BR>
     * Atributo gerado a partir da coluna ETIQ_CD_ETIQUETA.
     * 
     * @return Valor do atributo codigoEtiqueta.
     */
    public Long getCodigoEtiqueta() {
        return this.codigoEtiqueta;
    }

    /**
     * Atualiza o valor do atributo codigoEtiqueta.<BR>
     * Atributo gerado a partir da coluna ETIQ_CD_ETIQUETA.
     * 
     * @param codigoEtiqueta
     *            Novo valor para o atributo codigoEtiqueta.
     */
    public void setCodigoEtiqueta(final Long codigoEtiqueta) {
        this.codigoEtiqueta = codigoEtiqueta;
    }

    /**
     * Obtem o valor do atributo cliente.<BR>
     * Atributo gerado a partir da coluna CLIE_CD_CLIENTE.
     * 
     * @return Valor do atributo cliente.
     */
    public Cliente getCliente() {
        return this.cliente;
    }

    /**
     * Atualiza o valor do atributo cliente.<BR>
     * Atributo gerado a partir da coluna CLIE_CD_CLIENTE.
     * 
     * @param cliente
     *            Novo valor para o atributo cliente.
     */
    public void setCliente(final Cliente cliente) {
        this.cliente = cliente;
    }

    /**
     * Obtem o valor do atributo nomeEtiqueta.<BR>
     * Atributo gerado a partir da coluna ETIQ_NM_ETIQUETA.
     * 
     * @return Valor do atributo nomeEtiqueta.
     */
    public String getNomeEtiqueta() {
        return this.nomeEtiqueta;
    }

    /**
     * Atualiza o valor do atributo nomeEtiqueta.<BR>
     * Atributo gerado a partir da coluna ETIQ_NM_ETIQUETA.
     * 
     * @param nomeEtiqueta
     *            Novo valor para o atributo nomeEtiqueta.
     */
    public void setNomeEtiqueta(final String nomeEtiqueta) {
        this.nomeEtiqueta = nomeEtiqueta;
    }
    
    /**
     * Obtem o valor do atributo indicadorStatus.<BR>
     * Atributo gerado a partir da coluna ETIQ_IN_STATUS.
     * A=Ativo; I=Inativo;
     * @return Valor do atributo indicadorStatus.
     */
    public String getIndicadorStatus() {
        return this.indicadorStatus;
    }

    /**
     * Atualiza o valor do atributo indicadorStatus.<BR>
     * Atributo gerado a partir da coluna ETIQ_IN_STATUS.
     * A=Ativo; I=Inativo;
     * @param indicadorStatus Novo valor para o atributo indicadorStatus.
     */
    public void setIndicadorStatus(final String indicadorStatus) {
        this.indicadorStatus = indicadorStatus;
    }

    /**
     * @see Object#toString()
     * @return representação String do Objeto
     */
    @Override
    public String toString() {
        StringBuffer buffer = new StringBuffer();

        buffer.append(getClass().getName()).append("@").append(
                Integer.toHexString(hashCode())).append(" [");
        buffer.append("codigoEtiqueta").append("='")
                .append(getCodigoEtiqueta()).append("' ");
        buffer.append("cliente").append("='").append(getCliente()).append("' ");
        buffer.append("nomeEtiqueta").append("='").append(getNomeEtiqueta())
                .append("' ");
        buffer.append("indicadorStatus").append("='").append(
                getIndicadorStatus()).append("' ");
        buffer.append("]");

        return buffer.toString();
    }

}
