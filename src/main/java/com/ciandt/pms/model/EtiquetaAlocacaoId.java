/*
 * @(#) EtiquetaAlocacaoId.java
 * Copyright (c) 2008 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * EtiquetaAlocacaoId generated by hbm2java.
 *
 * @author Generated by Hibernate Tools 3.2.4.GA
 * @since 15/10/2009 09:03:53
 * @version 09/01/19 1.1 10:08:00
 */
@Embeddable
public class EtiquetaAlocacaoId implements java.io.Serializable {

    /**
     * Valor do serialVersionUID.
     */
    private static final long serialVersionUID = 1L;

    /** 
     * Constante para NamedQuery "EtiquetaAlocacaoId.findAll".
     */
    public static final String FIND_ALL = "EtiquetaAlocacaoId.findAll";

    /**
     * Atributo gerado a partir da coluna ALOC_CD_ALOCACAO.
     */
    @Column(name = "ALOC_CD_ALOCACAO", nullable = false, precision = 18, scale = 0)
    private Long codigoAlocacao;

    /**
     * Atributo gerado a partir da coluna ETIQ_CD_ETIQUETA.
     */
    @Column(name = "ETIQ_CD_ETIQUETA", nullable = false, precision = 18, scale = 0)
    private Long codigoEtiqueta;

    /**
     * Construtor default.
     */
    public EtiquetaAlocacaoId() {
    }

    /**
     * Construtor com preenchimento da entidade.
     * @param codigoAlocacao Valor do atributo codigoAlocacao;
     * @param codigoEtiqueta Valor do atributo codigoEtiqueta;
     */
    public EtiquetaAlocacaoId(final Long codigoAlocacao, final Long codigoEtiqueta) {
        this.codigoAlocacao = codigoAlocacao;
        this.codigoEtiqueta = codigoEtiqueta;
    }

    /**
     * Obtem o valor do atributo codigoAlocacao.<BR>

     * @return Valor do atributo codigoAlocacao.
     */
    public Long getCodigoAlocacao() {
        return this.codigoAlocacao;
    }

    /**
     * Atualiza o valor do atributo codigoAlocacao.<BR>

     * @param codigoAlocacao Novo valor para o atributo codigoAlocacao.
     */
    public void setCodigoAlocacao(final Long codigoAlocacao) {
        this.codigoAlocacao = codigoAlocacao;
    }

    /**
     * Obtem o valor do atributo codigoEtiqueta.<BR>

     * @return Valor do atributo codigoEtiqueta.
     */
    public Long getCodigoEtiqueta() {
        return this.codigoEtiqueta;
    }

    /**
     * Atualiza o valor do atributo codigoEtiqueta.<BR>

     * @param codigoEtiqueta Novo valor para o atributo codigoEtiqueta.
     */
    public void setCodigoEtiqueta(final Long codigoEtiqueta) {
        this.codigoEtiqueta = codigoEtiqueta;
    }

    /**
     * @see Object#equals(Object)
     * 
     * @param other
     *            Valor do atributo other;
     * @return true se os objetos sao iguais, caso contrário retorna false
     */
    @Override
    public boolean equals(final Object other) {
        if ((this == other)) {
            return true;
        }
        if ((other == null)) {
            return false;
        }
        if (!(other instanceof EtiquetaAlocacaoId)) {
            return false;
        }
        EtiquetaAlocacaoId castOther = (EtiquetaAlocacaoId) other;

        return ((this.getCodigoAlocacao() == castOther.getCodigoAlocacao()) || (this
                .getCodigoAlocacao() != null
                && castOther.getCodigoAlocacao() != null && this
                .getCodigoAlocacao().equals(castOther.getCodigoAlocacao())))
                && ((this.getCodigoEtiqueta() == castOther.getCodigoEtiqueta()) || (this
                        .getCodigoEtiqueta() != null
                        && castOther.getCodigoEtiqueta() != null && this
                        .getCodigoEtiqueta().equals(
                                castOther.getCodigoEtiqueta())));
    }

    /**
     * @see Object#hashCode()
     * @return HashCode do Objeto
     */
    @Override
    public int hashCode() {
        int result = 17;

        result = 37
                * result
                + (getCodigoAlocacao() == null ? 0 : this.getCodigoAlocacao()
                        .hashCode());
        result = 37
                * result
                + (getCodigoEtiqueta() == null ? 0 : this.getCodigoEtiqueta()
                        .hashCode());
        return result;
    }

}
