/*
 * @(#) Cliente.java
 * Copyright (c) 2008 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import com.google.common.base.Preconditions;
import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;
import org.hibernate.envers.NotAudited;
import org.hibernate.envers.RelationTargetAuditMode;

import javax.persistence.*;
import java.util.ArrayList;
import java.util.List;

/**
 * Entity gerado a partir da tabela CLIENTE. Relacao de Clientes
 * 
 * @author Generated by Hibernate Tools 3.2.4.GA
 * @since 04/08/2009 09:09:36
 * @version 09/01/19 1.1 10:08:00
 */
@Entity
@Table(name = "CLIENTE")
@Audited
@AuditTable(value = "CLIENTE_AUD")
@NamedQueries({
        @NamedQuery(name = "Cliente.findAll", query = "SELECT t FROM Cliente t "
                + "ORDER BY t.nomeCliente ASC "),

        @NamedQuery(name = "Cliente.findAllClientePai", query = "SELECT cli FROM Cliente cli "
                + "WHERE (cli.cliente.codigoCliente is null) "
                + "AND (cli.indicadorAtivo = 'A') "
                + "ORDER BY cli.nomeCliente ASC "),

        @NamedQuery(name = "Cliente.findAllClientePaiForComboBox", query = "SELECT new Cliente(cli.codigoCliente, cli.nomeCliente) FROM Cliente cli "
                + "WHERE (cli.cliente.codigoCliente is null) "
                + "AND (cli.indicadorAtivo = 'A') "
                + "ORDER BY cli.nomeCliente ASC "),

        @NamedQuery(name = "Cliente.findAllClienteFilho", query = "SELECT cli FROM Cliente cli "
                + "WHERE (cli.cliente.codigoCliente is not null) "
                + "AND (cli.indicadorAtivo = 'A') "
                + "ORDER BY cli.nomeCliente ASC "),

        @NamedQuery(name = "Cliente.findByClientePai", query = "SELECT cli FROM Cliente cli "
                + "WHERE (cli.cliente.codigoCliente = ?) "
                + "AND (cli.indicadorAtivo = 'A') "
                + "ORDER BY cli.nomeCliente ASC "),

        @NamedQuery(name = "Cliente.findByFilterClientePai", query = "SELECT cli FROM Cliente cli "
                + " LEFT JOIN FETCH cli.potencial potencial "
                + "WHERE (UPPER(cli.nomeCliente) like '%'||TRIM(UPPER(?))||'%' OR (? is null)) "
                + "AND (UPPER(cli.indicadorAtivo) like '%'||TRIM(UPPER(?))||'%' OR (? is null)) "
                + "AND (cli.cliente.codigoCliente is null) "
                + "AND ((potencial.codigoPotencial = ?) OR (? = 0L)) "
                + "ORDER BY cli.nomeCliente ASC "),

        @NamedQuery(name = "Cliente.findByFilterClienteFilho", query = "SELECT cli FROM Cliente cli "
                + " LEFT JOIN FETCH cli.cliente cliPai "
                + " WHERE (UPPER(cli.nomeCliente) like '%'||TRIM(UPPER(?))||'%' OR (? is null)) "
                + " AND (UPPER(cli.indicadorAtivo) like '%'||TRIM(UPPER(?))||'%' OR (? is null)) "
                + " AND (cliPai.codigoCliente is not null) "
                + " AND (cliPai.codigoCliente = ? OR (? = 0L)) "
                + " AND (UPPER(cli.codigoCnpj) like '%'||TRIM(UPPER(?))||'%' OR (? is null)) "
                + " AND (UPPER(cli.textoPais) like '%'||TRIM(UPPER(?))||'%' OR (? is null)) "
                + " AND (UPPER(cli.textoEstado) like '%'||TRIM(UPPER(?))||'%' OR (? is null)) "
                + " AND (UPPER(cli.textoCidade) like '%'||TRIM(UPPER(?))||'%' OR (? is null)) "
                + " AND (UPPER(cli.codigoMnemonico) like '%'||TRIM(UPPER(?))||'%' OR (? is null)) "
                + " AND (UPPER(cli.indicadorTipo) like '%'||TRIM(UPPER(?))||'%' OR (? is null)) "
                + " ORDER BY cli.nomeCliente ASC "),

        @NamedQuery(name = "Cliente.findByCentroLucro", query = "SELECT c FROM Cliente c"
        		+ " JOIN c.msas m"
        		+ " JOIN m.contratoPraticas cp"
        		+ " JOIN cp.centroLucros cl"
        		+ " where cl.codigoCentroLucro = :codigoCentroLucro"),

        @NamedQuery(name = "Cliente.findByCodigoOracleTaxpayerCustomer", query = "SELECT c FROM Cliente c"
                + " where c.codigoOracleTaxpayerCustomer = :codigoOracleTaxpayerCustomer"
                + " and (c.indicadorAtivo = 'A')")
})
public class Cliente implements java.io.Serializable {

    // ========================================================================
    // BEGIN - Coloque aqui o codigo manual
    // ========================================================================

    /** Constante para NamedQuery "Cliente.findByFilterClientePai". */
    public static final String FIND_BY_FILTER_CLIENTE_PAI =
            "Cliente.findByFilterClientePai";

    /** Constante para NamedQuery "Cliente.findByFilterClienteFilho". */
    public static final String FIND_BY_FILTER_CLIENTE_FILHO =
            "Cliente.findByFilterClienteFilho";

    /** Constante para NamedQuery "Cliente.findAllClientePai". */
    public static final String FIND_ALL_CLIENTE_PAI =
            "Cliente.findAllClientePai";

    public static final String FIND_ALL_CLIENTE_PAI_FOR_COMBOBOX =
            "Cliente.findAllClientePaiForComboBox";

    /** Constante para NamedQuery "Cliente.findAllClienteFilho". */
    public static final String FIND_ALL_CLIENTE_FILHO =
            "Cliente.findAllClienteFilho";

    /** Constante para NamedQuery "Cliente.findByClientePai". */
    public static final String FIND_BY_CLIENTE_PAI = "Cliente.findByClientePai";
    
    /** Constante para NamedQuery "Cliente.findByCentroLucro". */
    public static final String FIND_BY_CENTRO_LUCRO = "Cliente.findByCentroLucro";

    /** Constante para NamedQuery "Cliente.findByCodigoOracleTaxpayerCustomer". */
    public static final String FIND_BY_CODIGO_ORACLE_TAXPAYER_CUSTOMER = "Cliente.findByCodigoOracleTaxpayerCustomer";

    public enum ClientEnum {
        SENSEDIA(3L, "SENSEDIA"),
        CIT_SOFITWARE(1L, "CI&T Software");

        private Long code;
        private String name;

        ClientEnum(Long code, String name) {
            this.code = code;
            this.name = name;
        }

        public Long getCode(){
            return this.code;
        }

        public String getName(){
            return this.name;
        }

        public static ClientEnum getInstanceByName(String name) {
            Preconditions.checkNotNull(name, "You must inform a name.");
            if (name.toUpperCase().contains("SENSEDIA")) {
                return SENSEDIA;
            } else {
                return CIT_SOFITWARE;
            }
        }
    }


    /** Lista de Msa - Relacionamento um para muitos. */
    @NotAudited
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "cliente")
    private List<Msa> msas = new ArrayList<Msa>(0);

    /**
     * Relacionamento um pra muitos.
     */
    @NotAudited
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "cliente")
    private List<Cliente> clientes = new ArrayList<Cliente>(0);

    /**
     * Relacionamento um pra muitos.
     */
    @NotAudited
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "cliente")
    private List<Etiqueta> etiquetas = new ArrayList<Etiqueta>(0);

    /**
     * Relacionamento um pra muitos.
     */
    @NotAudited
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "cliente")
    private List<DealFiscal> dealFiscals = new ArrayList<DealFiscal>(0);

	/** Lista de Fiscal Balance Acumulado. */
	@NotAudited
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cliente")
	private List<VwFiscalBalanceAcumulado> VwFiscalBalanceAcumulados = new ArrayList<VwFiscalBalanceAcumulado>(0);

    // ========================================================================
    // END
    // ========================================================================

    /**
     * Valor do serialVersionUID.
     */
    private static final long serialVersionUID = 1L;

    /**
     * Constante para NamedQuery "Cliente.findAll".
     */
    public static final String FIND_ALL = "Cliente.findAll";

    /**
     * Atributo gerado a partir da coluna CLIE_CD_CLIENTE. Codigo do Cliente
     */
    @Id
    @GeneratedValue(generator = "ClienteSeq")
    @SequenceGenerator(name = "ClienteSeq", sequenceName = "SQ_CLIE_CD_CLIENTE", allocationSize = 1)
    @Column(name = "CLIE_CD_CLIENTE", unique = true, nullable = false, precision = 18, scale = 0)
    private Long codigoCliente;

    /**
     * Atributo gerado a partir da coluna CLIE_CD_CLIENTE_PAI.
     */
    @Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CLIE_CD_CLIENTE_PAI")
    private Cliente cliente;

    /**
     * Atributo gerado a partir da coluna CLIE_NM_CLIENTE. Nome do Cliente
     */
    @Column(name = "CLIE_NM_CLIENTE", nullable = false, length = 100)
    private String nomeCliente;

    /**
     * Atributo gerado a partir da coluna CLIE_IN_ATIVO.
     */
    @Column(name = "CLIE_IN_ATIVO", nullable = false, length = 1)
    private String indicadorAtivo;

    /**
     * Atributo gerado a partir da coluna CLIE_TX_PAIS.
     */
    @Column(name = "CLIE_TX_PAIS", length = 50)
    private String textoPais;

    /**
     * Atributo gerado a partir da coluna CLIE_CD_MNEMONICO.
     */
    @Column(name = "CLIE_CD_MNEMONICO", length = 25)
    private String codigoMnemonico;

    /**
     * Atributo gerado a partir da coluna CLIE_CD_CNPJ.
     */
    @Column(name = "CLIE_CD_CNPJ", length = 50)
    private String codigoCnpj;

    /**
     * Atributo gerado a partir da coluna CLIE_TX_ESTADO.
     */
    @Column(name = "CLIE_TX_ESTADO", length = 100)
    private String textoEstado;

    /**
     * Atributo gerado a partir da coluna CLIE_TX_CIDADE.
     */
    @Column(name = "CLIE_TX_CIDADE", length = 100)
    private String textoCidade;

    /**
     * Atributo gerado a partir da coluna CLIE_IN_TIPO.
     */
    @Column(name = "CLIE_IN_TIPO", length = 3)
    private String indicadorTipo;

    /**
     * Atributo gerado a partir da coluna CLIE_CD_ERP_APLIC.
     */
    @Column(name = "CLIE_CD_ERP_APLIC", precision = 10, scale = 0)
    private Long codigoErpAplic;

    /**
     * Atributo gerado a partir da coluna CLIE_TP_REGISTRO_FISCAL.
     */
    @Column(name = "CLIE_TP_REGISTRO_FISCAL", length = 1)
    private String tipoRegistroFiscal;

    /**
     * Atributo gerado a partir da coluna CLIE_NR_DIAS_PRAZO_RECEBIMENTO.
     */
    @Column(name = "CLIE_NR_DIAS_PRAZO_RECEBIMENTO", precision = 18)
    private Long numeroDiasPrazoRecebimento;

    @Column(name = "NR_DIAS_PRAZO_PARA_FATURAR", precision = 18)
    private Long numeroDiasPrazoFaturar;

    /**
     * Atributo gerado a partir da coluna POTE_CD_POTENCIAL.
     */
    @Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "POTE_CD_POTENCIAL")
    private Potencial potencial;


    @Column(name = "CLIE_CD_ORGANIZACAO_PIPEDRIVE", precision = 18, scale = 0)
    private Long codigoOrganizacaoPipedrive;

    @Column(name = "CLIE_CD_AGENTE_MEGA", precision = 18, scale = 0)
    private Long codigoAgenteMega;

    @Column(name = "CLIE_CD_CUSTOMER_QUICKBOOKS", precision = 18, scale = 0)
    private Long codigoCustomerQuickBooks;

    @Column(name = "CLIE_CD_CONTACT_XERO", length = 50)
    private String codigoContactXero;

    @Column(name = "CLIE_ORCL_TAX_PAYER_CUST", length = 30)
    private String codigoOracleTaxpayerCustomer;

    /**
     * Construtor default.
     */
    public Cliente() {
    }

    public Cliente(Long codigoCliente, String nomeCliente) {
        this.codigoCliente = codigoCliente;
        this.nomeCliente = nomeCliente;
    }

    /**
     * @return the msas
     */
    public List<Msa> getMsas() {
        return msas;
    }

    /**
     * @param msas
     *            the msas to set
     */
    public void setMsas(final List<Msa> msas) {
        this.msas = msas;
    }

    /**
     * @return the clientes
     */
    public List<Cliente> getClientes() {
        return clientes;
    }

    /**
     * @param clientes
     *            the clientes to set
     */
    public void setClientes(final List<Cliente> clientes) {
        this.clientes = clientes;
    }

    /**
     * @return the etiquetas
     */
    public List<Etiqueta> getEtiquetas() {
        return etiquetas;
    }

    /**
     * @param etiquetas
     *            the etiquetas to set
     */
    public void setEtiquetas(final List<Etiqueta> etiquetas) {
        this.etiquetas = etiquetas;
    }

    /**
     * @return the dealFiscals
     */
    public List<DealFiscal> getDealFiscals() {
        return dealFiscals;
    }

    /**
     * @param dealFiscals
     *            the dealFiscals to set
     */
    public void setDealFiscals(final List<DealFiscal> dealFiscals) {
        this.dealFiscals = dealFiscals;
    }

    /**
     * @return the codigoCliente
     */
    public Long getCodigoCliente() {
        return codigoCliente;
    }

    /**
     * @param codigoCliente
     *            the codigoCliente to set
     */
    public void setCodigoCliente(final Long codigoCliente) {
        this.codigoCliente = codigoCliente;
    }

    /**
     * @return the cliente
     */
    public Cliente getCliente() {
        return cliente;
    }

    /**
     * @param cliente
     *            the cliente to set
     */
    public void setCliente(final Cliente cliente) {
        this.cliente = cliente;
    }

    /**
     * @return the nomeCliente
     */
    public String getNomeCliente() {
        return nomeCliente;
    }

    /**
     * @param nomeCliente
     *            the nomeCliente to set
     */
    public void setNomeCliente(final String nomeCliente) {
        this.nomeCliente = nomeCliente;
    }

    /**
     * @return the indicadorAtivo
     */
    public String getIndicadorAtivo() {
        return indicadorAtivo;
    }

    /**
     * @param indicadorAtivo
     *            the indicadorAtivo to set
     */
    public void setIndicadorAtivo(final String indicadorAtivo) {
        this.indicadorAtivo = indicadorAtivo;
    }

    /**
     * @return the textoPais
     */
    public String getTextoPais() {
        return textoPais;
    }

    /**
     * @param textoPais
     *            the textoPais to set
     */
    public void setTextoPais(final String textoPais) {
        this.textoPais = textoPais;
    }

    /**
     * @return the codigoMnemonico
     */
    public String getCodigoMnemonico() {
        return codigoMnemonico;
    }

    /**
     * @param codigoMnemonico
     *            the codigoMnemonico to set
     */
    public void setCodigoMnemonico(final String codigoMnemonico) {
        this.codigoMnemonico = codigoMnemonico;
    }

    /**
     * @return the codigoCnpj
     */
    public String getCodigoCnpj() {
        return codigoCnpj;
    }

    /**
     * @param codigoCnpj
     *            the codigoCnpj to set
     */
    public void setCodigoCnpj(final String codigoCnpj) {
        this.codigoCnpj = codigoCnpj;
    }

    /**
     * @return the textoEstado
     */
    public String getTextoEstado() {
        return textoEstado;
    }

    /**
     * @param textoEstado
     *            the textoEstado to set
     */
    public void setTextoEstado(final String textoEstado) {
        this.textoEstado = textoEstado;
    }

    /**
     * @return the textoCidade
     */
    public String getTextoCidade() {
        return textoCidade;
    }

    /**
     * @param textoCidade
     *            the textoCidade to set
     */
    public void setTextoCidade(final String textoCidade) {
        this.textoCidade = textoCidade;
    }

    /**
     * @return the indicadorTipo
     */
    public String getIndicadorTipo() {
        return indicadorTipo;
    }

    /**
     * @param indicadorTipo
     *            the indicadorTipo to set
     */
    public void setIndicadorTipo(final String indicadorTipo) {
        this.indicadorTipo = indicadorTipo;
    }

    /**
     * @return the codigoErpAplic
     */
    public Long getCodigoErpAplic() {
        return codigoErpAplic;
    }

    /**
     * @param codigoErpAplic
     *            the codigoErpAplic to set
     */
    public void setCodigoErpAplic(final Long codigoErpAplic) {
        this.codigoErpAplic = codigoErpAplic;
    }

    /**
     * @return the tipoRegistroFiscal
     */
    public String getTipoRegistroFiscal() {
        return tipoRegistroFiscal;
    }

    /**
     * @param tipoRegistroFiscal
     *            the tipoRegistroFiscal to set
     */
    public void setTipoRegistroFiscal(final String tipoRegistroFiscal) {
        this.tipoRegistroFiscal = tipoRegistroFiscal;
    }

    /**
     * @return the numeroDiasPrazoRecebimento
     */
    public Long getNumeroDiasPrazoRecebimento() {
        return numeroDiasPrazoRecebimento;
    }

    /**
     * @param numeroDiasPrazoRecebimento
     *            the numeroDiasPrazoRecebimento to set
     */
    public void setNumeroDiasPrazoRecebimento(final Long numeroDiasPrazoRecebimento) {
        this.numeroDiasPrazoRecebimento = numeroDiasPrazoRecebimento;
    }

    public Long getNumeroDiasPrazoFaturar() {
        return numeroDiasPrazoFaturar;
    }

    public void setNumeroDiasPrazoFaturar(Long numeroDiasPrazoFaturar) {
        this.numeroDiasPrazoFaturar = numeroDiasPrazoFaturar;
    }

    /**
     * @return the potencial
     */
    public Potencial getPotencial() {
        return potencial;
    }

    /**
     * @param potencial
     *            the potencial to set
     */
    public void setPotencial(final Potencial potencial) {
        this.potencial = potencial;
    }

    public Long getCodigoOrganizacaoPipedrive() {
        return codigoOrganizacaoPipedrive;
    }

    public void setCodigoOrganizacaoPipedrive(final Long codigoOrganizacaoPipedrive) {
        this.codigoOrganizacaoPipedrive = codigoOrganizacaoPipedrive;
    }

    public Long getCodigoAgenteMega() {
        return codigoAgenteMega;
    }

    public void setCodigoAgenteMega(Long codigoAgenteMega) {
        this.codigoAgenteMega = codigoAgenteMega;
    }

    public Long getCompanyCode() {
        return ClientEnum.getInstanceByName(this.getNomeCliente()).getCode();
    }

    public Long getCodigoCustomerQuickBooks() {
        return codigoCustomerQuickBooks;
    }

    public void setCodigoCustomerQuickBooks(Long codigoCustomerQuickBooks) {
        this.codigoCustomerQuickBooks = codigoCustomerQuickBooks;
    }

    public String getCodigoContactXero() {
        return codigoContactXero;
    }

    public void setCodigoContactXero(String codigoContactXero) {
        this.codigoContactXero = codigoContactXero;
    }

    public String getCodigoOracleTaxpayerCustomer() {
        return this.codigoOracleTaxpayerCustomer;
    }
    public void setCodigoOracleTaxpayerCustomer(final String codigoOracleTaxPayerCustomer) {
        this.codigoOracleTaxpayerCustomer = codigoOracleTaxPayerCustomer;
    }
}