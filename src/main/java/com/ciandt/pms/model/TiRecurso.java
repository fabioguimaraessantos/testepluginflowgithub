/*
 * @(#) TiRecurso.java
 * Copyright (c) 2010 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import javax.persistence.*;
import java.util.ArrayList;
import java.util.List;

/**
 * Entity gerado a partir da tabela TI_RECURSO.
 * 
 * @author Generated by Hibernate Tools 3.2.4.GA
 * @since 14/07/2010 10:56:14
 * @version 09/01/19 1.1 10:08:00
 */
@Entity
@Table(name = "TI_RECURSO")
@NamedQueries({
        @NamedQuery(name = "TiRecurso.findAll", query = "SELECT t FROM TiRecurso t"),

        @NamedQuery(name = "TiRecurso.findAllActive", query = "SELECT tr FROM TiRecurso tr WHERE tr.indicadorAtivo = 'A'"),

        @NamedQuery(name = "TiRecurso.findByNomeTiRecurso", query = "SELECT tr FROM TiRecurso tr WHERE tr.nomeTiRecurso = :nomeTiRecurso"),

        @NamedQuery(name = "TiRecurso.findByType", query = "SELECT tr FROM TiRecurso tr "
                + " WHERE tr.indicadorTipoAlocacao = ? AND tr.indicadorAtivo = 'A'"),

        @NamedQuery(name = "TiRecurso.findByFilter", query = "SELECT tr FROM TiRecurso tr "
                + "WHERE (UPPER(tr.nomeTiRecurso) like '%'||TRIM(UPPER(?1))||'%' OR (?1 is null)) "
                + "  AND ((tr.indicadorTipoAlocacao = ?2) OR (?2 is null)) "
                + "  AND (UPPER(tr.codigoMnemonico) like '%'||TRIM(UPPER(?3))||'%' OR (?3 is null)) "
                + "  AND ((tr.empresa.codigoEmpresa = ?4) OR (?4 is null)) "),

        @NamedQuery(name = "TiRecurso.findByContractAndPeriod", query = "SELECT distinct recurso FROM TiRecurso recurso "
                + " JOIN recurso.chargebackContratoPraticas chargeback "
                + " WHERE chargeback.contratoPratica.codigoContratoPratica = ? "
                + "     AND TRUNC(chargeback.dataMes) between TRUNC(?) AND TRUNC(?) "
                + " ORDER BY recurso.nomeTiRecurso ASC "),

        @NamedQuery(name = "TiRecurso.findByPessoaAndPeriod", query = "SELECT distinct recurso FROM TiRecurso recurso "
                + " JOIN recurso.chargebackPessoas chargeback "
                + " JOIN recurso.custoTiRecursos custoTiRecursos "
                + " WHERE chargeback.pessoa.codigoPessoa = ? "
                + "     AND TRUNC(chargeback.dataMes) between TRUNC(?) AND TRUNC(?) "
                + " ORDER BY recurso.nomeTiRecurso ASC "),

        @NamedQuery(name = "TiRecurso.findByPessoaAndPeriodAndType", query = "SELECT recurso FROM TiRecurso recurso "
                + " JOIN recurso.chargebackPessoas chargeback "
                + " WHERE chargeback.pessoa.codigoPessoa = ? "
                + "     AND TRUNC(chargeback.dataMes) between TRUNC(?) AND TRUNC(?) "
                + "     AND recurso.indicadorTipoAlocacao = ? "
                + " ORDER BY recurso.nomeTiRecurso ASC ")})
public class TiRecurso implements java.io.Serializable {

    /**
     * Valor do serialVersionUID.
     */
    private static final long serialVersionUID = 1L;

    /** Constante para NamedQuery "TiRecurso.findAll". */
    public static final String FIND_ALL = "TiRecurso.findAll";

    /** Constante para NamedQuery "TiRecurso.findAllActive". */
    public static final String FIND_ALL_ACTIVE = "TiRecurso.findAllActive";

    /** Constante para NamedQuery "TiRecurso.findByFilter". */
    public static final String FIND_BY_FILTER = "TiRecurso.findByFilter";

    /** Constante para NamedQuery "TiRecurso.findByChargebackAndPeriod". */
    public static final String FIND_BY_CONTRACT_AND_PERIOD =
            "TiRecurso.findByContractAndPeriod";

    /** Constante para NamedQuery "TiRecurso.findByPessoaAndPeriod". */
    public static final String FIND_BY_PESSOA_AND_PERIOD =
            "TiRecurso.findByPessoaAndPeriod";

    /** Constante para NamedQuery "TiRecurso.findByPessoaAndPeriodAndType". */
    public static final String FIND_BY_PESSOA_AND_PERIOD_AND_TYPE =
            "TiRecurso.findByPessoaAndPeriodAndType";

    /** Constante para NamedQuery "TiRecurso.findByType". */
    public static final String FIND_BY_TYPE = "TiRecurso.findByType";

    /** Constante para NamedQuery "TiRecurso.findByNomeTiRecurso". */
    public static final String FIND_BY_NOME_TI_RECURSO = "TiRecurso.findByNomeTiRecurso";

    /**
     * Atributo gerado a partir da coluna TIRE_CD_TI_RECURSO.
     */
    @Id
    @GeneratedValue(generator = "TiRecursoSeq")
    @SequenceGenerator(name = "TiRecursoSeq", sequenceName = "SQ_TIRE_CD_TI_RECURSO", allocationSize = 1)
    @Column(name = "TIRE_CD_TI_RECURSO", unique = true, nullable = false, precision = 18, scale = 0)
    private Long codigoTiRecurso;

    /**
     * Atributo gerado a partir da coluna MOED_CD_MOEDA.
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "MOED_CD_MOEDA", nullable = true)
    private Moeda moeda;

    /**
     * Atributo gerado a partir da coluna TIRE_SG_UNIDADE.
     */

    @Column(name = "TIRE_SG_UNIDADE", length = 10)
    private String siglaUnidade;

    /**
     * Atributo gerado a partir da coluna TIRE_TX_DESC_UNIDADE.
     */

    @Column(name = "TIRE_TX_DESC_UNIDADE", length = 100)
    private String textoDescUnidade;

    /**
     * Atributo gerado a partir da coluna TIRE_IN_TIPO_ALOCACAO.
     */

    @Column(name = "TIRE_IN_TIPO_ALOCACAO", length = 2)
    private String indicadorTipoAlocacao;

    /**
     * Atributo gerado a partir da coluna TIRE_IN_ATIVO.
     */

    @Column(name = "TIRE_IN_ATIVO", length = 240)
    private String indicadorAtivo;

    /**
     * Atributo gerado a partir da coluna TIRE_NM_TI_RECURSO.
     */
    @Column(name = "TIRE_NM_TI_RECURSO", length = 100)
    private String nomeTiRecurso;

    /**
     * Atributo gerado a partir da coluna TIRE_CD_MNEMONICO.
     */

    @Column(name = "TIRE_CD_MNEMONICO", length = 20)
    private String codigoMnemonico;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "EMPR_CD_EMPRESA", nullable = true)
    private Empresa empresa;

    /**
     * Atributo gerado a partir da tabela CUSTO_TI_RECURSO.
     */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "tiRecurso", cascade = CascadeType.ALL)
    @OrderBy("dataInicio")
    private List<CustoTiRecurso> custoTiRecursos =
            new ArrayList<CustoTiRecurso>(0);

    /** Atributo gerado a partir da tabela CHARGEBACK_CONTRATO_PRATICA. */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "tiRecurso")
    private List<ChargebackContratoPratica> chargebackContratoPraticas =
            new ArrayList<ChargebackContratoPratica>(0);

    /** Atributo gerado a partir da tabela CHARGEBACK_PESSOA. */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "tiRecurso")
    private List<ChargebackPessoa> chargebackPessoas =
            new ArrayList<ChargebackPessoa>(0);

    @Transient
    private String activeUsers;

    public void setActiveUsers(String activeUsers){this.activeUsers = activeUsers;}

    public String getActiveUsers(){return activeUsers;}

    /**
     * Construtor default.
     */
    public TiRecurso() {
    }

    /**
     * Obtem o valor do atributo codigoTiRecurso.<BR>
     * Atributo gerado a partir da coluna TIRE_CD_TI_RECURSO.
     * 
     * @return Valor do atributo codigoTiRecurso.
     */
    public Long getCodigoTiRecurso() {
        return this.codigoTiRecurso;
    }

    /**
     * Atualiza o valor do atributo codigoTiRecurso.<BR>
     * Atributo gerado a partir da coluna TIRE_CD_TI_RECURSO.
     * 
     * @param codigoTiRecurso
     *            Novo valor para o atributo codigoTiRecurso.
     */
    public void setCodigoTiRecurso(final Long codigoTiRecurso) {
        this.codigoTiRecurso = codigoTiRecurso;
    }

    /**
     * Obtem o valor do atributo siglaUnidade.<BR>
     * Atributo gerado a partir da coluna TIRE_SG_UNIDADE.
     * 
     * @return Valor do atributo siglaUnidade.
     */
    public String getSiglaUnidade() {
        return this.siglaUnidade;
    }

    /**
     * Atualiza o valor do atributo siglaUnidade.<BR>
     * Atributo gerado a partir da coluna TIRE_SG_UNIDADE.
     * 
     * @param siglaUnidade
     *            Novo valor para o atributo siglaUnidade.
     */
    public void setSiglaUnidade(final String siglaUnidade) {
        this.siglaUnidade = siglaUnidade;
    }

    /**
     * Obtem o valor do atributo textoDescUnidade.<BR>
     * Atributo gerado a partir da coluna TIRE_TX_DESC_UNIDADE.
     * 
     * @return Valor do atributo textoDescUnidade.
     */
    public String getTextoDescUnidade() {
        return this.textoDescUnidade;
    }

    /**
     * Atualiza o valor do atributo textoDescUnidade.<BR>
     * Atributo gerado a partir da coluna TIRE_TX_DESC_UNIDADE.
     * 
     * @param textoDescUnidade
     *            Novo valor para o atributo textoDescUnidade.
     */
    public void setTextoDescUnidade(final String textoDescUnidade) {
        this.textoDescUnidade = textoDescUnidade;
    }

    /**
     * Obtem o valor do atributo indicadorTipoAlocacao.<BR>
     * Atributo gerado a partir da coluna TIRE_IN_TIPO_ALOCACAO.
     * 
     * @return Valor do atributo indicadorTipoAlocacao.
     */
    public String getIndicadorTipoAlocacao() {
        return this.indicadorTipoAlocacao;
    }

    /**
     * Atualiza o valor do atributo indicadorTipoAlocacao.<BR>
     * Atributo gerado a partir da coluna TIRE_IN_TIPO_ALOCACAO.
     * 
     * @param indicadorTipoAlocacao
     *            Novo valor para o atributo indicadorTipoAlocacao.
     */
    public void setIndicadorTipoAlocacao(final String indicadorTipoAlocacao) {
        this.indicadorTipoAlocacao = indicadorTipoAlocacao;
    }

    /**
     * Obtem o valor do atributo indicadorAtivo.<BR>
     * Atributo gerado a partir da coluna TIRE_IN_ATIVO.
     * 
     * @return Valor do atributo indicadorAtivo.
     */
    public String getIndicadorAtivo() {
        return this.indicadorAtivo;
    }

    /**
     * Atualiza o valor do atributo indicadorAtivo.<BR>
     * Atributo gerado a partir da coluna TIRE_IN_ATIVO.
     * 
     * @param indicadorAtivo
     *            Novo valor para o atributo indicadorAtivo.
     */
    public void setIndicadorAtivo(final String indicadorAtivo) {
        this.indicadorAtivo = indicadorAtivo;
    }

    /**
     * Obtem o valor do atributo nomeTiRecurso.<BR>
     * Atributo gerado a partir da coluna TIRE_NM_TI_RECURSO.
     * 
     * @return Valor do atributo nomeTiRecurso.
     */
    public String getNomeTiRecurso() {
        return this.nomeTiRecurso;
    }

    /**
     * Atualiza o valor do atributo nomeTiRecurso.<BR>
     * Atributo gerado a partir da coluna TIRE_NM_TI_RECURSO.
     * 
     * @param nomeTiRecurso
     *            Novo valor para o atributo nomeTiRecurso.
     */
    public void setNomeTiRecurso(final String nomeTiRecurso) {
        this.nomeTiRecurso = nomeTiRecurso;
    }

    /**
     * Obtem o valor do atributo moeda.<BR>
     * Atributo gerado a partir da coluna MOED_CD_MOEDA.
     * 
     * @return Valor do atributo moeda.
     */
    public Moeda getMoeda() {
        return this.moeda;
    }

    /**
     * Atualiza o valor do atributo moeda.<BR>
     * Atributo gerado a partir da coluna MOED_CD_MOEDA.
     * 
     * @param moeda
     *            Novo valor para o atributo moeda.
     */
    public void setMoeda(final Moeda moeda) {
        this.moeda = moeda;
    }

    /**
     * @see Object#toString()
     * 
     * @return retorna a entidade no formato de string
     */
    @Override
    public String toString() {
        StringBuffer buffer = new StringBuffer();

        buffer.append(getClass().getName()).append("@").append(
                Integer.toHexString(hashCode())).append(" [");
        buffer.append("codigoTiRecurso").append("='").append(
                getCodigoTiRecurso()).append("' ");
        buffer.append("siglaUnidade").append("='").append(getSiglaUnidade())
                .append("' ");
        buffer.append("textoDescUnidade").append("='").append(
                getTextoDescUnidade()).append("' ");
        buffer.append("indicadorTipoAlocacao").append("='").append(
                getIndicadorTipoAlocacao()).append("' ");
        buffer.append("indicadorAtivo").append("='")
                .append(getIndicadorAtivo()).append("' ");
        buffer.append("nomeTiRecurso").append("='").append(getNomeTiRecurso())
                .append("' ");
        buffer.append("]");

        return buffer.toString();
    }

    /**
     * @param custoTiRecursos
     *            the custoTiRecursos to set
     */
    public void setCustoTiRecursos(final List<CustoTiRecurso> custoTiRecursos) {
        this.custoTiRecursos = custoTiRecursos;
    }

    /**
     * @return the custoTiRecursos
     */
    public List<CustoTiRecurso> getCustoTiRecursos() {
        return custoTiRecursos;
    }

    /**
     * @param chargebackContratoPraticas
     *            the chargebackContratoPraticas to set
     */
    public void setChargebackContratoPraticas(
            final List<ChargebackContratoPratica> chargebackContratoPraticas) {
        this.chargebackContratoPraticas = chargebackContratoPraticas;
    }

    /**
     * @return the chargebackContratoPraticas
     */
    public List<ChargebackContratoPratica> getChargebackContratoPraticas() {
        return chargebackContratoPraticas;
    }

    /**
     * @param chargebackPessoas
     *            the chargebackPessoas to set
     */
    public void setChargebackPessoas(
            final List<ChargebackPessoa> chargebackPessoas) {
        this.chargebackPessoas = chargebackPessoas;
    }

    /**
     * @return the chargebackPessoas
     */
    public List<ChargebackPessoa> getChargebackPessoas() {
        return chargebackPessoas;
    }

    /**
     * Obtem o valor do atributo codigoMnemonico.<BR>
     * Atributo gerado a partir da coluna TIRE_CD_MNEMONICO.
     * 
     * @return Valor do atributo codigoMnemonico.
     */
    public String getCodigoMnemonico() {
        return this.codigoMnemonico;
    }

    /**
     * Atualiza o valor do atributo codigoMnemonico.<BR>
     * Atributo gerado a partir da coluna TIRE_CD_MNEMONICO.
     * 
     * @param codigoMnemonico
     *            Novo valor para o atributo codigoMnemonico.
     */
    public void setcodigoMnemonico(final String codigoMnemonico) {
        this.codigoMnemonico = codigoMnemonico;
    }

    /**
     * Obtem o valor do atributo empresa.<BR>
     * Atributo gerado a partir da coluna EMPR_CD_EMPRESA.
     *
     * @return Valor do atributo empresa.
     */
    public Empresa getEmpresa() {
        return empresa;
    }

    /**
     * Atualiza o valor do atributo codigoCompany.<BR>
     * Atributo gerado a partir da coluna EMPR_CD_EMPRESA.
     *
     * @param empresa Novo valor para o atributo empresa.
     */
    public void setEmpresa(Empresa empresa) {
        this.empresa = empresa;
    }
}