/*
 * @(#) AlocacaoPeriodo.java
 * Copyright (c) 2008 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.envers.Audited;

/**
 * Entity gerado a partir da tabela ALOCACAO_PERIODO.
 * 
 * @author Generated by Hibernate Tools 3.2.4.GA
 * @since 12/08/2009 17:14:06
 * @version 09/01/19 1.1 10:08:00
 */
@Entity
@Table(name = "ALOCACAO_PERIODO")
@NamedQueries({
        @NamedQuery(name = "AlocacaoPeriodo.findAll", query = "SELECT t FROM AlocacaoPeriodo t"),

        @NamedQuery(name = "AlocacaoPeriodo.findByAlocacao", query = "SELECT ap FROM AlocacaoPeriodo ap"
                + " JOIN FETCH ap.alocacao alocacao"
                + " WHERE ap.alocacao.codigoAlocacao = ?"),
                
        @NamedQuery(name = "AlocacaoPeriodo.findByAlocacaoAndPeriod", query = "SELECT ap FROM AlocacaoPeriodo ap"
                + " WHERE ap.alocacao.codigoAlocacao = ?1" 
                + "     AND TRUNC(ap.dataAlocacaoPeriodo) between TRUNC(?2) and TRUNC(?3) "),
                
                
        @NamedQuery(name = "AlocacaoPeriodo.findMaxDateByMapa",
                query = "SELECT MAX(ap.dataAlocacaoPeriodo) FROM AlocacaoPeriodo ap"
                + " WHERE ap.alocacao.mapaAlocacao.codigoMapaAlocacao = ?"),
                
        @NamedQuery(name = "AlocacaoPeriodo.findMinDateByMapa", 
                query = "SELECT MIN(ap.dataAlocacaoPeriodo) FROM AlocacaoPeriodo ap"
                + " WHERE ap.alocacao.mapaAlocacao.codigoMapaAlocacao = ?"),
                
        @NamedQuery(name = "AlocacaoPeriodo.findByAlocacaoAndDate",
                query = " SELECT ap FROM AlocacaoPeriodo ap"
                + " LEFT JOIN FETCH ap.alocacao alocacao"
                + " WHERE ap.alocacao.codigoAlocacao = ? "
                + " AND TRUNC(ap.dataAlocacaoPeriodo) = TRUNC(?)"
                + " AND ap.alocacao.mapaAlocacao.indicadorVersao = 'PB'"),
                
        @NamedQuery(name = "AlocacaoPeriodo.findByRecursoAndDate",
                query = " SELECT ap FROM AlocacaoPeriodo ap"
                + " WHERE ap.alocacao.recurso.codigoRecurso = ? "
                + " AND TRUNC(ap.dataAlocacaoPeriodo) = TRUNC(?)"
                + " AND ap.alocacao.mapaAlocacao.indicadorVersao = 'PB'"),

        @NamedQuery(name = "AlocacaoPeriodo.findByContratoPraticaRecursoAndDate",
                query = " SELECT ap FROM AlocacaoPeriodo ap"
                        + " JOIN FETCH ap.alocacao alocacao "
                        + " WHERE ap.alocacao.mapaAlocacao.contratoPratica.codigoContratoPratica = ?"
                        + " AND ap.alocacao.recurso.codigoRecurso = ? "
                        + " AND TRUNC(ap.dataAlocacaoPeriodo) = TRUNC(?)"
                        + " AND ap.percentualAlocacaoPeriodo > 0 "),

        @NamedQuery(name = "AlocacaoPeriodo.findByMapaAndNotInRange",
                query = " SELECT ap FROM AlocacaoPeriodo ap "
                + " WHERE ap.alocacao.mapaAlocacao.codigoMapaAlocacao = ? "
                + " AND ap.codigoAlocacaoPeriodo NOT IN "
                + " ( SELECT alpe.codigoAlocacaoPeriodo FROM AlocacaoPeriodo alpe " 
                + " WHERE alpe.alocacao.mapaAlocacao.codigoMapaAlocacao = ? " 
                + " AND TRUNC(alpe.dataAlocacaoPeriodo) between TRUNC(?) AND TRUNC(?) )"),
       
        @NamedQuery(name = "AlocacaoPeriodo.findByMaxDateAndRecurso",
                query = " SELECT ap FROM AlocacaoPeriodo ap"
                + " WHERE ap.alocacao.recurso.codigoRecurso = ? "
                + " AND ap.alocacao.mapaAlocacao.indicadorVersao = 'PB'"
                + " AND TRUNC(ap.dataAlocacaoPeriodo) = "
                + " (SELECT MAX(t.dataAlocacaoPeriodo) FROM AlocacaoPeriodo t "
                + " WHERE t.alocacao.recurso.codigoRecurso = ?"
                + " AND TRUNC(t.dataAlocacaoPeriodo) < TRUNC(?))"),
                
        @NamedQuery(name = "AlocacaoPeriodo.findByMapaAlocacoAndRecurso",
        query = " SELECT ap FROM AlocacaoPeriodo ap "
        		+ " WHERE ap.alocacao.mapaAlocacao.codigoMapaAlocacao = :codigoMapaAlocacao"
        		+ " AND ap.alocacao.recurso.codigoRecurso = :codigoRecurso"),

        @NamedQuery(name = "AlocacaoPeriodo.findByPerfilVendidoAndClosingDate",
        query = " SELECT ap FROM AlocacaoPeriodo ap"
            + " LEFT JOIN FETCH ap.alocacao alocacao"
            + " WHERE ap.alocacao.perfilVendido.codigoPerfilVendido = :codigoPerfilVendido"
            + " AND ap.dataAlocacaoPeriodo >= :closingMapDate"
            + " AND ap.percentualAlocacaoPeriodo > 0"
            + " AND ap.percentualUr > 0"),
        @NamedQuery(name = "AlocacaoPeriodo.findByResourceCodeInAndMonth",
                query = " SELECT ap FROM AlocacaoPeriodo ap"
                        + " WHERE ap.alocacao.recurso.codigoRecurso in :resourceCodes "
                        + " AND TRUNC(ap.dataAlocacaoPeriodo) = TRUNC(:month)"
                        + " AND ap.alocacao.mapaAlocacao.indicadorVersao = 'PB'")
})               
        
public class AlocacaoPeriodo implements java.io.Serializable, Cloneable {

    // ========================================================================
    // BEGIN - Coloque aqui o codigo manual
    // ========================================================================

    /** Constante para NamedQuery "AlocacaoPeriodo.findMinDateByMapa" . */
    public static final String FIND_MIN_DATE_BY_MAPA = "AlocacaoPeriodo.findMinDateByMapa";

    /** Constante para NamedQuery "AlocacaoPeriodo.findMaxDateByMapa" . */
    public static final String FIND_MAX_DATE_BY_MAPA = "AlocacaoPeriodo.findMaxDateByMapa";

    /** Constante para NamedQuery "AlocacaoPeriodo.findByAlocacaoAndDate" . */
    public static final String FIND_BY_ALOCACAO_AND_DATE = "AlocacaoPeriodo.findByAlocacaoAndDate";
    
    /** Constante para NamedQuery "AlocacaoPeriodo.findByRecursoAndDate" . */
    public static final String FIND_BY_RECURSO_AND_DATE = "AlocacaoPeriodo.findByRecursoAndDate";

    /** Constante para NamedQuery "AlocacaoPeriodo.findByContratoPraticaRecursoAndDate" . */
    public static final String FIND_BY_CONTRATO_PRATICA_RECURSO_AND_DATE = "AlocacaoPeriodo.findByContratoPraticaRecursoAndDate";
    
    /** Constante para NamedQuery "AlocacaoPeriodo.findByMapaAndNotInRange". */
    public static final String FIND_BY_MAPA_AND_NOT_IN_RANGE = "AlocacaoPeriodo.findByMapaAndNotInRange";
    
    /** Constante para NamedQuery "AlocacaoPeriodo.findByAlocacao". */
    public static final String FIND_BY_ALOCACAO = "AlocacaoPeriodo.findByAlocacao";
    
    /** Constante para NamedQuery "AlocacaoPeriodo.findByMaxDateAndRecurso". */
    public static final String FIND_BY_MAX_DATE_AND_RECURSO = "AlocacaoPeriodo.findByMaxDateAndRecurso";
    
    /** Constante para NamedQuery "AlocacaoPeriodo.findByAlocacaoAndPeriod". */
    public static final String FIND_BY_ALOCACAO_AND_PERIOD = "AlocacaoPeriodo.findByAlocacaoAndPeriod";
    
    /** Constante para NamedQuery "AlocacaoPeriodo.findByMapaAlocacoAndRecurso". */
    public static final String FIND_BY_MAPA_ALOCACAO_AND_RECURSO = "AlocacaoPeriodo.findByMapaAlocacoAndRecurso";

    /** Constante para NamedQuery "AlocacaoPeriodo.findByPerfilVendidoAndClosingDate". */
    public static final String FIND_BY_PERFIL_VENDIDO_AND_CLOSING_DATE = "AlocacaoPeriodo.findByPerfilVendidoAndClosingDate";

    public static final String FIND_BY_RECURSO_IN_AND_DATE = "AlocacaoPeriodo.findByResourceCodeInAndMonth";

    /**
     * Realiza uma copia do objeto, porem com uma referencia diferente.
     * 
     * @return a cópia do objeto
     */
    public AlocacaoPeriodo getClone() {
       try {
           AlocacaoPeriodo clone = (AlocacaoPeriodo) super.clone();
           clone.setDataAlocacaoPeriodo((Date) dataAlocacaoPeriodo.clone());
           clone.setPercentualAlocacaoPeriodo(new BigDecimal(percentualAlocacaoPeriodo.doubleValue()));
           return clone;
        } catch (CloneNotSupportedException e) {
            e.printStackTrace();
            return null;
        }  
    }
    
    // ========================================================================
    // END
    // ========================================================================

    /**
     * Valor do serialVersionUID.
     */
    private static final long serialVersionUID = 1L;

    /**
     * Constante para NamedQuery "AlocacaoPeriodo.findAll".
     */
    public static final String FIND_ALL = "AlocacaoPeriodo.findAll";

    /**
     * Atributo gerado a partir da coluna ALPE_CD_ALOCACAO_PERIODO.
     */
    @Id
    @GeneratedValue(generator = "AlocacaoPeriodoSeq")
    @SequenceGenerator(name = "AlocacaoPeriodoSeq", sequenceName = "SQ_ALPE_CD_ALOCACAO_PERIODO", 
            allocationSize = 1)
    @Column(name = "ALPE_CD_ALOCACAO_PERIODO", unique = true, nullable = false, precision = 18, scale = 0)
    private Long codigoAlocacaoPeriodo;

    /**
     * Atributo gerado a partir da coluna ALOC_CD_ALOCACAO.
     */
    @Audited
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ALOC_CD_ALOCACAO", nullable = false)
    private Alocacao alocacao;

    /**
     * Atributo gerado a partir da coluna ALPE_DT_ALOCACAO_PERIODO.
     */
    @Audited
    @Temporal(TemporalType.DATE)
    @Column(name = "ALPE_DT_ALOCACAO_PERIODO", length = 7)
    private Date dataAlocacaoPeriodo;

    /**
     * Atributo gerado a partir da coluna ALPE_PR_ALOCACAO_PERIODO.
     */
    @Audited
    @Column(name = "ALPE_PR_ALOCACAO_PERIODO", precision = 5)
    private BigDecimal percentualAlocacaoPeriodo;

    /**
     * Atributo gerado a partir da coluna ALPE_PR_UR.
     */
    @Column(name = "ALPE_PR_UR", precision = 18, scale = 15)
    private BigDecimal percentualUr;
    
    /**
     * Atributo gerado a partir da tabela CUSTO_REALIZADO.
     */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "alocacaoPeriodo")
    private Set<CustoRealizado> custoRealizados = new HashSet<CustoRealizado>(0);
    
    /**
     * Construtor default.
     */
    public AlocacaoPeriodo() {
    }

    /**
     * Construtor com preenchimento da entidade.
     * 
     * @param codigoAlocacaoPeriodo
     *            Valor do atributo codigoAlocacaoPeriodo;
     * @param alocacao
     *            Valor do atributo alocacao;
     */
    public AlocacaoPeriodo(final Long codigoAlocacaoPeriodo,
            final Alocacao alocacao) {
        this.codigoAlocacaoPeriodo = codigoAlocacaoPeriodo;
        this.alocacao = alocacao;
    }

    /**
     * Construtor com preenchimento da entidade.
     * 
     * @param codigoAlocacaoPeriodo
     *            Valor do atributo codigoAlocacaoPeriodo;
     * @param alocacao
     *            Valor do atributo alocacao;
     * @param dataAlocacaoPeriodo
     *            Valor do atributo dataAlocacaoPeriodo;
     * @param percentualAlocacaoPeriodo
     *            Valor do atributo percentualAlocacaoPeriodo;
     */
    public AlocacaoPeriodo(final Long codigoAlocacaoPeriodo,
            final Alocacao alocacao, final Date dataAlocacaoPeriodo,
            final BigDecimal percentualAlocacaoPeriodo) {
        this.codigoAlocacaoPeriodo = codigoAlocacaoPeriodo;
        this.alocacao = alocacao;
        this.dataAlocacaoPeriodo = dataAlocacaoPeriodo;
        this.percentualAlocacaoPeriodo = percentualAlocacaoPeriodo;
    }

    /**
     * Obtem o valor do atributo codigoAlocacaoPeriodo.<BR>
     * Atributo gerado a partir da coluna ALPE_CD_ALOCACAO_PERIODO.
     * 
     * @return Valor do atributo codigoAlocacaoPeriodo.
     */
    public Long getCodigoAlocacaoPeriodo() {
        return this.codigoAlocacaoPeriodo;
    }

    /**
     * Atualiza o valor do atributo codigoAlocacaoPeriodo.<BR>
     * Atributo gerado a partir da coluna ALPE_CD_ALOCACAO_PERIODO.
     * 
     * @param codigoAlocacaoPeriodo
     *            Novo valor para o atributo codigoAlocacaoPeriodo.
     */
    public void setCodigoAlocacaoPeriodo(final Long codigoAlocacaoPeriodo) {
        this.codigoAlocacaoPeriodo = codigoAlocacaoPeriodo;
    }

    /**
     * Obtem o valor do atributo alocacao.<BR>
     * Atributo gerado a partir da coluna ALOC_CD_ALOCACAO.
     * 
     * @return Valor do atributo alocacao.
     */
    public Alocacao getAlocacao() {
        return this.alocacao;
    }

    /**
     * Atualiza o valor do atributo alocacao.<BR>
     * Atributo gerado a partir da coluna ALOC_CD_ALOCACAO.
     * 
     * @param alocacao
     *            Novo valor para o atributo alocacao.
     */
    public void setAlocacao(final Alocacao alocacao) {
        this.alocacao = alocacao;
    }

    /**
     * Obtem o valor do atributo dataAlocacaoPeriodo.<BR>
     * Atributo gerado a partir da coluna ALPE_DT_ALOCACAO_PERIODO.
     * 
     * @return Valor do atributo dataAlocacaoPeriodo.
     */
    public Date getDataAlocacaoPeriodo() {
        return this.dataAlocacaoPeriodo;
    }

    /**
     * Atualiza o valor do atributo dataAlocacaoPeriodo.<BR>
     * Atributo gerado a partir da coluna ALPE_DT_ALOCACAO_PERIODO.
     * 
     * @param dataAlocacaoPeriodo
     *            Novo valor para o atributo dataAlocacaoPeriodo.
     */
    public void setDataAlocacaoPeriodo(final Date dataAlocacaoPeriodo) {
        this.dataAlocacaoPeriodo = dataAlocacaoPeriodo;
    }

    /**
     * Obtem o valor do atributo percentualAlocacaoPeriodo.<BR>
     * Atributo gerado a partir da coluna ALPE_PR_ALOCACAO_PERIODO.
     * 
     * @return Valor do atributo percentualAlocacaoPeriodo.
     */
    public BigDecimal getPercentualAlocacaoPeriodo() {
        return this.percentualAlocacaoPeriodo;
    }

    /**
     * Atualiza o valor do atributo percentualAlocacaoPeriodo.<BR>
     * Atributo gerado a partir da coluna ALPE_PR_ALOCACAO_PERIODO.
     * 
     * @param percentualAlocacaoPeriodo
     *            Novo valor para o atributo percentualAlocacaoPeriodo.
     */
    public void setPercentualAlocacaoPeriodo(
            final BigDecimal percentualAlocacaoPeriodo) {
        this.percentualAlocacaoPeriodo = percentualAlocacaoPeriodo;
    }
    
    /**
     * Obtem o valor do atributo percentualUr.<BR>
     * Atributo gerado a partir da coluna ALPE_PR_UR.
     * @return Valor do atributo percentualUr.
     */
    public BigDecimal getPercentualUr() {
        return this.percentualUr;
    }

    /**
     * Atualiza o valor do atributo percentualUr.<BR>
     * Atributo gerado a partir da coluna ALPE_PR_UR.
     * @param percentualUr Novo valor para o atributo percentualUr.
     */
    public void setPercentualUr(final BigDecimal percentualUr) {
        this.percentualUr = percentualUr;
    }

    /**
     * @param custoRealizados the custoRealizados to set
     */
    public void setCustoRealizados(final Set<CustoRealizado> custoRealizados) {
        this.custoRealizados = custoRealizados;
    }

    /**
     * @return the custoRealizados
     */
    public Set<CustoRealizado> getCustoRealizados() {
        return custoRealizados;
    }
    
    /**
     * @see Object#toString()
     * @return representação String do Objeto
     */
    @Override
    public String toString() {
        StringBuffer buffer = new StringBuffer();

        buffer.append(getClass().getName()).append("@").append(
                Integer.toHexString(hashCode())).append(" [");
        buffer.append("codigoAlocacaoPeriodo").append("='").append(
                getCodigoAlocacaoPeriodo()).append("' ");
        buffer.append("alocacao").append("='").append(getAlocacao()).append(
                "' ");
        buffer.append("dataAlocacaoPeriodo").append("='").append(
                getDataAlocacaoPeriodo()).append("' ");
        buffer.append("percentualAlocacaoPeriodo").append("='").append(
                getPercentualAlocacaoPeriodo()).append("' ");
        buffer.append("percentualUr").append("='").append(getPercentualUr())
                .append("' ");
        buffer.append("]");

        return buffer.toString();
    }

}
