/*
 * @(#) Aliquota.java
 * Copyright (c) 2008 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import javax.persistence.*;
import java.math.BigDecimal;
import java.util.Date;

/**
 * Entity gerado a partir da tabela ALIQUOTA.
 * 
 * @author Generated by Hibernate Tools 3.2.4.GA
 * @since 06/10/2009 14:24:04
 * @version 09/01/19 1.1 10:08:00
 */
@Entity
@Table(name = "ALIQUOTA")
@NamedQueries({
        @NamedQuery(name = "Aliquota.findAll", query = "SELECT t FROM Aliquota t "
                + " ORDER BY t.imposto.nomeImposto, t.dataInicio ASC"),

        @NamedQuery(name = "Aliquota.findByImposto", query = "SELECT al FROM Aliquota al "
                + " WHERE al.imposto.codigoImposto = ? "
                + " ORDER BY al.dataInicio ASC"),

        @NamedQuery(name = "Aliquota.findByMaxStartDateByImposto", query = "SELECT al FROM Aliquota al "
                + " WHERE al.imposto.codigoImposto = ? "
                + " AND al.dataInicio = "
                + " (SELECT MAX(t.dataInicio) FROM Aliquota t "
                + " WHERE t.imposto.codigoImposto = ?)"),

        @NamedQuery(name = "Aliquota.findByImpostoByCurrentDate", query = "SELECT al FROM Aliquota al "
                + " WHERE al.imposto.codigoImposto = ? "
                + " AND sysdate >= al.dataInicio  AND (sysdate <= al.dataFim OR  al.dataFim is null) ") })
public class Aliquota implements java.io.Serializable {

    /**
     * Valor do serialVersionUID.
     */
    private static final long serialVersionUID = 1L;

    /**
     * Constante para NamedQuery "Aliquota.findAll".
     */
    public static final String FIND_ALL = "Aliquota.findAll";

    /**
     * Constante para NamedQuery "Aliquota.findByImposto".
     */
    public static final String FIND_BY_IMPOSTO = "Aliquota.findByImposto";

    /**
     * Constante para NamedQuery "Aliquota.findByMaxStartDateByImposto".
     */
    public static final String FIND_BY_MAX_START_DATE_BY_IMPOSTO = "Aliquota.findByMaxStartDateByImposto";

    /**
     * Constante para NamedQuery "Aliquota.findByMaxStartDateByImposto".
     */
    public static final String FIND_BY_IMPOSTO_BY_CURRENT_DATE = "Aliquota.findByImpostoByCurrentDate";

    /**
     * Atributo gerado a partir da coluna ALIQ_CD_ALIQUOTA.
     */
    @Id
    @GeneratedValue(generator = "AliquotaSeq")
    @SequenceGenerator(name = "AliquotaSeq", sequenceName = "SQ_ALIQ_CD_ALIQUOTA", allocationSize = 1)
    @Column(name = "ALIQ_CD_ALIQUOTA", unique = true, nullable = false, precision = 18, scale = 0)
    private Long codigoAliquota;

    /**
     * Atributo gerado a partir da coluna IMPO_CD_IMPOSTO.
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "IMPO_CD_IMPOSTO", nullable = false)
    private Imposto imposto;

    /**
     * Atributo gerado a partir da coluna ALIQ_VL_ALIQUOTA.
     */

    @Column(name = "ALIQ_VL_ALIQUOTA", nullable = false, precision = 10, scale = 5)
    private BigDecimal valorAliquota;

    /**
     * Atributo gerado a partir da coluna ALIQ_DT_INICIO.
     */
    @Temporal(TemporalType.DATE)
    @Column(name = "ALIQ_DT_INICIO", nullable = false, length = 7)
    private Date dataInicio;

    /**
     * Atributo gerado a partir da coluna ALIQ_DT_FIM.
     */
    @Temporal(TemporalType.DATE)
    @Column(name = "ALIQ_DT_FIM", length = 7)
    private Date dataFim;

    /**
     * Construtor default.
     */
    public Aliquota() {
    }

    /**
     * Construtor com preenchimento da entidade.
     * 
     * @param codigoAliquota
     *            Valor do atributo codigoAliquota;
     * @param imposto
     *            Valor do atributo imposto;
     * @param valorAliquota
     *            Valor do atributo valorAliquota;
     * @param dataInicio
     *            Valor do atributo dataInicio;
     */
    public Aliquota(final Long codigoAliquota, final Imposto imposto,
            final BigDecimal valorAliquota, final Date dataInicio) {
        this.codigoAliquota = codigoAliquota;
        this.imposto = imposto;
        this.valorAliquota = valorAliquota;
        this.dataInicio = dataInicio;
    }

    /**
     * Construtor com preenchimento da entidade.
     * 
     * @param codigoAliquota
     *            Valor do atributo codigoAliquota;
     * @param imposto
     *            Valor do atributo imposto;
     * @param valorAliquota
     *            Valor do atributo valorAliquota;
     * @param dataInicio
     *            Valor do atributo dataInicio;
     * @param dataFim
     *            Valor do atributo dataFim;
     */
    public Aliquota(final Long codigoAliquota, final Imposto imposto,
            final BigDecimal valorAliquota, final Date dataInicio,
            final Date dataFim) {
        this.codigoAliquota = codigoAliquota;
        this.imposto = imposto;
        this.valorAliquota = valorAliquota;
        this.dataInicio = dataInicio;
        this.dataFim = dataFim;
    }

    /**
     * Obtem o valor do atributo codigoAliquota.<BR>
     * Atributo gerado a partir da coluna ALIQ_CD_ALIQUOTA.
     * 
     * @return Valor do atributo codigoAliquota.
     */
    public Long getCodigoAliquota() {
        return this.codigoAliquota;
    }

    /**
     * Atualiza o valor do atributo codigoAliquota.<BR>
     * Atributo gerado a partir da coluna ALIQ_CD_ALIQUOTA.
     * 
     * @param codigoAliquota
     *            Novo valor para o atributo codigoAliquota.
     */
    public void setCodigoAliquota(final Long codigoAliquota) {
        this.codigoAliquota = codigoAliquota;
    }

    /**
     * Obtem o valor do atributo imposto.<BR>
     * Atributo gerado a partir da coluna IMPO_CD_IMPOSTO.
     * 
     * @return Valor do atributo imposto.
     */
    public Imposto getImposto() {
        return this.imposto;
    }

    /**
     * Atualiza o valor do atributo imposto.<BR>
     * Atributo gerado a partir da coluna IMPO_CD_IMPOSTO.
     * 
     * @param imposto
     *            Novo valor para o atributo imposto.
     */
    public void setImposto(final Imposto imposto) {
        this.imposto = imposto;
    }

    /**
     * Obtem o valor do atributo valorAliquota.<BR>
     * Atributo gerado a partir da coluna ALIQ_VL_ALIQUOTA.
     * 
     * @return Valor do atributo valorAliquota.
     */
    public BigDecimal getValorAliquota() {
        return this.valorAliquota;
    }

    /**
     * Atualiza o valor do atributo valorAliquota.<BR>
     * Atributo gerado a partir da coluna ALIQ_VL_ALIQUOTA.
     * 
     * @param valorAliquota
     *            Novo valor para o atributo valorAliquota.
     */
    public void setValorAliquota(final BigDecimal valorAliquota) {
        this.valorAliquota = valorAliquota;
    }

    /**
     * Obtem o valor do atributo dataInicio.<BR>
     * Atributo gerado a partir da coluna ALIQ_DT_INICIO.
     * 
     * @return Valor do atributo dataInicio.
     */
    public Date getDataInicio() {
        return this.dataInicio;
    }

    /**
     * Atualiza o valor do atributo dataInicio.<BR>
     * Atributo gerado a partir da coluna ALIQ_DT_INICIO.
     * 
     * @param dataInicio
     *            Novo valor para o atributo dataInicio.
     */
    public void setDataInicio(final Date dataInicio) {
        this.dataInicio = dataInicio;
    }

    /**
     * Obtem o valor do atributo dataFim.<BR>
     * Atributo gerado a partir da coluna ALIQ_DT_FIM.
     * 
     * @return Valor do atributo dataFim.
     */
    public Date getDataFim() {
        return this.dataFim;
    }

    /**
     * Atualiza o valor do atributo dataFim.<BR>
     * Atributo gerado a partir da coluna ALIQ_DT_FIM.
     * 
     * @param dataFim
     *            Novo valor para o atributo dataFim.
     */
    public void setDataFim(final Date dataFim) {
        this.dataFim = dataFim;
    }

    /**
     * @see Object#toString()
     * @return representação String do Objeto
     */
    @Override
    public String toString() {
        StringBuffer buffer = new StringBuffer();

        buffer.append(getClass().getName()).append("@").append(
                Integer.toHexString(hashCode())).append(" [");
        buffer.append("codigoAliquota").append("='")
                .append(getCodigoAliquota()).append("' ");
        buffer.append("imposto").append("='").append(getImposto()).append("' ");
        buffer.append("valorAliquota").append("='").append(getValorAliquota())
                .append("' ");
        buffer.append("dataInicio").append("='").append(getDataInicio())
                .append("' ");
        buffer.append("dataFim").append("='").append(getDataFim()).append("' ");
        buffer.append("]");

        return buffer.toString();
    }

}
