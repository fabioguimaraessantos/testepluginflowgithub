/*
 * @(#) ComissaoAcelerador.java
 * Copyright (c) 2010 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import java.math.BigDecimal;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * Entity gerado a partir da tabela COMISSAO_ACELERADOR.
 *
 * @author Generated by Hibernate Tools 3.2.4.GA
 * @since 05/10/2010 11:13:07
 * @version 09/01/19 1.1 10:08:00
 */
@Entity
@Table(name = "COMISSAO_ACELERADOR")
@NamedQueries({
    @NamedQuery(name = "ComissaoAcelerador.findAll", query = "SELECT t FROM ComissaoAcelerador t"),
    
    @NamedQuery(name = "ComissaoAcelerador.findByFilter", query = "SELECT ca FROM ComissaoAcelerador ca" 
        + " JOIN FETCH ca.comissao c "
        + " JOIN FETCH c.pessoaAe "
        + " JOIN FETCH c.pessoaAprovador "
        + " JOIN FETCH c.contratoPratica cp "
        //+ " JOIN FETCH cp.contrato con "
        // TODO testar esse método
        + " JOIN FETCH cp.msa msa "
        + " JOIN FETCH msa.cliente "
        + " JOIN FETCH ca.acelerador "
        + " WHERE ( (ca.acelerador.codigoAcelerador = ?1) OR (?1 is 0L) ) "
        + "   AND ( (ca.comissao.contratoPratica.codigoContratoPratica = ?2) OR (?2 is 0L) ) "
        + "   AND ( (ca.comissao.contratoPratica.msa.cliente.codigoCliente = ?3) OR (?3 is 0L) ) "
        + "   AND (ca.comissao.dataComissao between (?4) AND (?5) ) "
        + "   AND ( (ca.comissao.pessoaAe.codigoPessoa = ?6) OR (?6 is 0L)) "
        + "   AND ( (ca.comissao.pessoaAprovador.codigoPessoa = ?7) OR (?7 is 0L))" 
        + "   AND ( ca.comissao.indicadorEstadoAtual like '%' || ?8 || '%') " 
        + " ORDER BY ca.comissao.dataComissao"),
    
    // o total acumulado, é calulado utilizando o valor líquido do valor do acelerador     
    @NamedQuery(name = "ComissaoAcelerador.getTotalAcumulado", 
            query = "SELECT SUM(ca.valorContrato*(1-ca.percentualImposto/100)) FROM ComissaoAcelerador ca "
        + " WHERE ca.comissao.contratoPratica.codigoContratoPratica = ?1 "
        + "     AND ca.comissao.pessoaAe.codigoPessoa = ?2 " 
        + "     AND ca.acelerador.codigoAcelerador = ?3"
        + "     AND ca.comissao.dataComissao <= ?4")   
})
public class ComissaoAcelerador implements java.io.Serializable {

    /**
     * Valor do serialVersionUID.
     */
    private static final long serialVersionUID = 1L;

    /** Constante para NamedQuery "ComissaoAcelerador.findAll". */
    public static final String FIND_ALL = "ComissaoAcelerador.findAll";
    
    /** Constante para NamedQuery "ComissaoAcelerador.findByFilter". */
    public static final String FIND_BY_FILTER = "ComissaoAcelerador.findByFilter";
    
    /** Constante para NamedQuery "ComissaoAcelerador.getTotalAcumulado". */
    public static final String GET_TOTAL_ACUMULADO = "ComissaoAcelerador.getTotalAcumulado";
    
    /** Atributo gerado a partir da coluna COAC_CD_COMISSAO_ACEL. */
    @Id
    @GeneratedValue(generator = "ComissaoAceleradorSeq")
    @SequenceGenerator(name = "ComissaoAceleradorSeq", 
            sequenceName = "SQ_COAC_CD_COMISSAO_ACEL", allocationSize = 1)
    @Column(name = "COAC_CD_COMISSAO_ACEL", unique = true, 
            nullable = false, precision = 22, scale = 0)
    private Long codigoComissaoAcel;

    /**
     * Atributo gerado a partir da coluna ACEL_CD_ACELERADOR.
     */
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "ACEL_CD_ACELERADOR", nullable = false)
    private Acelerador acelerador;

    /**
     * Atributo gerado a partir da coluna COMI_CD_COMISSAO.
     */
    @ManyToOne(fetch = FetchType.EAGER, cascade = CascadeType.ALL)
    @JoinColumn(name = "COMI_CD_COMISSAO", nullable = false)
    private Comissao comissao;

    /**
     * Atributo gerado a partir da coluna COAC_VL_CONTRATO.
     */

    @Column(name = "COAC_VL_CONTRATO", precision = 22, scale = 0)
    private BigDecimal valorContrato;

    /**
     * Atributo gerado a partir da coluna COAC_PR_IMPOSTO.
     * Valor do Imposto calculado das medias dos impostos sobre todos 
     * os fiscal deals + a media os impostos sobre lucro liquido
     */
    @Column(name = "COAC_PR_IMPOSTO", precision = 22, scale = 0)
    private BigDecimal percentualImposto;

    /**
     * Construtor default.
     */
    public ComissaoAcelerador() {
    }

    /**
     * Construtor com preenchimento da entidade.
     * @param codigoComissaoAcel Valor do atributo codigoComissaoAcel;
     * @param acelerador Valor do atributo acelerador;
     * @param comissao Valor do atributo comissao;
     */
    public ComissaoAcelerador(final Long codigoComissaoAcel,
            final Acelerador acelerador, final Comissao comissao) {
        this.codigoComissaoAcel = codigoComissaoAcel;
        this.acelerador = acelerador;
        this.comissao = comissao;
    }

    /**
     * Obtem o valor do atributo codigoComissaoAcel.<BR>
     * Atributo gerado a partir da coluna COAC_CD_COMISSAO_ACEL.
     * @return Valor do atributo codigoComissaoAcel.
     */
    public Long getCodigoComissaoAcel() {
        return this.codigoComissaoAcel;
    }

    /**
     * Atualiza o valor do atributo codigoComissaoAcel.<BR>
     * Atributo gerado a partir da coluna COAC_CD_COMISSAO_ACEL.
     * @param codigoComissaoAcel Novo valor para o atributo codigoComissaoAcel.
     */
    public void setCodigoComissaoAcel(final Long codigoComissaoAcel) {
        this.codigoComissaoAcel = codigoComissaoAcel;
    }

    /**
     * Obtem o valor do atributo acelerador.<BR>
     * Atributo gerado a partir da coluna ACEL_CD_ACELERADOR.
     * @return Valor do atributo acelerador.
     */
    public Acelerador getAcelerador() {
        return this.acelerador;
    }

    /**
     * Atualiza o valor do atributo acelerador.<BR>
     * Atributo gerado a partir da coluna ACEL_CD_ACELERADOR.
     * @param acelerador Novo valor para o atributo acelerador.
     */
    public void setAcelerador(final Acelerador acelerador) {
        this.acelerador = acelerador;
    }

    /**
     * Obtem o valor do atributo comissao.<BR>
     * Atributo gerado a partir da coluna COMI_CD_COMISSAO.
     * @return Valor do atributo comissao.
     */
    public Comissao getComissao() {
        return this.comissao;
    }

    /**
     * Atualiza o valor do atributo comissao.<BR>
     * Atributo gerado a partir da coluna COMI_CD_COMISSAO.
     * @param comissao Novo valor para o atributo comissao.
     */
    public void setComissao(final Comissao comissao) {
        this.comissao = comissao;
    }

    /**
     * Obtem o valor do atributo valorContrato.<BR>
     * Atributo gerado a partir da coluna COAC_VL_CONTRATO.
     * @return Valor do atributo valorContrato.
     */
    public BigDecimal getValorContrato() {
        return this.valorContrato;
    }

    /**
     * Atualiza o valor do atributo valorContrato.<BR>
     * Atributo gerado a partir da coluna COAC_VL_CONTRATO.
     * @param valorContrato Novo valor para o atributo valorContrato.
     */
    public void setValorContrato(final BigDecimal valorContrato) {
        this.valorContrato = valorContrato;
    }

    /**
     * @see Object#toString()
     * 
     * @return retorna a entidade no formato de string
     */
    @Override
    public String toString() {
        StringBuffer buffer = new StringBuffer();

        buffer.append(getClass().getName()).append("@").append(
                Integer.toHexString(hashCode())).append(" [");
        buffer.append("codigoComissaoAcel").append("='").append(
                getCodigoComissaoAcel()).append("' ");
        buffer.append("acelerador").append("='").append(getAcelerador())
                .append("' ");
        buffer.append("comissao").append("='").append(getComissao()).append(
                "' ");
        buffer.append("valorContrato").append("='").append(getValorContrato())
                .append("' ");
        buffer.append("]");

        return buffer.toString();
    }

    /**
     * @param percentualImposto the percentualImposto to set
     */
    public void setPercentualImposto(final BigDecimal percentualImposto) {
        this.percentualImposto = percentualImposto;
    }

    /**
     * @return the percentualImposto
     */
    public BigDecimal getPercentualImposto() {
        return percentualImposto;
    }

}
