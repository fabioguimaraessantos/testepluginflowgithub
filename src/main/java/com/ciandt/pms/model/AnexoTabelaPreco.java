/*
 * @(#) AnexoTabelaPreco.java
 * Copyright (c) 2008 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import org.hibernate.envers.Audited;
import org.hibernate.envers.RelationTargetAuditMode;

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Entity gerado a partir da tabela ANEXO_TABELA_PRECO.
 * 
 * @author Generated by Hibernate Tools 3.2.4.GA
 * @since 25/06/2012 09:52:52
 * @version 09/01/19 1.1 10:08:00
 */
@Entity
@Table(name = "ANEXO_TABELA_PRECO")
@NamedQueries({
        @NamedQuery(name = "AnexoTabelaPreco.findAll", query = "SELECT t FROM AnexoTabelaPreco t"),

        @NamedQuery(name = "AnexoTabelaPreco.findByTabelaPreco", query = "SELECT t FROM AnexoTabelaPreco t WHERE " 
                    +   "t.tabelaPreco.codigoTabelaPreco = ?")})
public class AnexoTabelaPreco implements java.io.Serializable {

    /**
     * Valor do serialVersionUID.
     */
    private static final long serialVersionUID = 1L;

    /**
     * Constante para NamedQuery "AnexoTabelaPreco.findAll".
     */
    public static final String FIND_ALL = "AnexoTabelaPreco.findAll";
    
    /**
     * Constante para NamedQuery "AnexoTabelaPreco.findByTabelaPreco".
     */
    public static final String FIND_BY_TABELA_PRECO = "AnexoTabelaPreco.findByTabelaPreco";

    /**
     * Atributo gerado a partir da coluna ANTP_CD_ANEXO_TAB_PRECO.
     */
    @Id
    @GeneratedValue(generator = "AnexoTabelaPrecoSeq")
    @SequenceGenerator(name = "AnexoTabelaPrecoSeq", sequenceName = "SQ_ANTP_CD_ANEXO_TAB_PRECO", allocationSize = 1)
    @Column(name = "ANTP_CD_ANEXO_TAB_PRECO", unique = true, nullable = false, precision = 18, scale = 0)
    private Long codigoAnexoTabPreco;

    /**
     * Atributo gerado a partir da coluna TAPR_CD_TABELA_PRECO.
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
    @JoinColumn(name = "TAPR_CD_TABELA_PRECO", nullable = false)
    private TabelaPreco tabelaPreco;

    /**
     * Atributo gerado a partir da coluna ANTP_TX_NOME_ARQUIVO.
     */

    @Column(name = "ANTP_TX_NOME_ARQUIVO", length = 400)
    private String textoNomeArquivo;

    /**
     * Atributo gerado a partir da coluna ANTP_TX_AUTOR.
     */
    @Column(name = "ANTP_TX_AUTOR")
    private String textoAutor;

    /**
     * Atributo gerado a partir da coluna ANTP_TX_COMENTARIO.
     */

    @Column(name = "ANTP_TX_COMENTARIO", length = 500)
    private String textoComentario;

    /**
     * Atributo gerado a partir da coluna ANTP_DT_UPLOAD.
     */
    @Temporal(TemporalType.DATE)
    @Column(name = "ANTP_DT_UPLOAD", length = 7)
    private Date dataUpload;

    /**
     * Construtor default.
     */
    public AnexoTabelaPreco() {
    }

    /**
     * Construtor com preenchimento da entidade.
     * 
     * @param codigoAnexoTabPreco
     *            Valor do atributo codigoAnexoTabPreco;
     * @param tabelaPreco
     *            Valor do atributo tabelaPreco;
     */
    public AnexoTabelaPreco(final Long codigoAnexoTabPreco,
            final TabelaPreco tabelaPreco) {
        this.codigoAnexoTabPreco = codigoAnexoTabPreco;
        this.tabelaPreco = tabelaPreco;
    }

    /**
     * Construtor com preenchimento da entidade.
     * 
     * @param codigoAnexoTabPreco
     *            Valor do atributo codigoAnexoTabPreco;
     * @param tabelaPreco
     *            Valor do atributo tabelaPreco;
     * @param textoNomeArquivo
     *            Valor do atributo textoNomeArquivo;
     * @param textoAutor
     *            Valor do atributo textoAutor;
     * @param textoComentario
     *            Valor do atributo textoComentario;
     * @param dataUpload
     *            Valor do atributo dataUpload;
     */
    public AnexoTabelaPreco(final Long codigoAnexoTabPreco,
            final TabelaPreco tabelaPreco, final String textoNomeArquivo,
            final String textoAutor, final String textoComentario,
            final Date dataUpload) {
        this.codigoAnexoTabPreco = codigoAnexoTabPreco;
        this.tabelaPreco = tabelaPreco;
        this.textoNomeArquivo = textoNomeArquivo;
        this.textoAutor = textoAutor;
        this.textoComentario = textoComentario;
        this.dataUpload = dataUpload;
    }

    /**
     * Obtem o valor do atributo codigoAnexoTabPreco.<BR>
     * Atributo gerado a partir da coluna ANTP_CD_ANEXO_TAB_PRECO.
     * 
     * @return Valor do atributo codigoAnexoTabPreco.
     */
    public Long getCodigoAnexoTabPreco() {
        return this.codigoAnexoTabPreco;
    }

    /**
     * Atualiza o valor do atributo codigoAnexoTabPreco.<BR>
     * Atributo gerado a partir da coluna ANTP_CD_ANEXO_TAB_PRECO.
     * 
     * @param codigoAnexoTabPreco
     *            Novo valor para o atributo codigoAnexoTabPreco.
     */
    public void setCodigoAnexoTabPreco(final Long codigoAnexoTabPreco) {
        this.codigoAnexoTabPreco = codigoAnexoTabPreco;
    }

    /**
     * Obtem o valor do atributo tabelaPreco.<BR>
     * Atributo gerado a partir da coluna TAPR_CD_TABELA_PRECO.
     * 
     * @return Valor do atributo tabelaPreco.
     */
    public TabelaPreco getTabelaPreco() {
        return this.tabelaPreco;
    }

    /**
     * Atualiza o valor do atributo tabelaPreco.<BR>
     * Atributo gerado a partir da coluna TAPR_CD_TABELA_PRECO.
     * 
     * @param tabelaPreco
     *            Novo valor para o atributo tabelaPreco.
     */
    public void setTabelaPreco(final TabelaPreco tabelaPreco) {
        this.tabelaPreco = tabelaPreco;
    }

    /**
     * Obtem o valor do atributo textoNomeArquivo.<BR>
     * Atributo gerado a partir da coluna ANTP_TX_NOME_ARQUIVO.
     * 
     * @return Valor do atributo textoNomeArquivo.
     */
    public String getTextoNomeArquivo() {
        return this.textoNomeArquivo;
    }

    /**
     * Atualiza o valor do atributo textoNomeArquivo.<BR>
     * Atributo gerado a partir da coluna ANTP_TX_NOME_ARQUIVO.
     * 
     * @param textoNomeArquivo
     *            Novo valor para o atributo textoNomeArquivo.
     */
    public void setTextoNomeArquivo(final String textoNomeArquivo) {
        this.textoNomeArquivo = textoNomeArquivo;
    }

    /**
     * Obtem o valor do atributo textoAutor.<BR>
     * Atributo gerado a partir da coluna ANTP_TX_AUTOR.
     * 
     * @return Valor do atributo textoAutor.
     */
    public String getTextoAutor() {
        return this.textoAutor;
    }

    /**
     * Atualiza o valor do atributo textoAutor.<BR>
     * Atributo gerado a partir da coluna ANTP_TX_AUTOR.
     * 
     * @param textoAutor
     *            Novo valor para o atributo textoAutor.
     */
    public void setTextoAutor(final String textoAutor) {
        this.textoAutor = textoAutor;
    }

    /**
     * Obtem o valor do atributo textoComentario.<BR>
     * Atributo gerado a partir da coluna ANTP_TX_COMENTARIO.
     * 
     * @return Valor do atributo textoComentario.
     */
    public String getTextoComentario() {
        return this.textoComentario;
    }

    /**
     * Atualiza o valor do atributo textoComentario.<BR>
     * Atributo gerado a partir da coluna ANTP_TX_COMENTARIO.
     * 
     * @param textoComentario
     *            Novo valor para o atributo textoComentario.
     */
    public void setTextoComentario(final String textoComentario) {
        this.textoComentario = textoComentario;
    }

    /**
     * Obtem o valor do atributo dataUpload.<BR>
     * Atributo gerado a partir da coluna ANTP_DT_UPLOAD.
     * 
     * @return Valor do atributo dataUpload.
     */
    public Date getDataUpload() {
        return this.dataUpload;
    }

    /**
     * Atualiza o valor do atributo dataUpload.<BR>
     * Atributo gerado a partir da coluna ANTP_DT_UPLOAD.
     * 
     * @param dataUpload
     *            Novo valor para o atributo dataUpload.
     */
    public void setDataUpload(final Date dataUpload) {
        this.dataUpload = dataUpload;
    }

    /**
     * @see Object#toString()
     */
    @Override
    public String toString() {
        StringBuffer buffer = new StringBuffer();

        buffer.append(getClass().getName()).append("@").append(
                Integer.toHexString(hashCode())).append(" [");
        buffer.append("codigoAnexoTabPreco").append("='").append(
                getCodigoAnexoTabPreco()).append("' ");
        buffer.append("tabelaPreco").append("='").append(getTabelaPreco())
                .append("' ");
        buffer.append("textoNomeArquivo").append("='").append(
                getTextoNomeArquivo()).append("' ");
        buffer.append("textoAutor").append("='").append(getTextoAutor())
                .append("' ");
        buffer.append("textoComentario").append("='").append(
                getTextoComentario()).append("' ");
        buffer.append("dataUpload").append("='").append(getDataUpload())
                .append("' ");
        buffer.append("]");

        return buffer.toString();
    }

}
