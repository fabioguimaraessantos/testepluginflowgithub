/*
 * @(#) NaturezaCentroLucro.java
 * Copyright (c) 2008 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.StringUtils;

import com.ciandt.pms.Constants;
import com.ciandt.pms.control.jsf.util.BundleUtil;


/**
 * Entity gerado a partir da tabela NATUREZA_CENTRO_LUCRO. Relacao das Naturezas
 * dos Centros de Lucro
 * 
 * @author Generated by Hibernate Tools 3.2.4.GA
 * @since 04/08/2009 09:09:36
 * @version 09/01/19 1.1 10:08:00
 */
@Entity
@Table(name = "NATUREZA_CENTRO_LUCRO")
@NamedQueries({
		@NamedQuery(name = NaturezaCentroLucro.FIND_ALL, query = "SELECT t FROM NaturezaCentroLucro t "
                + "WHERE (t.indicadorAtivo = 'A') "
                + "ORDER BY t.nomeNatureza ASC "),
		@NamedQuery(name = NaturezaCentroLucro.FIND_BY_FILTER, query = "SELECT nacl FROM NaturezaCentroLucro nacl "
                + "WHERE (UPPER(nacl.nomeNatureza) like '%'||TRIM(UPPER(?))||'%' OR (? is null)) "
                + "AND (UPPER(nacl.indicadorAtivo) like '%'||TRIM(UPPER(?))||'%' OR (? is null)) "
                + "AND (UPPER(nacl.indicadorTipo) like '%'||TRIM(UPPER(?))||'%' OR (? is null)) "
                + "ORDER BY nacl.nomeNatureza ASC "),
		@NamedQuery(name = NaturezaCentroLucro.FIND_ALL_NOT_IN_GRUPO_CUSTO, query = "SELECT nacl FROM NaturezaCentroLucro nacl "
                + "WHERE (nacl.indicadorAtivo = 'A') "
                + "AND nacl.codigoNatureza NOT IN "
                + "(SELECT gccl.naturezaCentroLucro.codigoNatureza "
                + "FROM GrupoCustoCentroLucro gccl "
                + "WHERE gccl.grupoCustoPeriodo.codigoGcPeriodo = ?"
                + "GROUP BY gccl.naturezaCentroLucro.codigoNatureza) "
				+ "ORDER BY nacl.nomeNatureza ASC "),
		@NamedQuery(name = NaturezaCentroLucro.FIND_BY_SIGLA, query = "SELECT t FROM NaturezaCentroLucro t"
				+ " WHERE t.siglaNaturezaCentroLucro = :sigla "
				+ " ORDER BY t.nomeNatureza ") })
public class NaturezaCentroLucro implements java.io.Serializable {

    /**
     * Valor do serialVersionUID.
     */
    private static final long serialVersionUID = 1L;

    /**
     * Constante para NamedQuery "NaturezaCentroLucro.findAll".
     */
    public static final String FIND_ALL = "NaturezaCentroLucro.findAll";

    /**
     * Constante para NamedQuery "NaturezaCentroLucro.findByFilter".
     */
    public static final String FIND_BY_FILTER =
            "NaturezaCentroLucro.findByFilter";

    /**
     * Constante para NamedQuery "NaturezaCentroLucro.findAllNotInGrupoCusto".
     */
    public static final String FIND_ALL_NOT_IN_GRUPO_CUSTO =
            "NaturezaCentroLucro.findAllNotInGrupoCusto";

	/** Constante para NamedQuery "NaturezaCentroLucro.findAllBySigla". */
	public static final String FIND_BY_SIGLA = "NaturezaCentroLucro.findBySigla";

    /**
     * Atributo gerado a partir da coluna NACL_CD_NATUREZA. Codigo da Natureza
     */
    @Id
    @GeneratedValue(generator = "NaturezaCentroLucroSeq")
    @SequenceGenerator(name = "NaturezaCentroLucroSeq", sequenceName = "SQ_NACL_CD_NATUREZA", allocationSize = 1)
    @Column(name = "NACL_CD_NATUREZA", unique = true, nullable = false, precision = 18, scale = 0)
    private Long codigoNatureza;

    /**
     * Atributo gerado a partir da coluna NACL_NM_NATUREZA. Descricao da
     * Natureza
     */

    @Column(name = "NACL_NM_NATUREZA", length = 100)
    private String nomeNatureza;

    /**
     * Atributo gerado a partir da coluna NACL_IN_ATIVO.
     */

    @Column(name = "NACL_IN_ATIVO", nullable = false, length = 1)
    private String indicadorAtivo;

    /**
     * Atributo gerado a partir da coluna NACL_IN_TIPO.
     */
    @Column(name = "NACL_IN_TIPO", length = 1)
    private String indicadorTipo;

    /**
     * Atributo gerado a partir da coluna NACL_TX_BUNDLE.
     */
    @Column(name = "NACL_TX_BUNDLE", length = 200)
    private String textoBundle;

    /**
     * Atributo gerado a partir da tabela GRUPO_CUSTO_CENTRO_LUCRO.
     */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "naturezaCentroLucro")
    private Set<GrupoCustoCentroLucro> grupoCustoCentroLucros =
            new HashSet<GrupoCustoCentroLucro>(0);

    /**
     * Construtor default.
     */
    public NaturezaCentroLucro() {
    }

    /**
     * Construtor com preenchimento da entidade.
     * 
     * @param codigoNatureza
     *            Valor do atributo codigoNatureza;
     * @param indicadorAtivo
     *            Valor do atributo indicadorAtivo;
     */
    public NaturezaCentroLucro(final Long codigoNatureza,
            final String indicadorAtivo) {
        this.codigoNatureza = codigoNatureza;
        this.indicadorAtivo = indicadorAtivo;
    }

    /**
     * Construtor com preenchimento da entidade.
     * 
     * @param codigoNatureza
     *            Valor do atributo codigoNatureza;
     * @param nomeNatureza
     *            Valor do atributo nomeNatureza;
     * @param indicadorAtivo
     *            Valor do atributo indicadorAtivo;
     * @param indicadorTipo
     *            Valor do atributo indicadorTipo;
     * @param textoBundle
     *            Valor do atributo textoBundle;
     * @param grupoCustoCentroLucros
     *            Valor do atributo grupoCustoCentroLucros;
     * @param centroLucros
     *            Valor do atributo centroLucros;
     */
    public NaturezaCentroLucro(final Long codigoNatureza,
            final String nomeNatureza, final String indicadorAtivo,
            final String indicadorTipo, final String textoBundle,
            final Set<GrupoCustoCentroLucro> grupoCustoCentroLucros,
            final List<CentroLucro> centroLucros) {
        this.codigoNatureza = codigoNatureza;
        this.nomeNatureza = nomeNatureza;
        this.indicadorAtivo = indicadorAtivo;
        this.indicadorTipo = indicadorTipo;
        this.textoBundle = textoBundle;
        this.grupoCustoCentroLucros = grupoCustoCentroLucros;
        this.centroLucros = centroLucros;
    }

    /**
     * Atributo transit�rio indicador se eh bundle ou nao.
     */
    @Transient
    private Boolean indicadorIsBundle;

    /**
     * Relacionamento um pra muitos.
     */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "naturezaCentroLucro")
    private List<CentroLucro> centroLucros = new ArrayList<CentroLucro>(0);

	/**
	 * Atributo gerado a partir da coluna NACL_SG_NATUREZA_CLUCRO.
	 */
	@Column(name = "NACL_SG_NATUREZA_CLUCRO", length = 4)
	private String siglaNaturezaCentroLucro;



    /**
     * Atributo gerado a partir da coluna NACL_TX_INFORMATION.
     */
    @Column(name = "NACL_TX_INFORMATION", length = 255)
    private String textInformationNaturezaCentroLucro;


    /**
     * Atributo transit�rio indicador se eh bundle ou nao.
     * 
     * @return the indicadorIsBundle
     */
    public Boolean getIndicadorIsBundle() {
        return indicadorIsBundle;
    }

    /**
     * @param indicadorIsBundle
     *            the indicadorIsBundle to set
     */
    public void setIndicadorIsBundle(final Boolean indicadorIsBundle) {
        this.indicadorIsBundle = indicadorIsBundle;
    }

    /**
     * Obtem o valor do atributo centroLucros.<BR>
     * 
     * @return Valor do atributo centroLucros.
     */
    public List<CentroLucro> getCentroLucros() {
        return this.centroLucros;
    }

    /**
     * Obtem o valor do atributo centroLucros Ativos.<BR>
     * 
     * @return Valor do atributo centroLucros.
     */
    public List<CentroLucro> getCentroLucrosAtivos() {
		List<CentroLucro> centroLucrosAtivos = new ArrayList<CentroLucro>();

		for (CentroLucro centroLucro : this.centroLucros) {
			if (centroLucro.getIndicadorAtivo().equals(Constants.ACTIVE)) {
				centroLucrosAtivos.add(centroLucro);
			}
		}

		return centroLucrosAtivos;
	}

    /**
     * Atualiza o valor do atributo centroLucros.<BR>
     * 
     * @param centroLucros
     *            Novo valor para o atributo centroLucros.
     */
    public void setCentroLucros(final List<CentroLucro> centroLucros) {
        this.centroLucros = centroLucros;
    }

    /**
     * Obtem o valor do atributo codigoNatureza.<BR>
     * Atributo gerado a partir da coluna NACL_CD_NATUREZA. Codigo da Natureza
     * 
     * @return Valor do atributo codigoNatureza.
     */
    public Long getCodigoNatureza() {
        return this.codigoNatureza;
    }

    /**
     * Atualiza o valor do atributo codigoNatureza.<BR>
     * Atributo gerado a partir da coluna NACL_CD_NATUREZA. Codigo da Natureza
     * 
     * @param codigoNatureza
     *            Novo valor para o atributo codigoNatureza.
     */
    public void setCodigoNatureza(final Long codigoNatureza) {
        this.codigoNatureza = codigoNatureza;
    }

    /**
     * Obtem o valor do atributo nomeNatureza.<BR>
     * Atributo gerado a partir da coluna NACL_NM_NATUREZA. Descricao da
     * Natureza
     * 
     * @return Valor do atributo nomeNatureza.
     */
    public String getNomeNatureza() {
        // verifica se tem chave do bundle, caso contr�rio, utiliza o
        // nomeNatureza que foi cadastrado na base
        if (!StringUtils.isEmpty(this.getTextoBundle())) {
            String textoBundleLocal =
                    BundleUtil.getBundle(this.getTextoBundle());
            if (!StringUtils.isEmpty(textoBundleLocal)) {
                this.setIndicadorIsBundle(Boolean.valueOf(true));
                return textoBundleLocal;
            }
        }

        this.setIndicadorIsBundle(Boolean.valueOf(false));
        return this.nomeNatureza;
    }

    /**
     * Atualiza o valor do atributo nomeNatureza.<BR>
     * Atributo gerado a partir da coluna NACL_NM_NATUREZA. Descricao da
     * Natureza
     * 
     * @param nomeNatureza
     *            Novo valor para o atributo nomeNatureza.
     */
    public void setNomeNatureza(final String nomeNatureza) {
        this.nomeNatureza = nomeNatureza;
    }

    /**
     * Obtem o valor do atributo indicadorAtivo.<BR>
     * Atributo gerado a partir da coluna NACL_IN_ATIVO.
     * 
     * @return Valor do atributo indicadorAtivo.
     */
    public String getIndicadorAtivo() {
        return this.indicadorAtivo;
    }

    /**
     * Atualiza o valor do atributo indicadorAtivo.<BR>
     * Atributo gerado a partir da coluna NACL_IN_ATIVO.
     * 
     * @param indicadorAtivo
     *            Novo valor para o atributo indicadorAtivo.
     */
    public void setIndicadorAtivo(final String indicadorAtivo) {
        this.indicadorAtivo = indicadorAtivo;
    }

    /**
     * Obtem o valor do atributo indicadorTipo.<BR>
     * Atributo gerado a partir da coluna NACL_IN_TIPO.
     * 
     * @return Valor do atributo indicadorTipo.
     */
    public String getIndicadorTipo() {
        return this.indicadorTipo;
    }

    /**
     * Atualiza o valor do atributo indicadorTipo.<BR>
     * Atributo gerado a partir da coluna NACL_IN_TIPO.
     * 
     * @param indicadorTipo
     *            Novo valor para o atributo indicadorTipo.
     */
    public void setIndicadorTipo(final String indicadorTipo) {
        this.indicadorTipo = indicadorTipo;
    }

    /**
     * Obtem o valor do atributo textoBundle.<BR>
     * Atributo gerado a partir da coluna NACL_TX_BUNDLE.
     * 
     * @return Valor do atributo textoBundle.
     */
    public String getTextoBundle() {
        return this.textoBundle;
    }

    /**
     * Atualiza o valor do atributo textoBundle.<BR>
     * Atributo gerado a partir da coluna NACL_TX_BUNDLE.
     * 
     * @param textoBundle
     *            Novo valor para o atributo textoBundle.
     */
    public void setTextoBundle(final String textoBundle) {
        this.textoBundle = textoBundle;
    }

    /**
     * Obtem o valor do atributo grupoCustoCentroLucros.<BR>
     * 
     * @return Valor do atributo grupoCustoCentroLucros.
     */
    public Set<GrupoCustoCentroLucro> getGrupoCustoCentroLucros() {
        return this.grupoCustoCentroLucros;
    }

    /**
     * Atualiza o valor do atributo grupoCustoCentroLucros.<BR>
     * 
     * @param grupoCustoCentroLucros
     *            Novo valor para o atributo grupoCustoCentroLucros.
     */
    public void setGrupoCustoCentroLucros(
            final Set<GrupoCustoCentroLucro> grupoCustoCentroLucros) {
        this.grupoCustoCentroLucros = grupoCustoCentroLucros;
    }

    /**
	 * Obtem o valor do atributo siglaNaturezaCentroLucro.<BR>
	 * 
	 * @return Valor do atributo siglaNaturezaCentroLucro.
	 */
	public String getSiglaNaturezaCentroLucro() {
		return siglaNaturezaCentroLucro;
	}

	/**
	 * Atualiza o valor do atributo siglaNaturezaCentroLucro.<BR>
	 * 
	 * @param siglaNaturezaCentroLucro
	 *            Novo valor para o atributo siglaNaturezaCentroLucro.
	 */
	public void setSiglaNaturezaCentroLucro(String siglaNaturezaCentroLucro) {
		this.siglaNaturezaCentroLucro = siglaNaturezaCentroLucro;
	}

    /**
     * Obtem o valor do atributo textInformationNaturezaCentroLucro.<BR>
     *
     * @return Valor do atributo textInformationNaturezaCentroLucro.
     */
    public String getTextInformationNaturezaCentroLucro() {
        return textInformationNaturezaCentroLucro;
    }

    /**
     * Atualiza o valor do atributo textInformationNaturezaCentroLucro.<BR>
     *
     * @param textInformationNaturezaCentroLucro
     *            Novo valor para o atributo textInformationNaturezaCentroLucro.
     */
    public void setTextInformationNaturezaCentroLucro(String textInformationNaturezaCentroLucro) {
        this.textInformationNaturezaCentroLucro = textInformationNaturezaCentroLucro;
    }

    /**
     * @see Object#toString()
     * @return representa��o String do Objeto
     */
    @Override
    public String toString() {
        StringBuffer buffer = new StringBuffer();

        buffer.append(getClass().getName()).append("@").append(
                Integer.toHexString(hashCode())).append(" [");
        buffer.append("codigoNatureza").append("='")
                .append(getCodigoNatureza()).append("' ");
        buffer.append("nomeNatureza").append("='").append(getNomeNatureza())
                .append("' ");
        buffer.append("indicadorAtivo").append("='")
                .append(getIndicadorAtivo()).append("' ");
        buffer.append("indicadorTipo").append("='").append(getIndicadorTipo())
                .append("' ");
        buffer.append("textoBundle").append("='").append(getTextoBundle())
                .append("' ");
        buffer.append("]");

        return buffer.toString();
    }
}
