/*
 * @(#) ChargebackContratoPratica.java
 * Copyright (c) 2010 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Entity gerado a partir da tabela CHARGEBACK_CONTRATO_PRATICA.
 *
 * @author Generated by Hibernate Tools 3.2.4.GA
 * @since 16/07/2010 14:23:15
 * @version 09/01/19 1.1 10:08:00
 */
@Entity
@Table(name = "CHARGEBACK_CONTRATO_PRATICA", 
        uniqueConstraints = {
            @UniqueConstraint(columnNames = {"COPR_CD_CONTRATO_PRATICA", "TIRE_CD_TI_RECURSO", "CHCP_DT_MES" }) 
        }
)
@NamedQueries({
    @NamedQuery(name = "ChargebackContratoPratica.findAll", 
            query = "SELECT t FROM ChargebackContratoPratica t"),
            
    @NamedQuery(name = "ChargebackContratoPratica.findByTiRecursoAndPeriod", 
            query = "SELECT t FROM ChargebackContratoPratica t" 
                + " WHERE t.tiRecurso.codigoTiRecurso = ? " 
                + " AND TRUNC(t.dataMes) between TRUNC(?) and TRUNC(?)"),
                
    @NamedQuery(name = "ChargebackContratoPratica.findByContractAndPeriod", 
            query = "SELECT t FROM ChargebackContratoPratica t" 
                + " WHERE t.contratoPratica.codigoContratoPratica = ? " 
                + " AND TRUNC(t.dataMes) between TRUNC(?) and TRUNC(?)"),
                
    @NamedQuery(name = "ChargebackContratoPratica.findByUniqueKey", 
            query = "SELECT t FROM ChargebackContratoPratica t" 
                + " WHERE t.contratoPratica.codigoContratoPratica = ? " 
                + " AND t.tiRecurso.codigoTiRecurso = ? "
                + " AND TRUNC(t.dataMes) = TRUNC(?)")
})
public class ChargebackContratoPratica implements java.io.Serializable {

    /** Valor do serialVersionUID. */
    private static final long serialVersionUID = 1L;

    /** Constante para NamedQuery "ChargebackContratoPratica.findAll". */
    public static final String FIND_ALL = "ChargebackContratoPratica.findAll";
    
    /** Constante para NamedQuery "ChargebackContratoPratica.findByTiRecursoAndPeriod". */
    public static final String FIND_BY_TIRECURSO_AND_PERIOD = 
        "ChargebackContratoPratica.findByTiRecursoAndPeriod";

    /** Constante para NamedQuery "ChargebackContratoPratica.findByContractAndPeriod". */
    public static final String FIND_BY_CONTRACT_AND_PERIOD = 
        "ChargebackContratoPratica.findByContractAndPeriod";
    
    /** Constante para NamedQuery "ChargebackContratoPratica.findByUniqueKey". */
    public static final String FIND_BY_UNIQUE_KEY = "ChargebackContratoPratica.findByUniqueKey";
    
    
    /**
     * Atributo gerado a partir da coluna CHCP_CD_CHARGEBACK_CP.
     */
    @Id
    @GeneratedValue(generator = "ChargebackContratoPraticaSeq")
    @SequenceGenerator(name = "ChargebackContratoPraticaSeq", 
            sequenceName = "SQ_CHCP_CD_CHARGEBACK_CP", allocationSize = 1)
    @Column(name = "CHCP_CD_CHARGEBACK_CP", unique = true, 
            nullable = false, precision = 18, scale = 0)
    private Long codigoChargebackCp;

    /**
     * Atributo gerado a partir da coluna TIRE_CD_TI_RECURSO.
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "TIRE_CD_TI_RECURSO", nullable = false)
    private TiRecurso tiRecurso;

    /**
     * Atributo gerado a partir da coluna COPR_CD_CONTRATO_PRATICA.
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "COPR_CD_CONTRATO_PRATICA", nullable = false)
    private ContratoPratica contratoPratica;

    /**
     * Atributo gerado a partir da coluna CHCP_DT_MES.
     */
    @Temporal(TemporalType.DATE)
    @Column(name = "CHCP_DT_MES", length = 7)
    private Date dataMes;

    /**
     * Atributo gerado a partir da coluna CHCP_NR_UNIDADES.
     */

    @Column(name = "CHCP_NR_UNIDADES", precision = 22, scale = 0)
    private BigDecimal numeroUnidades;

    /**
     * Construtor default.
     */
    public ChargebackContratoPratica() {
    }

    /**
     * Construtor com preenchimento da entidade.
     * @param codigoChargebackCp Valor do atributo codigoChargebackCp;
     * @param tiRecurso Valor do atributo tiRecurso;
     * @param contratoPratica Valor do atributo contratoPratica;
     */
    public ChargebackContratoPratica(final Long codigoChargebackCp,
            final TiRecurso tiRecurso, final ContratoPratica contratoPratica) {
        this.codigoChargebackCp = codigoChargebackCp;
        this.tiRecurso = tiRecurso;
        this.contratoPratica = contratoPratica;
    }

    /**
     * Construtor com preenchimento da entidade.
     * @param codigoChargebackCp Valor do atributo codigoChargebackCp;
     * @param tiRecurso Valor do atributo tiRecurso;
     * @param contratoPratica Valor do atributo contratoPratica;
     * @param dataMes Valor do atributo dataMes;
     * @param numeroUnidades Valor do atributo numeroUnidades;
     */
    public ChargebackContratoPratica(final Long codigoChargebackCp,
            final TiRecurso tiRecurso, final ContratoPratica contratoPratica, 
            final Date dataMes, final BigDecimal numeroUnidades) {
        this.codigoChargebackCp = codigoChargebackCp;
        this.tiRecurso = tiRecurso;
        this.contratoPratica = contratoPratica;
        this.dataMes = dataMes;
        this.numeroUnidades = numeroUnidades;
    }

    /**
     * Obtem o valor do atributo codigoChargebackCp.<BR>
     * Atributo gerado a partir da coluna CHCP_CD_CHARGEBACK_CP.
     * @return Valor do atributo codigoChargebackCp.
     */
    public Long getCodigoChargebackCp() {
        return this.codigoChargebackCp;
    }

    /**
     * Atualiza o valor do atributo codigoChargebackCp.<BR>
     * Atributo gerado a partir da coluna CHCP_CD_CHARGEBACK_CP.
     * @param codigoChargebackCp Novo valor para o atributo codigoChargebackCp.
     */
    public void setCodigoChargebackCp(final Long codigoChargebackCp) {
        this.codigoChargebackCp = codigoChargebackCp;
    }

    /**
     * Obtem o valor do atributo tiRecurso.<BR>
     * Atributo gerado a partir da coluna TIRE_CD_TI_RECURSO.
     * @return Valor do atributo tiRecurso.
     */
    public TiRecurso getTiRecurso() {
        return this.tiRecurso;
    }

    /**
     * Atualiza o valor do atributo tiRecurso.<BR>
     * Atributo gerado a partir da coluna TIRE_CD_TI_RECURSO.
     * @param tiRecurso Novo valor para o atributo tiRecurso.
     */
    public void setTiRecurso(final TiRecurso tiRecurso) {
        this.tiRecurso = tiRecurso;
    }

    /**
     * Obtem o valor do atributo contratoPratica.<BR>
     * Atributo gerado a partir da coluna COPR_CD_CONTRATO_PRATICA.
     * @return Valor do atributo contratoPratica.
     */
    public ContratoPratica getContratoPratica() {
        return this.contratoPratica;
    }

    /**
     * Atualiza o valor do atributo contratoPratica.<BR>
     * Atributo gerado a partir da coluna COPR_CD_CONTRATO_PRATICA.
     * @param contratoPratica Novo valor para o atributo contratoPratica.
     */
    public void setContratoPratica(final ContratoPratica contratoPratica) {
        this.contratoPratica = contratoPratica;
    }

    /**
     * Obtem o valor do atributo dataMes.<BR>
     * Atributo gerado a partir da coluna CHCP_DT_MES.
     * @return Valor do atributo dataMes.
     */
    public Date getDataMes() {
        return this.dataMes;
    }

    /**
     * Atualiza o valor do atributo dataMes.<BR>
     * Atributo gerado a partir da coluna CHCP_DT_MES.
     * @param dataMes Novo valor para o atributo dataMes.
     */
    public void setDataMes(final Date dataMes) {
        this.dataMes = dataMes;
    }

    /**
     * Obtem o valor do atributo numeroUnidades.<BR>
     * Atributo gerado a partir da coluna CHCP_NR_UNIDADES.
     * @return Valor do atributo numeroUnidades.
     */
    public BigDecimal getNumeroUnidades() {
        return this.numeroUnidades;
    }

    /**
     * Atualiza o valor do atributo numeroUnidades.<BR>
     * Atributo gerado a partir da coluna CHCP_NR_UNIDADES.
     * @param numeroUnidades Novo valor para o atributo numeroUnidades.
     */
    public void setNumeroUnidades(final BigDecimal numeroUnidades) {
        this.numeroUnidades = numeroUnidades;
    }

    /**
     * @see Object#toString()
     * 
     * @return retorna a entidade no formato de string
     */
    @Override
    public String toString() {
        StringBuffer buffer = new StringBuffer();

        buffer.append(getClass().getName()).append("@").append(
                Integer.toHexString(hashCode())).append(" [");
        buffer.append("codigoChargebackCp").append("='").append(
                getCodigoChargebackCp()).append("' ");
        buffer.append("tiRecurso").append("='").append(getTiRecurso()).append(
                "' ");
        buffer.append("contratoPratica").append("='").append(
                getContratoPratica()).append("' ");
        buffer.append("dataMes").append("='").append(getDataMes()).append("' ");
        buffer.append("numeroUnidades").append("='")
                .append(getNumeroUnidades()).append("' ");
        buffer.append("]");

        return buffer.toString();
    }

}