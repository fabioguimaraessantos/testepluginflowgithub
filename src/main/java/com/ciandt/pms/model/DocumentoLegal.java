/*
 * @(#) DocumentoLegal.java
 * Copyright (c) 2008 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.print.DocFlavor.STRING;

import org.apache.commons.lang.WordUtils;
import org.hibernate.annotations.Cascade;
import org.hibernate.envers.Audited;
import org.hibernate.envers.RelationTargetAuditMode;

import com.ciandt.pms.Constants;
import com.ciandt.pms.enums.StatusDocumentoLegal;

/**
 * Entity gerado a partir da tabela DOCUMENTO_LEGAL.
 * 
 * @author Generated by Hibernate Tools 3.6.0
 * @since 06/12/2013 16:56:59
 * @version 09/01/19 1.1 10:08:00
 */
@Entity
@Table(name = "DOCUMENTO_LEGAL")
@NamedQueries({
		@NamedQuery(name = "DocumentoLegal.findAll", query = "SELECT t FROM DocumentoLegal t"),
		@NamedQuery(name = "DocumentoLegal.findByMsa", query = "SELECT t FROM DocumentoLegal t "
				+ "WHERE t.msa.codigoMsa = ? ORDER BY t.codigoCodigoGerado"),
		@NamedQuery(name = "DocumentoLegal.findMaxSequencieByMsa", query = "SELECT MAX(t.codigoSequencial) FROM DocumentoLegal t "
				+ "WHERE t.msa.codigoMsa = ?"),
		@NamedQuery(name = "DocumentoLegal.findByFichaReajuste", query = "SELECT t FROM DocumentoLegal t "
				+ "WHERE t.fichaReajuste.codigoFichaReajuste = ?"),
		@NamedQuery(name = "DocumentoLegal.findAllActive", query = "SELECT d FROM DocumentoLegal d "
				+ "WHERE d.indicadorStatus = :indicadorStatus AND d.fichaReajuste IS NOT NULL"),
		@NamedQuery(name = "DocumentoLegal.findToSendEmail", query = "SELECT t FROM DocumentoLegal t "
				+ "WHERE t.indicadorStatus = 'A' "
				+ "AND t.msa.indicadorStatus <> 'I' "
				+ "AND (t.dataFimVigencia IS NOT NULL AND t.dataFimVigencia <= :dataInicioLembrete) "
				+ "AND (t.dataEnvioEmail IS NULL OR t.dataEnvioEmail <= :dataUltimoEnvioEmail) ")

})
public class DocumentoLegal implements java.io.Serializable, Cloneable {

	/**
	 * Valor do serialVersionUID.
	 */
	private static final long serialVersionUID = 1L;

	/**
	 * Constante para NamedQuery "DocumentoLegal.findAll".
	 */
	public static final String FIND_ALL = "DocumentoLegal.findAll";

	/**
	 * Constante para NamedQuery "DocumentoLegal.findByMsa".
	 */
	public static final String FIND_BY_MSA = "DocumentoLegal.findByMsa";

	/**
	 * Constante para NamedQuery "DocumentoLegal.findMaxSequencieByMsa".
	 */
	public static final String FIND_MAX_SEQUENCIE_BY_MSA = "DocumentoLegal.findMaxSequencieByMsa";

	/**
	 * Constante para NamedQuery "DocumentoLegal.findAllActive".
	 */
	public static final String FIND_ALL_ACTIVE = "DocumentoLegal.findAllActive";

	/**
	 * Constante para NamedQuery "DocumentoLegal.findByFichaReajuste".
	 */
	public static final String FIND_BY_FICHA_REAJUSTE = "DocumentoLegal.findByFichaReajuste";

	/**
	 * Constante para NamedQuery "DocumentoLegal.findToSendEmail".
	 */
	public static final String FIND_TO_SEND_EMAIL = "DocumentoLegal.findToSendEmail";

	/**
	 * Atributo gerado a partir da coluna DOLE_CD_DOCUMENTO_LEGAL.
	 */
	@Id
	@GeneratedValue(generator = "DocumentoLegalSeq")
	@SequenceGenerator(name = "DocumentoLegalSeq", sequenceName = "SQ_DOLE_CD_DOCUMENTO_LEGAL", allocationSize = 1)
	@Column(name = "DOLE_CD_DOCUMENTO_LEGAL", unique = true, nullable = false, precision = 18, scale = 0)
	private Long codigoDocumentoLegal;

	/**
	 * Atributo gerado a partir da coluna MSAA_CD_MSA.
	 */
	@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MSAA_CD_MSA", nullable = false)
	private Msa msa;

	/**
	 * Atributo gerado a partir da coluna FIRE_CD_FICHA_REAJUSTE.
	 */
	@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "FIRE_CD_FICHA_REAJUSTE")
	private FichaReajuste fichaReajuste;

	/**
	 * Atributo gerado a partir da coluna DOLT_CD_TIPO_DOCUMENTO_LEGAL.
	 */
	@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "DOLT_CD_TIPO_DOCUMENTO_LEGAL", nullable = false)
	private DocumentoLegalTipo documentoLegalTipo;

	/**
	 * Atributo gerado a partir da coluna DOLE_NM_DOCUMENTO_LEGAL.
	 */
	@Audited
	@Column(name = "DOLE_NM_DOCUMENTO_LEGAL", length = 100)
	private String nomeDocumentoLegal;

	/**
	 * Atributo gerado a partir da coluna DOLE_DT_INICIO_VIGENCIA.
	 */
	@Audited
	@Temporal(TemporalType.DATE)
	@Column(name = "DOLE_DT_INICIO_VIGENCIA", length = 7)
	private Date dataInicioVigencia;

	/**
	 * Atributo gerado a partir da coluna DOLE_DT_FIM_VIGENCIA.
	 */
	@Audited
	@Temporal(TemporalType.DATE)
	@Column(name = "DOLE_DT_FIM_VIGENCIA", length = 7)
	private Date dataFimVigencia;

	/**
	 * Atributo gerado a partir da coluna DOLE_CD_CODIGO_GERADO.
	 */
	@Audited
	@Column(name = "DOLE_CD_CODIGO_GERADO", nullable = false, length = 250)
	private String codigoCodigoGerado;

	/**
	 * Atributo gerado a partir da coluna DOLE_IN_STATUS. <li>A = Active</li>
	 * <li>I = Inactive</li>
	 * <li>C = Closed</li>
	 */
	@Audited
	@Column(name = "DOLE_IN_STATUS", nullable = false, length = 1)
	private String indicadorStatus;

	/**
	 * Atributo gerado a partir da coluna DOLE_SG_RENOVACAO_AUTOMATICA. <li>S =
	 * Renovado automaticamente</li> <li>N = Não renovado automaticamente</li>
	 */
	@Audited
	@Column(name = "DOLE_SG_RENOVACAO_AUTOMATICA", nullable = false, length = 1)
	private String siglaRenovacaoAutomatica;
	
	/**
	 * Atributo gerado a partir da coluna DOLE_SG_RENOVACAO_AUTOMATICA.
	 * 
	 * <li>S = Prevê reajuste, necessário ter ficha de reajuste vinculado.</li>
	 * <li>N = Não prevê reajuste, não tem ficha de reajuste vinculado.<li>
	 */
	@Audited
	@Column(name = "DOLE_SG_PREVE_REAJUSTE", nullable = false, length = 1)
	private String siglaPreveReajuste;

	/**
	 * Atributo gerado a partir da coluna DOLE_CD_SEQUENCIAL.
	 */
	@Audited
	@Column(name = "DOLE_CD_SEQUENCIAL", nullable = false)
	private Integer codigoSequencial;

	/**
	 * Atributo gerado a partir da coluna DOLE_DT_ENVIO_EMAIL.
	 */
	@Audited
	@Temporal(TemporalType.DATE)
	@Column(name = "DOLE_DT_ENVIO_EMAIL", length = 7)
	private Date dataEnvioEmail;
	
	/**
	 * Atributo gerado a partir da coluna DOLE_TX_OBSERVACAO.
	 */
	@Audited
	@Column(name = "DOLE_TX_OBSERVACAO", length = 1000)
	private String textoObservacao;

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "documentoLegal", cascade = CascadeType.ALL)
	private Set<DocumentoLegalAnexoArquivo> documentoLegalAnexoArquivos = new HashSet<DocumentoLegalAnexoArquivo>(
			0);

	/**
	 * 
	 */
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "documentoLegal")
	@Cascade(org.hibernate.annotations.CascadeType.ALL)
	private List<DocumentoLegalResponsavel> documentoLegalResponsaveis = new ArrayList<DocumentoLegalResponsavel>();

	/**
	 * Construtor default.
	 */
	public DocumentoLegal() {
	}

	/**
	 * Construtor com preenchimento da entidade.
	 * 
	 * @param codigoDocumentoLegal
	 *            Valor do atributo codigoDocumentoLegal;
	 * @param msa
	 *            Valor do atributo msa;
	 * @param documentoLegalTipo
	 *            Valor do atributo documentoLegalTipo;
	 * @param codigoCodigoGerado
	 *            Valor do atributo codigoCodigoGerado;
	 * @param indicadorStatus
	 *            Valor do atributo indicadorStatus;
	 * @param siglaRenovacaoAutomatica
	 *            Valor do atributo siglaRenovacaoAutomatica;
	 * @param codigoSequencial
	 *            Valor do atributo codigoSequencial;
	 */
	public DocumentoLegal(Long codigoDocumentoLegal, Msa msa,
			DocumentoLegalTipo documentoLegalTipo, String codigoCodigoGerado,
			String indicadorStatus, String siglaRenovacaoAutomatica,
			Integer codigoSequencial) {
		this.codigoDocumentoLegal = codigoDocumentoLegal;
		this.msa = msa;
		this.documentoLegalTipo = documentoLegalTipo;
		this.codigoCodigoGerado = codigoCodigoGerado;
		this.indicadorStatus = indicadorStatus;
		this.siglaRenovacaoAutomatica = siglaRenovacaoAutomatica;
		this.codigoSequencial = codigoSequencial;
	}

	/**
	 * Construtor com preenchimento da entidade.
	 * 
	 * @param codigoDocumentoLegal
	 *            Valor do atributo codigoDocumentoLegal;
	 * @param msa
	 *            Valor do atributo msa;
	 * @param documentoLegalTipo
	 *            Valor do atributo documentoLegalTipo;
	 * @param codigoCodigoGerado
	 *            Valor do atributo codigoCodigoGerado;
	 * @param indicadorStatus
	 *            Valor do atributo indicadorStatus;
	 * @param siglaRenovacaoAutomatica
	 *            Valor do atributo siglaRenovacaoAutomatica;
	 * @param codigoSequencial
	 *            Valor do atributo codigoSequencial;
	 */
	public DocumentoLegal(Long codigoDocumentoLegal, Msa msa,
			FichaReajuste fichaReajuste, DocumentoLegalTipo documentoLegalTipo,
			String nomeDocumentoLegal, Date dataInicioVigencia,
			Date dataFimVigencia, String codigoCodigoGerado,
			String indicadorStatus, String siglaRenovacaoAutomatica,
			Integer codigoSequencial,
			Set<DocumentoLegalAnexoArquivo> documentoLegalAnexoArquivos) {
		this.codigoDocumentoLegal = codigoDocumentoLegal;
		this.msa = msa;
		this.fichaReajuste = fichaReajuste;
		this.documentoLegalTipo = documentoLegalTipo;
		this.nomeDocumentoLegal = nomeDocumentoLegal;
		this.dataInicioVigencia = dataInicioVigencia;
		this.dataFimVigencia = dataFimVigencia;
		this.codigoCodigoGerado = codigoCodigoGerado;
		this.indicadorStatus = indicadorStatus;
		this.siglaRenovacaoAutomatica = siglaRenovacaoAutomatica;
		this.codigoSequencial = codigoSequencial;
		this.documentoLegalAnexoArquivos = documentoLegalAnexoArquivos;
	}

	/**
	 * Obtem o valor do atributo codigoDocumentoLegal.<BR>
	 * Atributo gerado a partir da coluna DOLE_CD_DOCUMENTO_LEGAL.
	 * 
	 * @return Valor do atributo codigoDocumentoLegal.
	 */
	public Long getCodigoDocumentoLegal() {
		return this.codigoDocumentoLegal;
	}

	/**
	 * Atualiza o valor do atributo codigoDocumentoLegal.<BR>
	 * Atributo gerado a partir da coluna DOLE_CD_DOCUMENTO_LEGAL.
	 * 
	 * @param codigoDocumentoLegal
	 *            Novo valor para o atributo codigoDocumentoLegal.
	 */
	public void setCodigoDocumentoLegal(Long codigoDocumentoLegal) {
		this.codigoDocumentoLegal = codigoDocumentoLegal;
	}

	/**
	 * Obtem o valor do atributo msa.<BR>
	 * Atributo gerado a partir da coluna MSAA_CD_MSA.
	 * 
	 * @return Valor do atributo msa.
	 */
	public Msa getMsa() {
		return this.msa;
	}

	/**
	 * Atualiza o valor do atributo msa.<BR>
	 * Atributo gerado a partir da coluna MSAA_CD_MSA.
	 * 
	 * @param msa
	 *            Novo valor para o atributo msa.
	 */
	public void setMsa(Msa msa) {
		this.msa = msa;
	}

	/**
	 * Obtem o valor do atributo fichaReajuste.<BR>
	 * Atributo gerado a partir da coluna FIRE_CD_FICHA_REAJUSTE.
	 * 
	 * @return Valor do atributo fichaReajuste.
	 */
	public FichaReajuste getFichaReajuste() {
		return this.fichaReajuste;
	}

	/**
	 * Atualiza o valor do atributo fichaReajuste.<BR>
	 * Atributo gerado a partir da coluna FIRE_CD_FICHA_REAJUSTE.
	 * 
	 * @param fichaReajuste
	 *            Novo valor para o atributo fichaReajuste.
	 */
	public void setFichaReajuste(FichaReajuste fichaReajuste) {
		this.fichaReajuste = fichaReajuste;
	}

	/**
	 * Obtem o valor do atributo documentoLegalTipo.<BR>
	 * Atributo gerado a partir da coluna DOLT_CD_TIPO_DOCUMENTO_LEGAL.
	 * 
	 * @return Valor do atributo documentoLegalTipo.
	 */
	public DocumentoLegalTipo getDocumentoLegalTipo() {
		return this.documentoLegalTipo;
	}

	/**
	 * Atualiza o valor do atributo documentoLegalTipo.<BR>
	 * Atributo gerado a partir da coluna DOLT_CD_TIPO_DOCUMENTO_LEGAL.
	 * 
	 * @param documentoLegalTipo
	 *            Novo valor para o atributo documentoLegalTipo.
	 */
	public void setDocumentoLegalTipo(DocumentoLegalTipo documentoLegalTipo) {
		this.documentoLegalTipo = documentoLegalTipo;
	}

	/**
	 * Obtem o valor do atributo nomeDocumentoLegal.<BR>
	 * Atributo gerado a partir da coluna DOLE_NM_DOCUMENTO_LEGAL.
	 * 
	 * @return Valor do atributo nomeDocumentoLegal.
	 */
	public String getNomeDocumentoLegal() {
		return this.nomeDocumentoLegal;
	}

	/**
	 * Atualiza o valor do atributo nomeDocumentoLegal.<BR>
	 * Atributo gerado a partir da coluna DOLE_NM_DOCUMENTO_LEGAL.
	 * 
	 * @param nomeDocumentoLegal
	 *            Novo valor para o atributo nomeDocumentoLegal.
	 */
	public void setNomeDocumentoLegal(String nomeDocumentoLegal) {
		this.nomeDocumentoLegal = nomeDocumentoLegal;
	}

	/**
	 * Obtem o valor do atributo dataInicioVigencia.<BR>
	 * Atributo gerado a partir da coluna DOLE_DT_INICIO_VIGENCIA.
	 * 
	 * @return Valor do atributo dataInicioVigencia.
	 */
	public Date getDataInicioVigencia() {
		return this.dataInicioVigencia;
	}

	/**
	 * Atualiza o valor do atributo dataInicioVigencia.<BR>
	 * Atributo gerado a partir da coluna DOLE_DT_INICIO_VIGENCIA.
	 * 
	 * @param dataInicioVigencia
	 *            Novo valor para o atributo dataInicioVigencia.
	 */
	public void setDataInicioVigencia(Date dataInicioVigencia) {
		this.dataInicioVigencia = dataInicioVigencia;
	}

	/**
	 * Obtem o valor do atributo dataFimVigencia.<BR>
	 * Atributo gerado a partir da coluna DOLE_DT_FIM_VIGENCIA.
	 * 
	 * @return Valor do atributo dataFimVigencia.
	 */
	public Date getDataFimVigencia() {
		return this.dataFimVigencia;
	}

	/**
	 * Atualiza o valor do atributo dataFimVigencia.<BR>
	 * Atributo gerado a partir da coluna DOLE_DT_FIM_VIGENCIA.
	 * 
	 * @param dataFimVigencia
	 *            Novo valor para o atributo dataFimVigencia.
	 */
	public void setDataFimVigencia(Date dataFimVigencia) {
		this.dataFimVigencia = dataFimVigencia;
	}

	/**
	 * Obtem o valor do atributo codigoCodigoGerado.<BR>
	 * Atributo gerado a partir da coluna DOLE_CD_CODIGO_GERADO.
	 * 
	 * @return Valor do atributo codigoCodigoGerado.
	 */
	public String getCodigoCodigoGerado() {
		return this.codigoCodigoGerado;
	}

	/**
	 * Atualiza o valor do atributo codigoCodigoGerado.<BR>
	 * Atributo gerado a partir da coluna DOLE_CD_CODIGO_GERADO.
	 * 
	 * @param codigoCodigoGerado
	 *            Novo valor para o atributo codigoCodigoGerado.
	 */
	public void setCodigoCodigoGerado(String codigoCodigoGerado) {
		this.codigoCodigoGerado = codigoCodigoGerado;
	}

	/**
	 * Obtem o valor do atributo indicadorStatus.<BR>
	 * Atributo gerado a partir da coluna DOLE_IN_STATUS. A = Active C = Closed
	 * 
	 * @return Valor do atributo indicadorStatus.
	 */
	public String getIndicadorStatus() {
		return this.indicadorStatus;
	}

	/**
	 * Atualiza o valor do atributo indicadorStatus.<BR>
	 * Atributo gerado a partir da coluna DOLE_IN_STATUS. A = Active C = Closed
	 * 
	 * @param indicadorStatus
	 *            Novo valor para o atributo indicadorStatus.
	 */
	public void setIndicadorStatus(String indicadorStatus) {
		this.indicadorStatus = indicadorStatus;
	}

	/**
	 * Obtem o valor do atributo siglaRenovacaoAutomatica.<BR>
	 * Atributo gerado a partir da coluna DOLE_SG_RENOVACAO_AUTOMATICA.
	 * 
	 * @return Valor do atributo siglaRenovacaoAutomatica.
	 */
	public String getSiglaRenovacaoAutomatica() {
		return this.siglaRenovacaoAutomatica;
	}

	/**
	 * Atualiza o valor do atributo siglaRenovacaoAutomatica.<BR>
	 * Atributo gerado a partir da coluna DOLE_SG_RENOVACAO_AUTOMATICA.
	 * 
	 * @param siglaRenovacaoAutomatica
	 *            Novo valor para o atributo siglaRenovacaoAutomatica.
	 */
	public void setSiglaRenovacaoAutomatica(String siglaRenovacaoAutomatica) {
		this.siglaRenovacaoAutomatica = siglaRenovacaoAutomatica;
	}

	/**
	 * Obtem o valor do atributo codigoSequencial.<BR>
	 * Atributo gerado a partir da coluna DOLE_CD_SEQUENCIAL.
	 * 
	 * @return Valor do atributo codigoSequencial.
	 */
	public Integer getCodigoSequencial() {
		return this.codigoSequencial;
	}

	/**
	 * Atualiza o valor do atributo codigoSequencial.<BR>
	 * Atributo gerado a partir da coluna DOLE_CD_SEQUENCIAL.
	 * 
	 * @param codigoSequencial
	 *            Novo valor para o atributo codigoSequencial.
	 */
	public void setCodigoSequencial(Integer codigoSequencial) {
		this.codigoSequencial = codigoSequencial;
	}

	/**
	 * Obtem o valor do atributo dataEnvioEmail.<BR>
	 * Atributo gerado a partir da coluna DOLE_DT_ENVIO_EMAIL.
	 * 
	 * @return Valor do atributo dataEnvioEmail.
	 */
	public Date getDataEnvioEmail() {
		return this.dataEnvioEmail;
	}

	/**
	 * Atualiza o valor do atributo dataEnvioEmail.<BR>
	 * Atributo gerado a partir da coluna DOLE_DT_ENVIO_EMAIL.
	 * 
	 * @param dataEnvioEmail
	 *            Novo valor para o atributo dataEnvioEmail.
	 */
	public void setDataEnvioEmail(Date dataEnvioEmail) {
		this.dataEnvioEmail = dataEnvioEmail;
	}

	/**
	 * Obtem o valor do atributo documentoLegalAnexoArquivos.<BR>
	 * 
	 * @return Valor do atributo documentoLegalAnexoArquivos.
	 */
	public Set<DocumentoLegalAnexoArquivo> getDocumentoLegalAnexoArquivos() {
		return this.documentoLegalAnexoArquivos;
	}

	/**
	 * Atualiza o valor do atributo documentoLegalAnexoArquivos.<BR>
	 * 
	 * @param documentoLegalAnexoArquivos
	 *            Novo valor para o atributo documentoLegalAnexoArquivos.
	 */
	public void setDocumentoLegalAnexoArquivos(
			Set<DocumentoLegalAnexoArquivo> documentoLegalAnexoArquivos) {
		this.documentoLegalAnexoArquivos = documentoLegalAnexoArquivos;
	}
	
	/**
	 * @return the textoObservacao
	 */
	public String getTextoObservacao() {
		return textoObservacao;
	}

	/**
	 * @param textoObservacao the textoObservacao to set
	 */
	public void setTextoObservacao(String textoObservacao) {
		this.textoObservacao = textoObservacao;
	}
	
	/**
	 * Obtem o valor do atributo siglaPreveReajuste.<BR>
	 * Atributo gerado a partir da coluna DOLE_SG_RENOVACAO_AUTOMATICA.
	 * 
	 * @return Valor do atributo siglaPreveReajuste.
	 */
	public String getSiglaPreveReajuste() {
		return this.siglaPreveReajuste;
	}

	/**
	 * Atualiza o valor do atributo siglaPreveReajuste.<BR>
	 * Atributo gerado a partir da coluna DOLE_SG_RENOVACAO_AUTOMATICA.
	 * 
	 * @param siglaPreveReajuste
	 *            Novo valor para o atributo siglaPreveReajuste.
	 */
	public void setSiglaPreveReajuste(String siglaPreveReajuste) {
		this.siglaPreveReajuste = siglaPreveReajuste;
	}
	
	/**
	 * Indica se o {@link DocumentoLegal} prevê reajuste.
	 *
	 * @return {@link Boolean}
	 */
	public boolean isPrevistoReajuste() {
		if (Constants.SIM.equals(this.getSiglaPreveReajuste())) {
			return true;
		} else {
			return false;
		}
	}

	/**
	 * Indica se o {@link DocumentoLegal} tem sua renovação automatica.
	 *
	 * @return {@link Boolean}
	 */
	public Boolean isRenovacaoAutomatica() {
		if (Constants.SIM.equals(this.getSiglaRenovacaoAutomatica())) {
			return true;
		} else {
			return false;
		}
	}

	/**
	 * Determina se {@code date} está dentro da vigência do {@link DocumentoLegal}.
	 *
	 * @param date
	 *
	 * @return {@link Boolean}
	 */
	public Boolean dateIsBetweenVigenciaDocumentoLegal(Date date) {
		if (this.isRenovacaoAutomatica()) {

			return this.getDataInicioVigencia().before(date) || this.getDataInicioVigencia().equals(date);
		} else {

			return (this.getDataInicioVigencia().before(date) || this
					.getDataInicioVigencia().equals(date))
					&& (this.getDataFimVigencia().after(date) || this
							.getDataFimVigencia().equals(date));
		}
	}
	
	/**
	 * Determina se {@code date} + {@code adition} está dentro da vigência do
	 * {@link DocumentoLegal}.
	 * 
	 * @param date
	 * @param adition
	 *            - Numero de dias a serem adicionados ao final da vigencia de
	 *            um {@link DocumentoLegal} para que a criação de
	 *            {@link ControleReajuste} seja mais abrangente.
	 *
	 * @return {@link Boolean}
	 */
	public Boolean dateIsBetweenVigenciaDocumentoLegalPlusAdition(Date date, Integer adition) {

		// Se vigência = vigência infinita. 
		if (this.getDataFimVigencia() == null) {

			return true;
		}

		Calendar calendar = Calendar.getInstance();
		calendar.setTime(this.getDataFimVigencia());
		calendar.add(Calendar.DATE, adition);
		Date fimVigenciaDocumentoLegal = calendar.getTime();

		if (this.isRenovacaoAutomatica()) {
			
			return this.getDataInicioVigencia().before(date) || this.getDataInicioVigencia().equals(date);
		} else {
			
			return (this.getDataInicioVigencia().before(date) || this
					.getDataInicioVigencia().equals(date))
					&& (fimVigenciaDocumentoLegal.after(date) || fimVigenciaDocumentoLegal
							.equals(date));
		}
	}
	
	public boolean isInactiveStatus() {
		if (StatusDocumentoLegal.INACTIVE.getAbbreviation().equals(this.getIndicadorStatus())) {
			return true;
		}
		return false;
	}

	/**
	 * @return the documentoLegalResponsaveis
	 */
	public List<DocumentoLegalResponsavel> getDocumentoLegalResponsaveis() {
		return documentoLegalResponsaveis;
	}

	/**
	 * Retorna o primeiro nome dos responsáveis do Documento Legal corrente.
	 *
	 * @return Lista de String
	 */
	public List<String> getNomeDocumentoLegalResponsaveis() {
		if (this.documentoLegalResponsaveis != null) {
			List<String> dLResponsaveis = new ArrayList<String>();
			StringBuffer nome;

			for (DocumentoLegalResponsavel dlResponsavel : this.documentoLegalResponsaveis) {
				nome = new StringBuffer();

				nome.append("<br />");
				nome.append(WordUtils.capitalize(dlResponsavel.getPessoa().getPrimeiroNomePessoa().toLowerCase()));
				nome.append(" (");
				nome.append(dlResponsavel.getPessoa().getCodigoLogin());
				nome.append(")");

				dLResponsaveis.add(nome.toString());
			}

			return dLResponsaveis;
		}

		return null;
	}

	public String getDocumentoLegalResponsaveisCommaSeparated() {
		if (this.documentoLegalResponsaveis != null) {
			StringBuffer dLResponsaveis = new StringBuffer();

			for (DocumentoLegalResponsavel dlResponsavel : this.documentoLegalResponsaveis) {
				dLResponsaveis.append(dlResponsavel.getPessoa().getCodigoLogin());
				dLResponsaveis.append(", ");
			}

			return dLResponsaveis.toString();
		}

		return null;
	}

	/**
	 * @param documentoLegalResponsaveis the documentoLegalResponsaveis to set
	 */
	public void setDocumentoLegalResponsaveis(
			List<DocumentoLegalResponsavel> documentoLegalResponsaveis) {
		this.documentoLegalResponsaveis = documentoLegalResponsaveis;
	}

	/**
	 * @see Object#toString()
	 */
	@Override
	public String toString() {
		StringBuffer buffer = new StringBuffer();

		buffer.append(getClass().getName()).append("@")
				.append(Integer.toHexString(hashCode())).append(" [");
		buffer.append("codigoDocumentoLegal").append("='")
				.append(getCodigoDocumentoLegal()).append("' ");
		buffer.append("msa").append("='").append(getMsa()).append("' ");
		buffer.append("fichaReajuste").append("='").append(getFichaReajuste())
				.append("' ");
		buffer.append("documentoLegalTipo").append("='")
				.append(getDocumentoLegalTipo()).append("' ");
		buffer.append("nomeDocumentoLegal").append("='")
				.append(getNomeDocumentoLegal()).append("' ");
		buffer.append("dataInicioVigencia").append("='")
				.append(getDataInicioVigencia()).append("' ");
		buffer.append("dataFimVigencia").append("='")
				.append(getDataFimVigencia()).append("' ");
		buffer.append("codigoCodigoGerado").append("='")
				.append(getCodigoCodigoGerado()).append("' ");
		buffer.append("indicadorStatus").append("='")
				.append(getIndicadorStatus()).append("' ");
		buffer.append("siglaRenovacaoAutomatica").append("='")
				.append(getSiglaRenovacaoAutomatica()).append("' ");
		buffer.append("codigoSequencial").append("='")
				.append(getCodigoSequencial()).append("' ");
		buffer.append("dataEnvioEmail").append("='")
				.append(getDataEnvioEmail()).append("' ");
		buffer.append("textoObservacao").append("='")
				.append(getTextoObservacao()).append("' ");
		buffer.append("]");

		return buffer.toString();
	}

	/**
	 * Ordenação de uma lista de {@link DocumentoLegal} para ser exibido na tela.
	 *
	 * @param unorderedDocumentosLegais
	 * @return Lista de {@link DocumentoLegal}.
	 */
	public static List<DocumentoLegal> orderList(final List<DocumentoLegal> unorderedDocumentosLegais) {

		CharSequence documentoLegalMaster = "MA";
		List<DocumentoLegal> masterDocumentosLegais = new ArrayList<DocumentoLegal>();
		List<DocumentoLegal> otherDocumentosLegais = new ArrayList<DocumentoLegal>();
		for (DocumentoLegal documentoLegal : unorderedDocumentosLegais) {
			if (documentoLegal.getCodigoCodigoGerado().contains(documentoLegalMaster)) {
				masterDocumentosLegais.add(documentoLegal);
			} else {
				
				otherDocumentosLegais.add(documentoLegal);
			}
		}

		CharSequence generatedCodeDocumentoLegal = "";
		List<DocumentoLegal> orderedDocumentosLegais = new ArrayList<DocumentoLegal>();
		List<DocumentoLegal> documentosLegaisToRemove = new ArrayList<DocumentoLegal>();
		for (DocumentoLegal masterDocumentoLegal : masterDocumentosLegais) {
			generatedCodeDocumentoLegal = masterDocumentoLegal.getCodigoCodigoGerado();
			orderedDocumentosLegais.add(masterDocumentoLegal);

			for (DocumentoLegal otherDocumentoLegal : otherDocumentosLegais) {
				if (otherDocumentoLegal.getNomeDocumentoLegal().contains(generatedCodeDocumentoLegal)) {
					orderedDocumentosLegais.add(otherDocumentoLegal);
					documentosLegaisToRemove.add(otherDocumentoLegal);
				}
			}
		}

		otherDocumentosLegais.removeAll(documentosLegaisToRemove);
		otherDocumentosLegais.removeAll(masterDocumentosLegais);
		orderedDocumentosLegais.addAll(otherDocumentosLegais);

		List<DocumentoLegal> otherDocumentosLegais2 = new ArrayList<DocumentoLegal>();
		List<DocumentoLegal> documentosLegaisToRemove2 = new ArrayList<DocumentoLegal>();
		List<DocumentoLegal> documentosLegaisPoNoFather = new ArrayList<DocumentoLegal>();
		for (DocumentoLegal documentoLegal : orderedDocumentosLegais) {
			if (documentoLegal.getCodigoCodigoGerado().contains("AD")) {
				otherDocumentosLegais2.add(documentoLegal);

				for (DocumentoLegal documentoLegalPo : orderedDocumentosLegais) {
					if (documentoLegalPo.getNomeDocumentoLegal().contains(documentoLegal.getCodigoCodigoGerado())) {

						otherDocumentosLegais2.add(documentoLegalPo);
						if (documentoLegal.getDocumentoLegalTipo().getSiglaTipoDocumentoLegal().equals("AD") && (documentoLegalPo.getDocumentoLegalTipo().getSiglaTipoDocumentoLegal().equals("AD") || documentoLegalPo.getDocumentoLegalTipo().getSiglaTipoDocumentoLegal().equals("AC"))) {
							
							documentosLegaisToRemove2.add(documentoLegalPo);
						}
					}
				}
			} else if (documentoLegal.getCodigoCodigoGerado().contains("PO") && !documentoLegal.getNomeDocumentoLegal().contains("AD")) {
				
				documentosLegaisPoNoFather.add(documentoLegal);
			} else if (!documentoLegal.getCodigoCodigoGerado().contains("PO")) {
				
				otherDocumentosLegais2.add(documentoLegal);
			}
		}

		for (DocumentoLegal dlToRemove : documentosLegaisToRemove2) {
			
			int i = otherDocumentosLegais2.lastIndexOf(dlToRemove);
			if (i >= 0) {
				
				otherDocumentosLegais2.remove(i);
			}
		}

		otherDocumentosLegais2.addAll(documentosLegaisPoNoFather);

		return otherDocumentosLegais2;
	}
}
