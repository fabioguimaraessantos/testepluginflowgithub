/*
 * @(#) AlocacaoOverhead.java
 * Copyright (c) 2008 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Entity gerado a partir da tabela ALOCACAO_OVERHEAD.
 *
 * @author Generated by Hibernate Tools 3.2.4.GA
 * @since 08/01/2010 11:39:27
 * @version 09/01/19 1.1 10:08:00
 */
@Entity
@Table(name = "ALOCACAO_OVERHEAD")
@NamedQueries({

    @NamedQuery(name = "AlocacaoOverhead.findAll", query = "SELECT t FROM AlocacaoOverhead t"),
    
    @NamedQuery(name = "AlocacaoOverhead.findByFilter", query = "SELECT alov FROM AlocacaoOverhead alov "
        + " LEFT JOIN FETCH alov.pessoa "
        + " LEFT JOIN FETCH alov.tipoOverhead "
        + " WHERE ( UPPER(alov.pessoa.codigoLogin) = TRIM(UPPER(?)) "
        + "    OR UPPER(alov.pessoa.nomePessoa) like '%'||TRIM(UPPER(?))||'%' ) "
        + " AND ((alov.tipoOverhead.codigoTipoOverhead = ?) OR (? = 0L)) "
        + " AND (TRUNC(alov.dataInicio) >= TRUNC(?)) "
        + " AND (TRUNC(alov.dataFim) <= TRUNC(?)) "
        + " AND (UPPER(alov.indicadorStatus) like '%'||TRIM(UPPER(?))||'%' OR (? is null)) "
        + " ORDER BY alov.pessoa.nomePessoa ASC ")

})
public class AlocacaoOverhead implements java.io.Serializable {
    
    // ========================================================================
    // BEGIN - Coloque aqui o codigo manual
    // ========================================================================
    
    /**
     * Constante para NamedQuery "AlocacaoOverhead.findByFilter".
     */
    public static final String FIND_BY_FILTER = "AlocacaoOverhead.findByFilter";
    
    /**
     * Lista de alocaoPeriodoOverhead.
     */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "alocacaoOverhead", cascade = CascadeType.ALL)
    private List<AlocacaoPeriodoOh> alocacaoPeriodoOhs = new ArrayList<AlocacaoPeriodoOh>(0);
    
    /**
     * Obtem o valor do atributo alocacaoPeriodoOhs.<BR>

     * @return Valor do atributo alocacaoPeriodoOhs.
     */
    public List<AlocacaoPeriodoOh> getAlocacaoPeriodoOhs() {
        return this.alocacaoPeriodoOhs;
    }

    /**
     * Atualiza o valor do atributo alocacaoPeriodoOhs.<BR>

     * @param alocacaoPeriodoOhs Novo valor para o atributo alocacaoPeriodoOhs.
     */
    public void setAlocacaoPeriodoOhs(
            final List<AlocacaoPeriodoOh> alocacaoPeriodoOhs) {
        this.alocacaoPeriodoOhs = alocacaoPeriodoOhs;
    }
    
    // ========================================================================
    // END
    // ========================================================================

    /**
     * Valor do serialVersionUID.
     */
    private static final long serialVersionUID = 1L;

    /** 
     * Constante para NamedQuery "AlocacaoOverhead.findAll".
     */
    public static final String FIND_ALL = "AlocacaoOverhead.findAll";

    /**
     * Atributo gerado a partir da coluna ALOV_CD_ALOCACAO_OVERHEAD.
     */
    @Id
    @GeneratedValue(generator = "AlocacaoOverheadSeq")
    @SequenceGenerator(name = "AlocacaoOverheadSeq", 
            sequenceName = "SQ_ALOV_CD_ALOCACAO_OVERHEAD", allocationSize = 1)
    @Column(name = "ALOV_CD_ALOCACAO_OVERHEAD", unique = true, nullable = false, precision = 18, scale = 0)
    private Long codigoAlocacaoOverhead;

    /**
     * Atributo gerado a partir da coluna TIOV_CD_TIPO_OVERHEAD.
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "TIOV_CD_TIPO_OVERHEAD", nullable = false)
    private TipoOverhead tipoOverhead;

    /**
     * Atributo gerado a partir da coluna PESS_CD_PESSOA.
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "PESS_CD_PESSOA", nullable = false)
    private Pessoa pessoa;

    /**
     * Atributo gerado a partir da coluna ALOV_DT_INICIO.
     */
    @Temporal(TemporalType.DATE)
    @Column(name = "ALOV_DT_INICIO", length = 7)
    private Date dataInicio;

    /**
     * Atributo gerado a partir da coluna ALOV_DT_FIM.
     */
    @Temporal(TemporalType.DATE)
    @Column(name = "ALOV_DT_FIM", length = 7)
    private Date dataFim;

    /**
     * Atributo gerado a partir da coluna ALOV_IN_STATUS.
     */

    @Column(name = "ALOV_IN_STATUS", length = 240)
    private String indicadorStatus;

    /**
     * Construtor default.
     */
    public AlocacaoOverhead() {
    }

    /**
     * Construtor com preenchimento da entidade.
     * @param codigoAlocacaoOverhead Valor do atributo codigoAlocacaoOverhead;
     * @param tipoOverhead Valor do atributo tipoOverhead;
     * @param pessoa Valor do atributo pessoa;
     */
    public AlocacaoOverhead(final Long codigoAlocacaoOverhead,
            final TipoOverhead tipoOverhead, final Pessoa pessoa) {
        this.codigoAlocacaoOverhead = codigoAlocacaoOverhead;
        this.tipoOverhead = tipoOverhead;
        this.pessoa = pessoa;
    }

    /**
     * Construtor com preenchimento da entidade.
     * @param codigoAlocacaoOverhead Valor do atributo codigoAlocacaoOverhead;
     * @param tipoOverhead Valor do atributo tipoOverhead;
     * @param pessoa Valor do atributo pessoa;
     * @param dataInicio Valor do atributo dataInicio;
     * @param dataFim Valor do atributo dataFim;
     * @param indicadorStatus Valor do atributo indicadorStatus;
     * @param alocacaoPeriodoOhs Valor do atributo alocacaoPeriodoOhs;
     */
    public AlocacaoOverhead(final Long codigoAlocacaoOverhead,
            final TipoOverhead tipoOverhead, final Pessoa pessoa, final Date dataInicio,
            final Date dataFim, final String indicadorStatus,
            final List<AlocacaoPeriodoOh> alocacaoPeriodoOhs) {
        this.codigoAlocacaoOverhead = codigoAlocacaoOverhead;
        this.tipoOverhead = tipoOverhead;
        this.pessoa = pessoa;
        this.dataInicio = dataInicio;
        this.dataFim = dataFim;
        this.indicadorStatus = indicadorStatus;
        this.alocacaoPeriodoOhs = alocacaoPeriodoOhs;
    }

    /**
     * Obtem o valor do atributo codigoAlocacaoOverhead.<BR>
     * Atributo gerado a partir da coluna ALOV_CD_ALOCACAO_OVERHEAD.
     * @return Valor do atributo codigoAlocacaoOverhead.
     */
    public Long getCodigoAlocacaoOverhead() {
        return this.codigoAlocacaoOverhead;
    }

    /**
     * Atualiza o valor do atributo codigoAlocacaoOverhead.<BR>
     * Atributo gerado a partir da coluna ALOV_CD_ALOCACAO_OVERHEAD.
     * @param codigoAlocacaoOverhead Novo valor para o atributo codigoAlocacaoOverhead.
     */
    public void setCodigoAlocacaoOverhead(final Long codigoAlocacaoOverhead) {
        this.codigoAlocacaoOverhead = codigoAlocacaoOverhead;
    }

    /**
     * Obtem o valor do atributo tipoOverhead.<BR>
     * Atributo gerado a partir da coluna TIOV_CD_TIPO_OVERHEAD.
     * @return Valor do atributo tipoOverhead.
     */
    public TipoOverhead getTipoOverhead() {
        return this.tipoOverhead;
    }

    /**
     * Atualiza o valor do atributo tipoOverhead.<BR>
     * Atributo gerado a partir da coluna TIOV_CD_TIPO_OVERHEAD.
     * @param tipoOverhead Novo valor para o atributo tipoOverhead.
     */
    public void setTipoOverhead(final TipoOverhead tipoOverhead) {
        this.tipoOverhead = tipoOverhead;
    }

    /**
     * Obtem o valor do atributo pessoa.<BR>
     * Atributo gerado a partir da coluna PESS_CD_PESSOA.
     * @return Valor do atributo pessoa.
     */
    public Pessoa getPessoa() {
        return this.pessoa;
    }

    /**
     * Atualiza o valor do atributo pessoa.<BR>
     * Atributo gerado a partir da coluna PESS_CD_PESSOA.
     * @param pessoa Novo valor para o atributo pessoa.
     */
    public void setPessoa(final Pessoa pessoa) {
        this.pessoa = pessoa;
    }

    /**
     * Obtem o valor do atributo dataInicio.<BR>
     * Atributo gerado a partir da coluna ALOV_DT_INICIO.
     * @return Valor do atributo dataInicio.
     */
    public Date getDataInicio() {
        return this.dataInicio;
    }

    /**
     * Atualiza o valor do atributo dataInicio.<BR>
     * Atributo gerado a partir da coluna ALOV_DT_INICIO.
     * @param dataInicio Novo valor para o atributo dataInicio.
     */
    public void setDataInicio(final Date dataInicio) {
        this.dataInicio = dataInicio;
    }

    /**
     * Obtem o valor do atributo dataFim.<BR>
     * Atributo gerado a partir da coluna ALOV_DT_FIM.
     * @return Valor do atributo dataFim.
     */
    public Date getDataFim() {
        return this.dataFim;
    }

    /**
     * Atualiza o valor do atributo dataFim.<BR>
     * Atributo gerado a partir da coluna ALOV_DT_FIM.
     * @param dataFim Novo valor para o atributo dataFim.
     */
    public void setDataFim(final Date dataFim) {
        this.dataFim = dataFim;
    }

    /**
     * Obtem o valor do atributo indicadorStatus.<BR>
     * Atributo gerado a partir da coluna ALOV_IN_STATUS.
     * @return Valor do atributo indicadorStatus.
     */
    public String getIndicadorStatus() {
        return this.indicadorStatus;
    }

    /**
     * Atualiza o valor do atributo indicadorStatus.<BR>
     * Atributo gerado a partir da coluna ALOV_IN_STATUS.
     * @param indicadorStatus Novo valor para o atributo indicadorStatus.
     */
    public void setIndicadorStatus(final String indicadorStatus) {
        this.indicadorStatus = indicadorStatus;
    }

    /**
     * @see Object#toString()
     * 
     * @return retorna a entidade no formato de string
     */
    @Override
    public String toString() {
        StringBuffer buffer = new StringBuffer();

        buffer.append(getClass().getName()).append("@").append(
                Integer.toHexString(hashCode())).append(" [");
        buffer.append("codigoAlocacaoOverhead").append("='").append(
                getCodigoAlocacaoOverhead()).append("' ");
        buffer.append("tipoOverhead").append("='").append(getTipoOverhead())
                .append("' ");
        buffer.append("pessoa").append("='").append(getPessoa()).append("' ");
        buffer.append("dataInicio").append("='").append(getDataInicio())
                .append("' ");
        buffer.append("dataFim").append("='").append(getDataFim()).append("' ");
        buffer.append("indicadorStatus").append("='").append(
                getIndicadorStatus()).append("' ");
        buffer.append("]");

        return buffer.toString();
    }

}