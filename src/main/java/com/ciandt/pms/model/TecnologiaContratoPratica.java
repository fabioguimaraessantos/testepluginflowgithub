/*
 * @(#) TecnologiaContratoPratic.java
 * Copyright (c) 2008 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.envers.Audited;

/**
 * Entity gerado a partir da tabela TECNOLOGIA_CONTRATO_PRATIC.
 * 
 * @author Generated by Hibernate Tools 3.4.0.CR1
 * @since 29/01/2014 16:08:00
 * @version 09/01/19 1.1 10:08:00
 */
@Entity
@Table(name = "TECNOLOGIA_CONTRATO_PRATIC")
@NamedQueries({
		@NamedQuery(name = TecnologiaContratoPratica.FIND_ALL, query = "SELECT t FROM TecnologiaContratoPratica t"),
		@NamedQuery(name = TecnologiaContratoPratica.FIND_ALL_BY_CLOB, query = "SELECT t FROM TecnologiaContratoPratica t "
				+ " WHERE contratoPratica = :codigoContratoPratica") })
public class TecnologiaContratoPratica implements java.io.Serializable {

	/**
	 * Valor do serialVersionUID.
	 */
	private static final long serialVersionUID = 1L;

	/**
	 * Constante para NamedQuery "TecnologiaContratoPratic.findAll".
	 */
	public static final String FIND_ALL = "TecnologiaContratoPratica.findAll";

	/**
	 * Constante para NamedQuery "TecnologiaContratoPratica.findAllByClob".
	 */
	public static final String FIND_ALL_BY_CLOB = "TecnologiaContratoPratica.findAllByClob";

	/**
	 * Atributo gerado a partir da coluna TECL_CD_CPTE.
	 */
	@Id
	@GeneratedValue(generator = "TecnologiaContratoPraticSeq")
	@SequenceGenerator(name = "TecnologiaContratoPraticSeq", sequenceName = "SQ_TECL_CD_CPTE", allocationSize = 1)
	@Column(name = "TECL_CD_CPTE", unique = true, nullable = false, precision = 18, scale = 0)
	private Long codeCpte;

	/**
	 * Atributo gerado a partir da coluna COPR_CD_CONTRATO_PRATICA.
	 */
	@Audited
	@Column(name = "COPR_CD_CONTRATO_PRATICA")
	private Long contratoPratica;

	/**
	 * Atributo gerado a partir da coluna TECN_CD_TECNOLOGIA.
	 */
	@Audited
	@Column(name = "TECN_CD_TECNOLOGIA")
	private Long tecnologia;

	/**
	 * Atributo gerado a partir da coluna TECL_IN_TECHTAG.
	 */
	@Audited
	@Column(name = "TECL_IN_TECHTAG", length = 1)
	private String indicatorTechtag;

	/**
	 * Atributo gerado a partir da coluna TECL_CD_AUTOR.
	 */
	@Audited
	@Column(name = "TECL_CD_AUTOR", length = 20)
	private String codeAutor;

	/**
	 * Construtor default.
	 */
	public TecnologiaContratoPratica() {
	}

	/**
	 * Construtor com preenchimento da entidade.
	 * 
	 * @param codeCpte
	 *            Valor do atributo codeCpte;
	 */
	public TecnologiaContratoPratica(Long codeCpte) {
		this.codeCpte = codeCpte;
	}

	/**
	 * Construtor com preenchimento da entidade.
	 * 
	 * @param codeCpte
	 *            Valor do atributo codeCpte;
	 */
	public TecnologiaContratoPratica(Long codeCpte, Long contratoPratica,
			Long tecnologia, String indicatorTechtag, String codeAutor) {
		this.codeCpte = codeCpte;
		this.contratoPratica = contratoPratica;
		this.tecnologia = tecnologia;
		this.indicatorTechtag = indicatorTechtag;
		this.codeAutor = codeAutor;
	}

	/**
	 * Obtem o valor do atributo codeCpte.<BR>
	 * Atributo gerado a partir da coluna TECL_CD_CPTE.
	 * 
	 * @return Valor do atributo codeCpte.
	 */
	public Long getCodeCpte() {
		return this.codeCpte;
	}

	/**
	 * Atualiza o valor do atributo codeCpte.<BR>
	 * Atributo gerado a partir da coluna TECL_CD_CPTE.
	 * 
	 * @param codeCpte
	 *            Novo valor para o atributo codeCpte.
	 */
	public void setCodeCpte(Long codeCpte) {
		this.codeCpte = codeCpte;
	}

	/**
	 * Obtem o valor do atributo contratoPratica.<BR>
	 * Atributo gerado a partir da coluna COPR_CD_CONTRATO_PRATICA.
	 * 
	 * @return Valor do atributo contratoPratica.
	 */
	public Long getContratoPratica() {
		return this.contratoPratica;
	}

	/**
	 * Atualiza o valor do atributo contratoPratica.<BR>
	 * Atributo gerado a partir da coluna COPR_CD_CONTRATO_PRATICA.
	 * 
	 * @param contratoPratica
	 *            Novo valor para o atributo contratoPratica.
	 */
	public void setContratoPratica(Long contratoPratica) {
		this.contratoPratica = contratoPratica;
	}

	/**
	 * Obtem o valor do atributo tecnologia.<BR>
	 * Atributo gerado a partir da coluna TECN_CD_TECNOLOGIA.
	 * 
	 * @return Valor do atributo tecnologia.
	 */
	public Long getTecnologia() {
		return this.tecnologia;
	}

	/**
	 * Atualiza o valor do atributo tecnologia.<BR>
	 * Atributo gerado a partir da coluna TECN_CD_TECNOLOGIA.
	 * 
	 * @param tecnologia
	 *            Novo valor para o atributo tecnologia.
	 */
	public void setTecnologia(Long tecnologia) {
		this.tecnologia = tecnologia;
	}

	/**
	 * Obtem o valor do atributo indicatorTechtag.<BR>
	 * Atributo gerado a partir da coluna TECL_IN_TECHTAG.
	 * 
	 * @return Valor do atributo indicatorTechtag.
	 */
	public String getIndicatorTechtag() {
		return this.indicatorTechtag;
	}

	/**
	 * Atualiza o valor do atributo indicatorTechtag.<BR>
	 * Atributo gerado a partir da coluna TECL_IN_TECHTAG.
	 * 
	 * @param indicatorTechtag
	 *            Novo valor para o atributo indicatorTechtag.
	 */
	public void setIndicatorTechtag(String indicatorTechtag) {
		this.indicatorTechtag = indicatorTechtag;
	}

	/**
	 * Obtem o valor do atributo codeAutor.<BR>
	 * Atributo gerado a partir da coluna TECL_CD_AUTOR.
	 * 
	 * @return Valor do atributo codeAutor.
	 */
	public String getCodeAutor() {
		return this.codeAutor;
	}

	/**
	 * Atualiza o valor do atributo codeAutor.<BR>
	 * Atributo gerado a partir da coluna TECL_CD_AUTOR.
	 * 
	 * @param codeAutor
	 *            Novo valor para o atributo codeAutor.
	 */
	public void setCodeAutor(String codeAutor) {
		this.codeAutor = codeAutor;
	}

	/**
	 * @see Object#toString()
	 */
	@Override
	public String toString() {
		StringBuffer buffer = new StringBuffer();

		buffer.append(getClass().getName()).append("@")
				.append(Integer.toHexString(hashCode())).append(" [");
		buffer.append("codeCpte").append("='").append(getCodeCpte())
				.append("' ");
		buffer.append("contratoPratica").append("='")
				.append(getContratoPratica()).append("' ");
		buffer.append("tecnologia").append("='").append(getTecnologia())
				.append("' ");
		buffer.append("indicatorTechtag").append("='")
				.append(getIndicatorTechtag()).append("' ");
		buffer.append("codeAutor").append("='").append(getCodeAutor())
				.append("' ");
		buffer.append("]");

		return buffer.toString();
	}

}