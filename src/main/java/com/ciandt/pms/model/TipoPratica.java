/*
 * @(#) TipoPratica.java
 * Copyright (c) 2008 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * Entity gerado a partir da tabela TIPO_PRATICA.
 *
 * @author Generated by Hibernate Tools 3.4.0.CR1
 * @since 09/12/2014 11:10:24
 * @version 09/01/19 1.1 10:08:00
 */
@Entity
@Table(name = "TIPO_PRATICA")
@NamedQueries({ @NamedQuery(name = "TipoPratica.findAll", query = "SELECT t FROM TipoPratica t order by t.nomeTipoPratica")})
public class TipoPratica implements java.io.Serializable {

	/**
	 * Valor do serialVersionUID.
	 */
	private static final long serialVersionUID = 1L;

	/** 
	 * Constante para NamedQuery "TipoPratica.findAll".
	 */
	public static final String FIND_ALL = "TipoPratica.findAll";

	/**
	 * Atributo gerado a partir da coluna TIPR_CD_TIPO_PRATICA.
	 */
	@Id
	@GeneratedValue(generator = "TipoPraticaSeq")
	@SequenceGenerator(name = "TipoPraticaSeq", sequenceName = "SQ_TIPR_CD_TIPO_PRATICA", allocationSize = 1)
	@Column(name = "TIPR_CD_TIPO_PRATICA", unique = true, nullable = false, precision = 18, scale = 0)
	private Long codigoTipoPratica;

	/**
	 * Atributo gerado a partir da coluna TIPR_NM_TIPO_PRATICA.
	 */

	@Column(name = "TIPR_NM_TIPO_PRATICA", length = 50)
	private String nomeTipoPratica;

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tipoPratica")
	private Set<Pratica> praticas = new HashSet<Pratica>(0);

	/**
	 * Construtor default.
	 */
	public TipoPratica() {
	}

	/**
	 * Construtor com preenchimento da entidade.
	 * @param codigoTipoPratica Valor do atributo codigoTipoPratica;
	 */
	public TipoPratica(Long codigoTipoPratica) {
		this.codigoTipoPratica = codigoTipoPratica;
	}

	/**
	 * Construtor com preenchimento da entidade.
	 * @param codigoTipoPratica Valor do atributo codigoTipoPratica;
	 */
	public TipoPratica(Long codigoTipoPratica, String nomeTipoPratica,
			Set praticas) {
		this.codigoTipoPratica = codigoTipoPratica;
		this.nomeTipoPratica = nomeTipoPratica;
		this.praticas = praticas;
	}

	/**
	 * Obtem o valor do atributo codigoTipoPratica.<BR>
	 * Atributo gerado a partir da coluna TIPR_CD_TIPO_PRATICA.
	 * @return Valor do atributo codigoTipoPratica.
	 */
	public Long getCodigoTipoPratica() {
		return this.codigoTipoPratica;
	}

	/**
	 * Atualiza o valor do atributo codigoTipoPratica.<BR>
	 * Atributo gerado a partir da coluna TIPR_CD_TIPO_PRATICA.
	 * @param codigoTipoPratica Novo valor para o atributo codigoTipoPratica.
	 */
	public void setCodigoTipoPratica(Long codigoTipoPratica) {
		this.codigoTipoPratica = codigoTipoPratica;
	}

	/**
	 * Obtem o valor do atributo nomeTipoPratica.<BR>
	 * Atributo gerado a partir da coluna TIPR_NM_TIPO_PRATICA.
	 * @return Valor do atributo nomeTipoPratica.
	 */
	public String getNomeTipoPratica() {
		return this.nomeTipoPratica;
	}

	/**
	 * Atualiza o valor do atributo nomeTipoPratica.<BR>
	 * Atributo gerado a partir da coluna TIPR_NM_TIPO_PRATICA.
	 * @param nomeTipoPratica Novo valor para o atributo nomeTipoPratica.
	 */
	public void setNomeTipoPratica(String nomeTipoPratica) {
		this.nomeTipoPratica = nomeTipoPratica;
	}

	/**
	 * Obtem o valor do atributo praticas.<BR>

	 * @return Valor do atributo praticas.
	 */
	public Set getPraticas() {
		return this.praticas;
	}

	/**
	 * Atualiza o valor do atributo praticas.<BR>

	 * @param praticas Novo valor para o atributo praticas.
	 */
	public void setPraticas(Set praticas) {
		this.praticas = praticas;
	}

	/**
	 * @see Object#toString()
	 */
	@Override
	public String toString() {
		StringBuffer buffer = new StringBuffer();

		buffer.append(getClass().getName()).append("@")
				.append(Integer.toHexString(hashCode())).append(" [");
		buffer.append("codigoTipoPratica").append("='")
				.append(getCodigoTipoPratica()).append("' ");
		buffer.append("nomeTipoPratica").append("='")
				.append(getNomeTipoPratica()).append("' ");
		buffer.append("]");

		return buffer.toString();
	}

}
