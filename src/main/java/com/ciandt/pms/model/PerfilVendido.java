/*
 * @(#) PerfilVendido.java
 * Copyright (c) 2008 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Entity gerado a partir da tabela PERFIL_VENDIDO.
 * 
 * @author Generated by Hibernate Tools 3.2.4.GA
 * @since 21/06/2012 12:09:04
 * @version 09/01/19 1.1 10:08:00
 */
@Entity
@Table(name = "PERFIL_VENDIDO", uniqueConstraints = @UniqueConstraint(columnNames = {
		"MSAA_CD_MSA", "PEVE_NM_PERFIL_VENDIDO" }))
@NamedQueries({
		@NamedQuery(name = "PerfilVendido.findAll", query = "SELECT t FROM PerfilVendido t "
				+ "WHERE (t.indicadorAtivo = 'A') "
				+ "ORDER BY t.nomePerfilVendido ASC "),

		@NamedQuery(name = "PerfilVendido.findByContratoPraticaAndActive", query = "SELECT pv FROM PerfilVendido pv "
				+ "LEFT JOIN FETCH pv.msa msa "
				+ "LEFT JOIN FETCH msa.contratoPraticas cp "
				+ "WHERE cp.codigoContratoPratica = ? "
				+ "AND (pv.indicadorAtivo = 'A') "
				+ "ORDER BY pv.nomePerfilVendido ASC "),

		@NamedQuery(name = "PerfilVendido.findByContratoPratica", query = "SELECT pv FROM PerfilVendido pv "
				+ "LEFT JOIN FETCH pv.msa msa "
				+ "LEFT JOIN FETCH msa.contratoPraticas cp "
				+ "WHERE cp.codigoContratoPratica = ? "
				+ "ORDER BY pv.nomePerfilVendido ASC "),
				
		@NamedQuery(name = "PerfilVendido.findByMsaAndName", query = "SELECT pv FROM PerfilVendido pv "
				+ "WHERE pv.msa.codigoMsa = ? "
				+ "AND TRIM(UPPER(pv.nomePerfilVendido)) like TRIM(UPPER(?)) "
				+ "AND pv.indicadorDeleteLogico = 'N' "),

		@NamedQuery(name = "PerfilVendido.findByMsa", query = "SELECT pv FROM PerfilVendido pv WHERE "
				+ "pv.msa.codigoMsa = ?"),

		@NamedQuery(name = "PerfilVendido.findByMsaAndActive", query = "SELECT pv from PerfilVendido pv "
				+ "WHERE pv.msa.codigoMsa = ? " + "AND pv.indicadorAtivo = 'A'"),

		@NamedQuery(name = "PerfilVendido.findByMsaAndMoedaAndActive", query = "SELECT pv from PerfilVendido pv "
				+ "WHERE pv.msa.codigoMsa = ? "
				+ "AND pv.moeda.codigoMoeda = ? "
				+ "AND pv.indicadorAtivo = 'A'"),

		@NamedQuery(name = "PerfilVendido.findByMsaWithCurrency", query = "SELECT pv FROM PerfilVendido pv "
				+ "LEFT JOIN FETCH pv.msa msa "
				+ "WHERE msa.codigoMsa = ? "
				+ "AND pv.indicadorDeleteLogico = 'N' "
				+ "AND pv.indicadorAtivo = 'A' "
				+ "AND pv.moeda.codigoMoeda IN "
				+ "(SELECT msm.moeda.codigoMoeda FROM MsaSaldoMoeda msm "
				+ "WHERE msm.moeda.codigoMoeda = pv.moeda.codigoMoeda "
				+ "AND msm.msa.codigoMsa = ? AND msm.indicadorAtivo = 'A') "),

		@NamedQuery(name = "PerfilVendido.findByMsaAndNotLogicalDelete", query = "SELECT pv FROM PerfilVendido pv "
				+ "WHERE pv.msa.codigoMsa = ? "
				+ "AND pv.indicadorDeleteLogico = 'N'") })
public class PerfilVendido implements java.io.Serializable, Cloneable {

	// ========================================================================
	// BEGIN - Coloque aqui o codigo manual
	// ========================================================================

	/** Constante para NamedQuery "PerfilVendido.findByContratoPratica". */
	public static final String FIND_BY_CONTRATO_PRATICA = "PerfilVendido.findByContratoPratica";

	/**
	 * Constante para NamedQuery "PerfilVendido.findByContratoPraticaAndActive".
	 */
	public static final String FIND_BY_CONTRATO_PRATICA_AND_ACTIVE = "PerfilVendido.findByContratoPraticaAndActive";

	/** Constante para NamedQuery "PerfilVendido.findByMsaAndName". */
	public static final String FIND_BY_MSA_AND_NAME = "PerfilVendido.findByMsaAndName";

	/** Constante para NamedQuery "PerfilVendido.findByCLobWithCurrency". */
	public static final String FIND_BY_CLOB_WITH_CURRENCY = "PerfilVendido.findByCLobWithCurrency";

	/** Constante para NamedQuery "PerfilVendido.findByMsa". */
	public static final String FIND_BY_MSA = "PerfilVendido.findByMsa";

	/** Constante para NamedQuery "PerfilVendido.findByMsaAndActive". */
	public static final String FIND_BY_MSA_AND_ACTIVE = "PerfilVendido.findByMsaAndActive";

	/** Constante para NamedQuery "PerfilVendido.findByMsaAndMoedaAndActive". */
	public static final String FIND_BY_MSA_AND_MOEDA_AND_ACTIVE = "PerfilVendido.findByMsaAndMoedaAndActive";

	/** Constante para NamedQuery "PerfilVendido.findByMsaWithCurrency". */
	public static final String FIND_BY_MSA_WITH_CURRENCY = "PerfilVendido.findByMsaWithCurrency";

	/** Constante para NamedQuery "PerfilVendido.findByMsaAndNotLogicalDelete". */
	public static final String FIND_BY_MSA_AND_NOT_LOGICAL_DELETE = "PerfilVendido.findByMsaAndNotLogicalDelete";

	/**
	 * Realiza uma copia do objeto, porem com uma referencia diferente.
	 * 
	 * @return a cópia do Objeto
	 */
	public PerfilVendido getClone() {
		try {
			return (PerfilVendido) super.clone();
		} catch (CloneNotSupportedException e) {
			e.printStackTrace();
			return null;
		}
	}

	// ========================================================================
	// END
	// ========================================================================

	/**
	 * Valor do serialVersionUID.
	 */
	private static final long serialVersionUID = 1L;

	/**
	 * Constante para NamedQuery "PerfilVendido.findAll".
	 */
	public static final String FIND_ALL = "PerfilVendido.findAll";

	/**
	 * Atributo gerado a partir da coluna PEVE_CD_PERFIL_VENDIDO.
	 */
	@Id
	@GeneratedValue(generator = "PerfilVendidoSeq")
	@SequenceGenerator(name = "PerfilVendidoSeq", sequenceName = "SQ_PEVE_CD_PERFIL_VENDIDO", allocationSize = 1)
	@Column(name = "PEVE_CD_PERFIL_VENDIDO", unique = true, nullable = false, precision = 18, scale = 0)
	private Long codigoPerfilVendido;

	/**
	 * Atributo gerado a partir da coluna MOED_CD_MOEDA.
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MOED_CD_MOEDA", nullable = false)
	private Moeda moeda;

	/**
	 * Atributo gerado a partir da coluna PEPA_CD_PERFIL_PADRAO.
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PEPA_CD_PERFIL_PADRAO")
	private PerfilPadrao perfilPadrao;

	/**
	 * Atributo gerado a partir da coluna MSAA_CD_MSA.
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MSAA_CD_MSA", nullable = false)
	private Msa msa;

	/**
	 * Atributo gerado a partir da coluna PEVE_NM_PERFIL_VENDIDO.
	 */
	@Column(name = "PEVE_NM_PERFIL_VENDIDO", length = 200)
	private String nomePerfilVendido;

	/**
	 * Atributo gerado a partir da coluna PEVE_VL_PADRAO.
	 */
	@Column(name = "PEVE_VL_PADRAO", precision = 22, scale = 0)
	private BigDecimal valorPadrao;

	/**
	 * Atributo gerado a partir da coluna PEVE_IN_ATIVO.
	 */
	@Column(name = "PEVE_IN_ATIVO", nullable = false, length = 1)
	private String indicadorAtivo;

	/**
	 * Intens da Tabela de Preco.
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "perfilVendido")
	private List<ItemTabelaPreco> itemTabelaPrecos = new ArrayList<ItemTabelaPreco>(
			0);

	/**
	 * Itens de Receitas.
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "perfilVendido")
	private List<ItemReceita> itemReceitas = new ArrayList<ItemReceita>(0);

	/**
	 * Alocacoes.
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "perfilVendido")
	private List<Alocacao> alocacaos = new ArrayList<Alocacao>(0);

	/**
	 * Atributo gerado a partir da coluna PEVE_IN_DELETE_LOGICO.
	 */
	@Column(name = "PEVE_IN_DELETE_LOGICO", length = 1)
	private String indicadorDeleteLogico;

	/**
	 * Atributo gerado a partir da coluna COPR_CD_CONTRATO_PRATICA.
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "COPR_CD_CONTRATO_PRATICA_AUX", nullable = true)
	private ContratoPratica contratoPratica;

	/**
	 * Construtor default.
	 */
	public PerfilVendido() {
	}

	/**
	 * @return the codigoPerfilVendido
	 */
	public Long getCodigoPerfilVendido() {
		return codigoPerfilVendido;
	}

	/**
	 * @param codigoPerfilVendido
	 *            the codigoPerfilVendido to set
	 */
	public void setCodigoPerfilVendido(final Long codigoPerfilVendido) {
		this.codigoPerfilVendido = codigoPerfilVendido;
	}

	/**
	 * @return the moeda
	 */
	public Moeda getMoeda() {
		return moeda;
	}

	/**
	 * @param moeda
	 *            the moeda to set
	 */
	public void setMoeda(final Moeda moeda) {
		this.moeda = moeda;
	}

	/**
	 * @return the perfilPadrao
	 */
	public PerfilPadrao getPerfilPadrao() {
		return perfilPadrao;
	}

	/**
	 * @param perfilPadrao
	 *            the perfilPadrao to set
	 */
	public void setPerfilPadrao(final PerfilPadrao perfilPadrao) {
		this.perfilPadrao = perfilPadrao;
	}

	/**
	 * @return the msa
	 */
	public Msa getMsa() {
		return msa;
	}

	/**
	 * @param msa
	 *            the msa to set
	 */
	public void setMsa(final Msa msa) {
		this.msa = msa;
	}

	/**
	 * @return the nomePerfilVendido
	 */
	public String getNomePerfilVendido() {
		return nomePerfilVendido;
	}

	/**
	 * @param nomePerfilVendido
	 *            the nomePerfilVendido to set
	 */
	public void setNomePerfilVendido(final String nomePerfilVendido) {
		this.nomePerfilVendido = nomePerfilVendido;
	}

	/**
	 * @return the valorPadrao
	 */
	public BigDecimal getValorPadrao() {
		return valorPadrao;
	}

	/**
	 * @param valorPadrao
	 *            the valorPadrao to set
	 */
	public void setValorPadrao(final BigDecimal valorPadrao) {
		this.valorPadrao = valorPadrao;
	}

	/**
	 * @return the indicadorAtivo
	 */
	public String getIndicadorAtivo() {
		return indicadorAtivo;
	}

	/**
	 * @param indicadorAtivo
	 *            the indicadorAtivo to set
	 */
	public void setIndicadorAtivo(final String indicadorAtivo) {
		this.indicadorAtivo = indicadorAtivo;
	}

	/**
	 * @return the itemTabelaPrecos
	 */
	public List<ItemTabelaPreco> getItemTabelaPrecos() {
		return itemTabelaPrecos;
	}

	/**
	 * @param itemTabelaPrecos
	 *            the itemTabelaPrecos to set
	 */
	public void setItemTabelaPrecos(final List<ItemTabelaPreco> itemTabelaPrecos) {
		this.itemTabelaPrecos = itemTabelaPrecos;
	}

	/**
	 * @return the itemReceitas
	 */
	public List<ItemReceita> getItemReceitas() {
		return itemReceitas;
	}

	/**
	 * @param itemReceitas
	 *            the itemReceitas to set
	 */
	public void setItemReceitas(final List<ItemReceita> itemReceitas) {
		this.itemReceitas = itemReceitas;
	}

	/**
	 * @return the alocacaos
	 */
	public List<Alocacao> getAlocacaos() {
		return alocacaos;
	}

	/**
	 * @param alocacaos
	 *            the alocacaos to set
	 */
	public void setAlocacaos(final List<Alocacao> alocacaos) {
		this.alocacaos = alocacaos;
	}

	/**
	 * Obtem o valor do atributo indicadorDeleteLogico.<BR>
	 * Atributo gerado a partir da coluna PEVE_IN_DELETE_LOGICO.
	 * 
	 * @return Valor do atributo indicadorDeleteLogico.
	 */
	public String getIndicadorDeleteLogico() {
		return this.indicadorDeleteLogico;
	}

	/**
	 * Atualiza o valor do atributo indicadorDeleteLogico.<BR>
	 * Atributo gerado a partir da coluna PEVE_IN_DELETE_LOGICO.
	 * 
	 * @param indicadorDeleteLogico
	 *            Novo valor para o atributo indicadorDeleteLogico.
	 */
	public void setIndicadorDeleteLogico(final String indicadorDeleteLogico) {
		this.indicadorDeleteLogico = indicadorDeleteLogico;
	}

	/**
	 * Obtem o valor do atributo codigoContratoPratica.<BR>
	 * Atributo gerado a partir da coluna COPR_CD_CONTRATO_PRATICA.
	 * 
	 * @return Valor do atributo contratoPratica.
	 */
	public ContratoPratica getContratoPratica() {
		return this.contratoPratica;
	}

	/**
	 * Atualiza o valor do atributo codigoContratoPratica.<BR>
	 * Atributo gerado a partir da coluna COPR_CD_CONTRATO_PRATICA.
	 * 
	 * @param contratoPratica
	 *            Novo valor para o atributo contratoPratica.
	 */
	public void setContratoPratica(final ContratoPratica contratoPratica) {
		this.contratoPratica = contratoPratica;
	}

}