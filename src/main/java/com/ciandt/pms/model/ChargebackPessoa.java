/*
 * @(#) ChargebackPessoa.java
 * Copyright (c) 2008 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import org.hibernate.envers.Audited;
import org.hibernate.envers.RelationTargetAuditMode;

import javax.persistence.*;
import java.math.BigDecimal;
import java.util.Date;

/**
 * Entity gerado a partir da tabela CHARGEBACK_PESSOA.
 *
 * @author Generated by Hibernate Tools 3.2.4.GA
 * @version 09/01/19 1.1 10:08:00
 * @since 01/07/2011 15:50:28
 */
@Entity
@Table(name = "CHARGEBACK_PESSOA", uniqueConstraints = {@UniqueConstraint(columnNames = {
        "PESS_CD_PESSOA", "TIRE_CD_TI_RECURSO", "CHPE_DT_MES", "CHPE_DT_FIM"})})
@NamedQueries({
        @NamedQuery(name = "ChargebackPessoa.findAll", query = "SELECT t FROM ChargebackPessoa t"),

        @NamedQuery(name = "ChargebackPessoa.findByTiRecursoAndPeriod", query = "SELECT t FROM ChargebackPessoa t"
                + " WHERE (t.tiRecurso.codigoTiRecurso = ?) "
                + "   AND TRUNC(t.dataMes) between TRUNC(?) and TRUNC(?)"),

        @NamedQuery(name = "ChargebackPessoa.findByPessoaAndPeriod", query = "SELECT t FROM ChargebackPessoa t"
                + " WHERE (t.pessoa.codigoPessoa = ?) "
                + "   AND TRUNC(t.dataMes) between TRUNC(?) and TRUNC(?)"),

        @NamedQuery(name = "ChargebackPessoa.findByMonth", query = "SELECT cope.pessoa.codigoPessoa FROM ChargebackPessoa cope "
                + " WHERE (TRUNC(cope.dataMes) = TRUNC(?)) "
                + "   AND (cope.pessoa.dataRescisao is null) "
                + " GROUP BY cope.pessoa "),

        @NamedQuery(name = "ChargebackPessoa.findByUniqueKey", query = "SELECT t FROM ChargebackPessoa t"
                + " WHERE t.pessoa.codigoPessoa = ? "
                + " AND t.tiRecurso.codigoTiRecurso = ? "
                + " AND (TRUNC(t.dataMes) = TRUNC(?) or t.dataFimVigencia is null) "),

        @NamedQuery(name = "ChargebackPessoa.findByFilter", query = "SELECT cope FROM ChargebackPessoa cope "
                + " JOIN FETCH cope.pessoa "
                + " LEFT JOIN FETCH cope.tiRecurso "
                + " WHERE (UPPER(cope.pessoa.codigoLogin) like '%'||TRIM(UPPER(?1))||'%' "
                + "   OR UPPER(cope.pessoa.nomePessoa) like '%'||TRIM(UPPER(?1))||'%' ) "
                + "   AND (TRUNC(cope.dataMes) >= TRUNC(?2)) "
                + "   AND (cope.indicadorTipo like '%'||TRIM(?3)||'%') "
                + " ORDER BY cope.pessoa.nomePessoa ASC "),

        @NamedQuery(name = "ChargebackPessoa.findByFilterMissBlank", query = "SELECT cope FROM ChargebackPessoa cope "
                + " JOIN FETCH cope.pessoa "
                + " LEFT JOIN FETCH cope.tiRecurso "
                + " WHERE (UPPER(cope.pessoa.codigoLogin) like '%'||TRIM(UPPER(?1))||'%' "
                + "   OR UPPER(cope.pessoa.nomePessoa) like '%'||TRIM(UPPER(?1))||'%' ) "
                + "   AND (TRUNC(cope.dataMes) = TRUNC(?2)) "
                + "   AND (cope.indicadorTipo like '%'||TRIM(?3)||'%') "
                + "   AND (cope.tiRecurso.codigoTiRecurso = 0 OR cope.tiRecurso.codigoTiRecurso IS NULL) "
                + " ORDER BY cope.pessoa.nomePessoa ASC "),

        @NamedQuery(name = "ChargebackPessoa.removeByDate", query = "DELETE FROM ChargebackPessoa cope "
                + " WHERE (TRUNC(cope.dataMes) = TRUNC(:param1)) "
                + "   AND (cope.indicadorTipo like '%'||TRIM(:param2)||'%') "),

        @NamedQuery(name = "ChargebackPessoa.findByPessoaAndTiRecursoAndEndDate", query = "SELECT t FROM ChargebackPessoa t"
                + " WHERE t.pessoa.codigoPessoa = ?1 "
                + " AND t.tiRecurso.codigoTiRecurso = ?2 "
                + " AND TRUNC(t.dataMes) <= TRUNC(?3) "
                + " AND TRUNC(t.dataFimVigencia) >= TRUNC(?3) ")
})
public class ChargebackPessoa implements java.io.Serializable {

    // ========================================================================
    // BEGIN - Coloque aqui o codigo manual
    // ========================================================================

    /**
     * Constante para NamedQuery "ChargebackPessoa.findByTiRecursoAndPeriod".
     */
    public static final String FIND_BY_TIRECURSO_AND_PERIOD =
            "ChargebackPessoa.findByTiRecursoAndPeriod";

    /**
     * Constante para NamedQuery "ChargebackPessoa.findByPessoaAndPeriod".
     */
    public static final String FIND_BY_PESSOA_AND_PERIOD =
            "ChargebackPessoa.findByPessoaAndPeriod";

    /**
     * Constante para NamedQuery "ChargebackPessoa.findByUniqueKey".
     */
    public static final String FIND_BY_UNIQUE_KEY =
            "ChargebackPessoa.findByUniqueKey";

    /**
     * Constante para NamedQuery "ChargebackPessoa.findByFilter".
     */
    public static final String FIND_BY_FILTER = "ChargebackPessoa.findByFilter";

    /**
     * Constante para NamedQuery "ChargebackPessoa.findByMonth".
     */
    public static final String FIND_BY_MONTH = "ChargebackPessoa.findByMonth";

    /**
     * Constante para NamedQuery "ChargebackPessoa.findByFilterMissBlank".
     */
    public static final String FIND_BY_FILTER_MISS_BLANK =
            "ChargebackPessoa.findByFilterMissBlank";

    /**
     * Constante para NamedQuery "ChargebackPessoa.removeByDate".
     */
    public static final String REMOVE_BY_DATE = "ChargebackPessoa.removeByDate";

    /**
     * Constante para NamedQuery "ChargebackPessoa.findByPessoaAndTiRecursoAndEndDate".
     */
    public static final String FIND_BY_PESSOA_TIRECURSO_ENDDATE = "ChargebackPessoa.findByPessoaAndTiRecursoAndEndDate";

    // ========================================================================
    // END
    // ========================================================================
    /**
     * Constante para NamedQuery "ChargebackPessoa.findAll".
     */
    public static final String FIND_ALL = "ChargebackPessoa.findAll";
    /**
     * Valor do serialVersionUID.
     */
    private static final long serialVersionUID = 1L;
    /**
     * Atributo gerado a partir da coluna CHPE_CD_CHARGEBACK_PESS.
     */
    @Id
    @GeneratedValue(generator = "ChargebackPessoaSeq")
    @SequenceGenerator(name = "ChargebackPessoaSeq", sequenceName = "SQ_CHPE_CD_CHARGEBACK_PESS", allocationSize = 1)
    @Column(name = "CHPE_CD_CHARGEBACK_PESS", unique = true, nullable = false, precision = 18)
    private Long codigoChargebackPess;

    /**
     * Atributo gerado a partir da coluna PESS_CD_PESSOA.
     */
    @Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "PESS_CD_PESSOA", nullable = false)
    private Pessoa pessoa;

    /**
     * Atributo gerado a partir da coluna TIRE_CD_TI_RECURSO.
     */
    @Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "TIRE_CD_TI_RECURSO")
    private TiRecurso tiRecurso;

    /**
     * Atributo gerado a partir da coluna CHPE_DT_MES.
     */
    @Audited
    @Temporal(TemporalType.DATE)
    @Column(name = "CHPE_DT_MES", length = 7)
    private Date dataMes;

    /**
     * Atributo gerado a partir da coluna CHPE_NR_UNIDADES.
     */

    @Audited
    @Column(name = "CHPE_NR_UNIDADES", precision = 22)
    private BigDecimal numeroUnidades;

    /**
     * Atributo gerado a partir da coluna CHPE_IN_TIPO.
     */
    @Audited
    @Column(name = "CHPE_IN_TIPO", length = 2)
    private String indicadorTipo;

    /**
     * Atributo gerado a partir da coluna CHPE_DT_FIM.
     */
    @Audited
    @Temporal(TemporalType.DATE)
    @Column(name = "CHPE_DT_FIM", length = 7)
    private Date dataFimVigencia;

    /**
     * Atributo gerado a partir da coluna RECE_CD_LOGIN_CRIADOR.
     */
    @Audited
    @Column(name = "CHPE_CD_LOGIN_CRIADOR", length = 50)
    private String codigoLoginCriador;

    /**
     * Atributo gerado a partir da coluna RECE_DT_CRIACAO.
     */
    @Audited
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CHPE_DT_CRIACAO", length = 7)
    private Date dataCriacao;

    /**
     * Atributo gerado a partir da coluna RECE_DT_ATUALIZACAO.
     */
    @Audited
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CHPE_DT_ATUALIZACAO", length = 7)
    private Date dataAtualizacao;

    /**
     * Atributo gerado a partir da coluna RECE_CD_LOGIN_CRIADOR.
     */
    @Audited
    @Column(name = "CHPE_NM_TICKET_ATENDIMENTO", length = 100)
    private String ticketAtendimento;

    @Transient
    private Boolean isExcludable;

    /**
     * Construtor default.
     */
    public ChargebackPessoa() {
    }

    /**
     * Construtor com preenchimento da entidade.
     *
     * @param codigoChargebackPess Valor do atributo codigoChargebackPess;
     * @param pessoa               Valor do atributo pessoa;
     * @param tiRecurso            Valor do atributo tiRecurso;
     */
    public ChargebackPessoa(final Long codigoChargebackPess,
                            final Pessoa pessoa, final TiRecurso tiRecurso) {
        this.codigoChargebackPess = codigoChargebackPess;
        this.pessoa = pessoa;
        this.tiRecurso = tiRecurso;
    }

    /**
     * Construtor com preenchimento da entidade.
     *
     * @param codigoChargebackPess Valor do atributo codigoChargebackPess;
     * @param pessoa               Valor do atributo pessoa;
     * @param tiRecurso            Valor do atributo tiRecurso;
     * @param dataMes              Valor do atributo dataMes;
     * @param numeroUnidades       Valor do atributo numeroUnidades;
     * @param indicadorTipo        Valor do atributo indicadorTipo;
     */
    public ChargebackPessoa(final Long codigoChargebackPess,
                            final Pessoa pessoa, final TiRecurso tiRecurso, final Date dataMes,
                            final BigDecimal numeroUnidades, final String indicadorTipo) {
        this.codigoChargebackPess = codigoChargebackPess;
        this.pessoa = pessoa;
        this.tiRecurso = tiRecurso;
        this.dataMes = dataMes;
        this.numeroUnidades = numeroUnidades;
        this.indicadorTipo = indicadorTipo;
    }

    /**
     * Obtem o valor do atributo codigoChargebackPess.<BR>
     * Atributo gerado a partir da coluna CHPE_CD_CHARGEBACK_PESS.
     *
     * @return Valor do atributo codigoChargebackPess.
     */
    public Long getCodigoChargebackPess() {
        return this.codigoChargebackPess;
    }

    /**
     * Atualiza o valor do atributo codigoChargebackPess.<BR>
     * Atributo gerado a partir da coluna CHPE_CD_CHARGEBACK_PESS.
     *
     * @param codigoChargebackPess Novo valor para o atributo codigoChargebackPess.
     */
    public void setCodigoChargebackPess(final Long codigoChargebackPess) {
        this.codigoChargebackPess = codigoChargebackPess;
    }

    /**
     * Obtem o valor do atributo pessoa.<BR>
     * Atributo gerado a partir da coluna PESS_CD_PESSOA.
     *
     * @return Valor do atributo pessoa.
     */
    public Pessoa getPessoa() {
        return this.pessoa;
    }

    /**
     * Atualiza o valor do atributo pessoa.<BR>
     * Atributo gerado a partir da coluna PESS_CD_PESSOA.
     *
     * @param pessoa Novo valor para o atributo pessoa.
     */
    public void setPessoa(final Pessoa pessoa) {
        this.pessoa = pessoa;
    }

    /**
     * Obtem o valor do atributo tiRecurso.<BR>
     * Atributo gerado a partir da coluna TIRE_CD_TI_RECURSO.
     *
     * @return Valor do atributo tiRecurso.
     */
    public TiRecurso getTiRecurso() {
        return this.tiRecurso;
    }

    /**
     * Atualiza o valor do atributo tiRecurso.<BR>
     * Atributo gerado a partir da coluna TIRE_CD_TI_RECURSO.
     *
     * @param tiRecurso Novo valor para o atributo tiRecurso.
     */
    public void setTiRecurso(final TiRecurso tiRecurso) {
        this.tiRecurso = tiRecurso;
    }

    /**
     * Obtem o valor do atributo dataMes.<BR>
     * Atributo gerado a partir da coluna CHPE_DT_MES.
     *
     * @return Valor do atributo dataMes.
     */
    public Date getDataMes() {
        return this.dataMes;
    }

    /**
     * Atualiza o valor do atributo dataMes.<BR>
     * Atributo gerado a partir da coluna CHPE_DT_MES.
     *
     * @param dataMes Novo valor para o atributo dataMes.
     */
    public void setDataMes(final Date dataMes) {
        this.dataMes = dataMes;
    }

    /**
     * Obtem o valor do atributo numeroUnidades.<BR>
     * Atributo gerado a partir da coluna CHPE_NR_UNIDADES.
     *
     * @return Valor do atributo numeroUnidades.
     */
    public BigDecimal getNumeroUnidades() {
        return this.numeroUnidades;
    }

    /**
     * Atualiza o valor do atributo numeroUnidades.<BR>
     * Atributo gerado a partir da coluna CHPE_NR_UNIDADES.
     *
     * @param numeroUnidades Novo valor para o atributo numeroUnidades.
     */
    public void setNumeroUnidades(final BigDecimal numeroUnidades) {
        this.numeroUnidades = numeroUnidades;
    }

    /**
     * Obtem o valor do atributo indicadorTipo.<BR>
     * Atributo gerado a partir da coluna COTE_IN_TIPO.
     *
     * @return Valor do atributo indicadorTipo.
     */
    public String getIndicadorTipo() {
        return this.indicadorTipo;
    }

    /**
     * Atualiza o valor do atributo indicadorTipo.<BR>
     * Atributo gerado a partir da coluna COTE_IN_TIPO.
     *
     * @param indicadorTipo Novo valor para o atributo indicadorTipo.
     */
    public void setIndicadorTipo(final String indicadorTipo) {
        this.indicadorTipo = indicadorTipo;
    }

    /**
     * @see Object#toString()
     *
     * @return retorna a entidade no formato de string
     */

    /**
     * Obtem o valor do atributo dataMes.<BR>
     * Atributo gerado a partir da coluna CHPE_DT_FIM.
     *
     * @return Valor do atributo dataFimVigencia.
     */
    public Date getDataFimVigencia() {
        return this.dataFimVigencia;
    }

    /**
     * Atualiza o valor do atributo dataFimVigencia.<BR>
     * Atributo gerado a partir da coluna CHPE_DT_FIM.
     *
     * @param dataFimVigencia Novo valor para o atributo dataFimVigencia.
     */
    public void setDataFimVigencia(final Date dataFimVigencia) {
        this.dataFimVigencia = dataFimVigencia;
    }

    public String getCodigoLoginCriador() {
        return this.codigoLoginCriador;
    }

    public void setCodigoLoginCriador(final String codigoLoginCriador) {
        this.codigoLoginCriador = codigoLoginCriador;
    }

    public Date getDataCriacao() {
        return this.dataCriacao;
    }

    public void setDataCriacao(final Date dataCriacao) {
        this.dataCriacao = dataCriacao;
    }

    public Date getDataAtualizacao() {
        return this.dataAtualizacao;
    }

    public void setDataAtualizacao(final Date dataAtualizacao) {
        this.dataAtualizacao = dataAtualizacao;
    }

    public String getTicketAtendimento() {
        return this.ticketAtendimento;
    }

    public void setTicketAtendimento(final String ticketAtendimento) {
        this.ticketAtendimento = ticketAtendimento;
    }

    public Boolean getIsExcludable() {
        return isExcludable;
    }

    public void setIsExcludable(Boolean excludable) {
        isExcludable = excludable;
    }

    @Override
    public String toString() {
        StringBuilder buffer = new StringBuilder();

        buffer.append(getClass().getName()).append("@").append(
                Integer.toHexString(hashCode())).append(" [");
        buffer.append("codigoChargebackPess").append("='").append(
                getCodigoChargebackPess()).append("' ");
        buffer.append("pessoa").append("='").append(getPessoa()).append("' ");
        buffer.append("tiRecurso").append("='").append(getTiRecurso()).append(
                "' ");
        buffer.append("dataMes").append("='").append(getDataMes()).append("' ");
        buffer.append("numeroUnidades").append("='")
                .append(getNumeroUnidades()).append("' ");
        buffer.append("indicadorTipo").append("='").append(getIndicadorTipo())
                .append("' ");
        buffer.append("]");

        return buffer.toString();
    }

}
