/*
 * @(#) CotacaoMoedaMedia.java
 * Copyright (c) 2008 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import javax.persistence.*;
import java.math.BigDecimal;
import java.util.Date;

/**
 * Entity gerado a partir da tabela COTACAO_MOEDA_MEDIA.
 * 
 * @author Generated by Hibernate Tools 3.2.4.GA
 * @since 12/03/2016 17:14:06
 * @version 09/01/19 1.1 10:08:00
 */
@Entity
@Table(name = "COTACAO_MOEDA_MEDIA")
@NamedQueries({ 
    @NamedQuery(name = "CotacaoMoedaMedia.findAll", query = "SELECT t FROM CotacaoMoedaMedia t"),

    @NamedQuery(name = "CotacaoMoedaMedia.findByDeAndParaAndPeriod", query = "SELECT t FROM CotacaoMoedaMedia t"
    		+ " WHERE moedaDe.codigoMoeda = :codigoMoedaDe"
    		+ " AND moedaPara.codigoMoeda = :codigoMoedaPara"
    		+ " AND dataCotacao BETWEEN :startDate AND :endDate"
    		+ " AND (indicadorNovaCotacao = :isNovaCotacao OR :isNovaCotacao is null)"),

    @NamedQuery(name = "CotacaoMoedaMedia.findLast", query = "SELECT t FROM CotacaoMoedaMedia t"
    		+ " WHERE t.dataCotacao = ("
    		+ " SELECT MAX(c.dataCotacao) "
    		+ " FROM CotacaoMoedaMedia c)"),
    		
	@NamedQuery(name = "CotacaoMoedaMedia.findLastByMoedaDe", query = "SELECT t FROM CotacaoMoedaMedia t"
			+ " WHERE t.moedaDe.codigoMoeda = :codigoMoedaDe"
			+ " AND t.dataCotacao = ("
			+ " SELECT MAX(c.dataCotacao) "
			+ " FROM CotacaoMoedaMedia c "
			+ " WHERE c.moedaDe.codigoMoeda = :codigoMoedaDe "
			+ " AND c.moedaPara.codigoMoeda = :codigoMoedaPara)"),

	@NamedQuery(name = "CotacaoMoedaMedia.findByMoedaAndPeriod", query = "SELECT como FROM CotacaoMoedaMedia como "
			+ " LEFT JOIN FETCH como.moedaDe moedaDe "
			+ " LEFT JOIN FETCH como.moedaPara moedaPara "
			+ " WHERE ((como.moedaDe.codigoMoeda = :codigoMoedaDe) OR (:codigoMoedaDe = 0L)) "
			+ " AND ((como.moedaPara.codigoMoeda = :codigoMoedaPara) OR (:codigoMoedaPara = 0L)) "
			+ " AND TRUNC(como.dataCotacao) BETWEEN :startDate AND :endDate "
			+ " ORDER BY moedaDe.nomeMoeda ASC, moedaPara.nomeMoeda ASC, como.dataCotacao DESC "),

	@NamedQuery(name = "CotacaoMoedaMedia.findByDate", query = "SELECT t FROM CotacaoMoedaMedia t "
			+ " WHERE t.dataCotacao = trunc(:date) "),

	@NamedQuery(name = "CotacaoMoedaMedia.deleteByDate", query = "DELETE FROM CotacaoMoedaMedia t "
			+ " WHERE t.dataCotacao = trunc(:date) ")
})
public class CotacaoMoedaMedia implements java.io.Serializable {
    
    // ========================================================================
    // BEGIN - Coloque aqui o codigo manual
    // ========================================================================
    
    /** Constante para NamedQuery "CotacaoMoedaMedia.findCotacaoMoedaMediaByPeriod" . */
    public static final String FIND_BY_DE_AND_PARA_AND_PERIOD = "CotacaoMoedaMedia.findByDeAndParaAndPeriod";
    
    /** Constante para NamedQuery "CotacaoMoedaMedia.findLast" . */
    public static final String FIND_LAST = "CotacaoMoedaMedia.findLast";
    
    /** Constante para NamedQuery "CotacaoMoedaMedia.findLastByMoedaDe" . */
    public static final String FIND_LAST_BY_LAST_MOEDADE = "CotacaoMoedaMedia.findLastByMoedaDe";
    
    /** Constante para NamedQuery "CotacaoMoedaMedia.findByMoedaAndPeriod" . */
    public static final String FIND_BY_MOEDA_AND_PERIOD = "CotacaoMoedaMedia.findByMoedaAndPeriod";
    
    /** Constante para NamedQuery "CotacaoMoedaMedia.findLastByMonth" . */
    public static final String FIND_LAST_BY_MONTH = "CotacaoMoedaMedia.findLastByMonth";
    
    /** Constante para NamedQuery "CotacaoMoedaMedia.findByMoedaMesAndTipo" . */
    public static final String FIND_BY_MOEDA_MES_AND_TIPO = "CotacaoMoedaMedia.findByMoedaMesAndTipo";
    
    /** Constante para NamedQuery "CotacaoMoedaMedia.findByMoedaAndLastDayMonth" . */
    public static final String FIND_BY_MOEDA_AND_LAST_DAY_MONTH = "CotacaoMoedaMedia.findByMoedaAndLastDayMonth";
	public static final String FIND_BY_DATE = "CotacaoMoedaMedia.findByDate";
	public static final String DELETE_BY_DATE = "CotacaoMoedaMedia.deleteByDate";

	// ========================================================================
    // END
    // ========================================================================

    /**
     * Valor do serialVersionUID.
     */
    private static final long serialVersionUID = 1L;

    /**
     * Constante para NamedQuery "CotacaoMoedaMedia.findAll".
     */
    public static final String FIND_ALL = "CotacaoMoedaMedia.findAll";

	/**
	 * Atributo default para cotacoes copiadas nao interferirem na media mensal e anual
	 */
	public static final String INDICATOR_NOVA_COTACAO_COPIA = "N";

	/**
	 * Atributo default para cotacoes copiadas da mesma moeda
	 */
	public static final String INDICADOR_NOVA_COTACAO_COPIA_MESMA_MOEDA = "Y";

	/**
     * Atributo gerado a partir da coluna COMO_CD_COTACAO_MOEDA_MEDIA.
     */
    @Id
    @GeneratedValue(generator = "CotacaoMoedaMediaSeq")
    @SequenceGenerator(name = "CotacaoMoedaMediaSeq", sequenceName = "SQ_COMM_CD_COTACAO_MOEDA_MEDI", allocationSize = 1)
    @Column(name = "COMM_CD_COTACAO_MOEDA_MEDIA", unique = true, nullable = false, precision = 18, scale = 0)
    private Long codigoCotacaoMoedaMedia;
    
    /**
     * Atributo gerado a partir da coluna COMM_DT_DIA_COTACAO_MOEDA_MEDI. Data da Cotacao da Moeda
     */
    @Temporal(TemporalType.DATE)
    @Column(name = "COMM_DT_DIA_COTACAO_MOEDA_MEDI", nullable = false, length = 7)
    private Date dataCotacao;

    /**
     * Atributo gerado a partir da coluna MOED_CD_MOEDA_DE. Codigo da Moeda
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "MOED_CD_MOEDA_DE", nullable = false)
    private Moeda moedaDe;
    
    /**
     * Atributo gerado a partir da coluna MOED_CD_MOEDA_PARA. Codigo da Moeda
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "MOED_CD_MOEDA_PARA", nullable = false)
    private Moeda moedaPara;
    
    /**
     * Atributo gerado a partir da coluna COMM_VL_COTACAO_VENDA. Valor da Cotacao
     */
    @Column(name = "COMM_VL_COTACAO_VENDA", precision = 14, scale = 7)
    private BigDecimal valorCotacaoVenda;
    
    /**
     * Atributo gerado a partir da coluna COMM_VL_MEDIA_MES. Valor da Cotacao
     */
    @Column(name = "COMM_VL_MEDIA_MES_VENDA", precision = 14, scale = 7)
    private BigDecimal valorMediaMes;
    
    /**
     * Atributo gerado a partir da coluna COMM_VL_MEDIA_ANO. Valor da Cotacao
     */
    @Column(name = "COMM_VL_MEDIA_ANO_VENDA", precision = 14, scale = 7)
    private BigDecimal valorMediaAno;
    
    /**
     * Atributo gerado a partir da coluna COMM_IN_NOVA_COTACAO. Valor da Cotacao
     */
    @Column(name = "COMM_IN_NOVA_COTACAO", length = 1)
    private String indicadorNovaCotacao;

    /**
     * Construtor default.
     */
    public CotacaoMoedaMedia() {
    }

	public CotacaoMoedaMedia(Double valorCotacao) {
        this.valorCotacaoVenda = BigDecimal.valueOf(valorCotacao);
	}

    /**
     * Obtem o valor do atributo codigoCotacaoMoedaMedia.<BR>
     * Atributo gerado a partir da coluna COMO_CD_COTACAO_MOEDA_MEDIA.
     * 
     * @return Valor do atributo codigoCotacaoMoedaMedia.
     */
    public Long getCodigoCotacaoMoedaMedia() {
        return this.codigoCotacaoMoedaMedia;
    }

    /**
     * Atualiza o valor do atributo codigoCotacaoMoedaMedia.<BR>
     * Atributo gerado a partir da coluna COMO_CD_COTACAO_MOEDA_MEDIA.
     * 
     * @param codigoCotacaoMoedaMedia
     *            Novo valor para o atributo codigoCotacaoMoedaMedia.
     */
    public void setCodigoCotacaoMoedaMedia(final Long codigoCotacaoMoedaMedia) {
        this.codigoCotacaoMoedaMedia = codigoCotacaoMoedaMedia;
    }
    
    /**
     * Obtem o valor do atributo valorCotacaoCompra.<BR>
     * Atributo gerado a partir da coluna COMO_VL_COTACAO_COMPRA. Valor da Cotacao
     * 
     * @return Valor do atributo valorCotacaoCompra.
     */
    public BigDecimal getValorCotacaoVenda() {
    	return this.valorCotacaoVenda;
    }
    
    /**
     * Atualiza o valor do atributo valorCotacaoVenda.<BR>
     * Atributo gerado a partir da coluna COMO_VL_COTACAO_VENDA. Valor da Cotacao
     * 
     * @param valorCotacao
     *            Novo valor para o atributo valorCotacaoVenda.
     */
    public void setValorCotacaoVenda(final BigDecimal valorCotacaoVenda) {
    	this.valorCotacaoVenda = valorCotacaoVenda;
    }

    /**
	 * @return the dataCotacao
	 */
	public Date getDataCotacao() {
		return dataCotacao;
	}

	/**
	 * @param dataCotacao the dataCotacao to set
	 */
	public void setDataCotacao(Date dataCotacao) {
		this.dataCotacao = dataCotacao;
	}

	/**
	 * @return the moedaDe
	 */
	public Moeda getMoedaDe() {
		return moedaDe;
	}

	/**
	 * @param moedaDe the moedaDe to set
	 */
	public void setMoedaDe(Moeda moedaDe) {
		this.moedaDe = moedaDe;
	}

	/**
	 * @return the moedaPara
	 */
	public Moeda getMoedaPara() {
		return moedaPara;
	}

	/**
	 * @param moedaPara the moedaPara to set
	 */
	public void setMoedaPara(Moeda moedaPara) {
		this.moedaPara = moedaPara;
	}

	/**
	 * @return the valorMediaMes
	 */
	public BigDecimal getValorMediaMes() {
		return valorMediaMes;
	}

	/**
	 * @param valorMediaMes the valorMediaMes to set
	 */
	public void setValorMediaMes(BigDecimal valorMediaMes) {
		this.valorMediaMes = valorMediaMes;
	}

	/**
	 * @return the valorMediaAno
	 */
	public BigDecimal getValorMediaAno() {
		return valorMediaAno;
	}

	/**
	 * @param valorMediaAno the valorMediaAno to set
	 */
	public void setValorMediaAno(BigDecimal valorMediaAno) {
		this.valorMediaAno = valorMediaAno;
	}
	
	/**
	 * @return the indicadorNovaCotacao
	 */
	public String getIndicadorNovaCotacao() {
		return indicadorNovaCotacao;
	}
	
	/**
	 * @param valorMediaAno the indicadorNovaCotacao to set
	 */
	public void setIndicadorNovaCotacao(String indicadorNovaCotacao) {
		this.indicadorNovaCotacao = indicadorNovaCotacao;
	}

	/**
     * @see Object#toString()
     * @return representação String do Objeto
     */
    @Override
    public String toString() {
        StringBuffer buffer = new StringBuffer();

        buffer.append(getClass().getName()).append("@").append(
                Integer.toHexString(hashCode())).append(" [");
        buffer.append("codigoCotacaoMoedaMedia").append("='").append(
                getCodigoCotacaoMoedaMedia()).append("' ");
		buffer.append("valorCotacaoVenda").append("='")
				.append(getValorCotacaoVenda()).append("' ");
        buffer.append("]");

        return buffer.toString();
    }

	public static CotacaoMoedaMedia copyToDate(Date date, CotacaoMoedaMedia origin) {
		CotacaoMoedaMedia exchange = new CotacaoMoedaMedia();
		boolean isMesmaMoeda = origin.moedaDe.getCodigoMoeda().equals(origin.moedaPara.getCodigoMoeda());
		exchange.setDataCotacao(date);
		exchange.setMoedaDe(origin.moedaDe);
		exchange.setMoedaPara(origin.moedaPara);
		exchange.setValorMediaAno(origin.valorMediaAno);
		exchange.setValorMediaMes(origin.valorMediaMes);
		exchange.setValorCotacaoVenda(origin.valorCotacaoVenda);
		exchange.setIndicadorNovaCotacao(isMesmaMoeda ?
				INDICADOR_NOVA_COTACAO_COPIA_MESMA_MOEDA : INDICATOR_NOVA_COTACAO_COPIA);
		return exchange;
	}

}
