/*
 * @(#) CargoPmsCargo.java
 * Copyright (c) 2008 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

/**
 * Entity gerado a partir da tabela CARGO_PMS_CARGO.
 * 
 * @author Generated by Hibernate Tools 3.2.4.GA
 * @since 05/07/2012 12:54:26
 * @version 09/01/19 1.1 10:08:00
 */
@Entity
@Table(name = "CARGO_PMS_CARGO")
@NamedQueries({
        @NamedQuery(name = "CargoPmsCargo.findAll", query = "SELECT t FROM CargoPmsCargo t"),
        @NamedQuery(name = "CargoPmsCargo.findByCargoPms", query = "SELECT t FROM CargoPmsCargo t WHERE t.id.codigoCargoPms = ?")})
public class CargoPmsCargo implements java.io.Serializable {

    /**
     * Valor do serialVersionUID.
     */
    private static final long serialVersionUID = 1L;

    /**
     * Constante para NamedQuery "CargoPmsCargo.findAll".
     */
    public static final String FIND_ALL = "CargoPmsCargo.findAll";
    
    /**
     * Constante para namedQuery. 
     */
    public static final String FIND_BY_CARGO_PMS = "CargoPmsCargo.findByCargoPms";

    @EmbeddedId
    @AttributeOverrides({
            @AttributeOverride(name = "cargoPms", column = @Column(name = "CAPM_CD_CARGO_PMS", nullable = false, insertable = false, updatable = false)),
            @AttributeOverride(name = "codigoCargo", column = @Column(name = "CARG_CD_CARGO", unique = true, nullable = false, precision = 18, scale = 0))})
    private CargoPmsCargoId id;

    /**
     * Atributo gerado a partir da coluna CAPM_CD_CARGO_PMS.
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CAPM_CD_CARGO_PMS", nullable = false, insertable = false, updatable = false)
    private CargoPms cargoPms;

    /**
     * Construtor default.
     */
    public CargoPmsCargo() {
    }

    /**
     * Construtor com preenchimento da entidade.
     * 
     * @param id
     *            id.
     */
    public CargoPmsCargo(final CargoPmsCargoId id) {
        this.id = id;
    }

    /**
     * @return the id
     */
    public CargoPmsCargoId getId() {
        return id;
    }

    /**
     * @param id
     *            the id to set
     */
    public void setId(final CargoPmsCargoId id) {
        this.id = id;
    }

    /**
     * @return the cargoPms
     */
    public CargoPms getCargoPms() {
        return cargoPms;
    }

    /**
     * @param cargoPms
     *            the cargoPms to set
     */
    public void setCargoPms(final CargoPms cargoPms) {
        this.cargoPms = cargoPms;
    }

    /**
     * @see Object#toString()
     * @return toSring do objeto
     */
    @Override
    public String toString() {
        StringBuffer buffer = new StringBuffer();

        buffer.append(getClass().getName()).append("@").append(
                Integer.toHexString(hashCode())).append(" [");

        buffer.append("]");

        return buffer.toString();
    }

}
