/*
 * @(#) BasePapelAlocacao.java
 * Copyright (c) 2008 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.*;

/**
 * Entity gerado a partir da tabela BASE_PAPEL_ALOCACAO.
 * 
 * @author Generated by Hibernate Tools 3.2.4.GA
 * @since 12/07/2011 15:49:29
 * @version 09/01/19 1.1 10:08:00
 */
@Entity
@Table(name = "BASE_PAPEL_ALOCACAO")
@NamedQueries({
        @NamedQuery(name = "BasePapelAlocacao.findAll", query = "SELECT t FROM BasePapelAlocacao t"),

        @NamedQuery(name = "BasePapelAlocacao.findByBasePapelAlocacao"
            , query = "SELECT t FROM BasePapelAlocacao t "
                + " WHERE (t.papelAlocacao.codigoPapelAlocacao = ?) "
                + " AND t.codigoEmpresaERP = ? "
                + " AND (t.cidadeBase.codigoCidadeBase = ?) "),

        @NamedQuery(name = "BasePapelAlocacao.findByFilter", query = "SELECT t FROM BasePapelAlocacao t "
                + " WHERE (t.papelAlocacao.codigoPapelAlocacao = ? OR (0L = ?)) "
                + " ORDER BY t.papelAlocacao.nomePapelAlocacao "),

        @NamedQuery(name = "BasePapelAlocacao.findByFilterFetch", query = "SELECT t FROM BasePapelAlocacao t "
                + "LEFT JOIN FETCH t.papelAlocacao "
                + " WHERE (UPPER(t.papelAlocacao.nomePapelAlocacao) like '%'||TRIM(UPPER(?))||'%' OR (? is null)) "
                + " AND (t.codigoEmpresaERP = ? OR (0L = ?))"
                + " AND (t.cidadeBase.codigoCidadeBase = ? OR (0L = ?))"
                + " AND t.cidadeBase.indicadorAtivo = 'A'"
                + " ORDER BY t.papelAlocacao.nomePapelAlocacao, t.cidadeBase.nomeCidadeBase ")})
public class BasePapelAlocacao implements java.io.Serializable {

    // ========================================================================
    // BEGIN - Coloque aqui o codigo manual
    // ========================================================================

    /** Constante para NamedQuery "BasePapelAlocacao.findByFilter". */
    public static final String FIND_BY_FILTER =
            "BasePapelAlocacao.findByFilter";

    /** Constante para NamedQuery "BasePapelAlocacao.findByBasePapelAlocacao". */
    public static final String FIND_BY_BASE_PAPEL_ALOCACAO =
            "BasePapelAlocacao.findByBasePapelAlocacao";

    /** Constante para NamedQuery "BasePapelAlocacao.findByFilterFetch". */
    public static final String FIND_BY_FILTER_FETCH =
            "BasePapelAlocacao.findByFilterFetch";

    // ========================================================================
    // END
    // ========================================================================

    /**
     * Valor do serialVersionUID.
     */
    private static final long serialVersionUID = 1L;

    /**
     * Constante para NamedQuery "BasePapelAlocacao.findAll".
     */
    public static final String FIND_ALL = "BasePapelAlocacao.findAll";

    /**
     * Atributo gerado a partir da coluna BAPA_CD_BASE_PAPEL_ALOCACAO.
     */
    @Id
    @GeneratedValue(generator = "BasePapelAlocacaoSeq")
    @SequenceGenerator(name = "BasePapelAlocacaoSeq"
        , sequenceName = "SQ_BAPA_CD_BASE_PAPEL_ALOCACAO", allocationSize = 1)
    @Column(name = "BAPA_CD_BASE_PAPEL_ALOCACAO", unique = true, nullable = false, precision = 18, scale = 0)
    private Long codigoBasePapelAlocacao;

    /**
     * Atributo gerado a partir da coluna PAAL_CD_PAPEL_ALOCACAO.
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "PAAL_CD_PAPEL_ALOCACAO", nullable = false)
    private PapelAlocacao papelAlocacao;

    /**
     * Relacionamento um para muitos.
     */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "basePapelAlocacao")
    @OrderBy("dataInicio")
    private List<CustoBasePapelAlocacao> custoBasePapelAlocacaos =
            new ArrayList<CustoBasePapelAlocacao>(0);

    /**
     * Atributo gerado a partir da coluna CIBA_CD_CIDADE_BASE.
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CIBA_CD_CIDADE_BASE", nullable = false)
    private CidadeBase cidadeBase;

    @Column(name="EMPR_CD_ERP_CODIGO", length = 10)
    private Long codigoEmpresaERP;

    @Transient
    private String nomeEmpresa;

    @Transient
    private BigDecimal valorTCEVigente;


    /**
     * Construtor default.
     */
    public BasePapelAlocacao() {
    }

    /**
     * Construtor com preenchimento da entidade.
     * 
     * @param codigoBasePapelAlocacao
     *            Valor do atributo codigoBasePapelAlocacao;
     * @param moeda
     *            Valor do atributo moeda;
     * @param papelAlocacao
     *            Valor do atributo papelAlocacao;
     * @param cidadeBase
     *            Valor do atributo cidadeBase;
     */
    public BasePapelAlocacao(final Long codigoBasePapelAlocacao,
            final Moeda moeda, final PapelAlocacao papelAlocacao,
            final CidadeBase cidadeBase) {
        this.codigoBasePapelAlocacao = codigoBasePapelAlocacao;
        this.papelAlocacao = papelAlocacao;
        this.cidadeBase = cidadeBase;
    }

    /**
     * Obtem o valor do atributo codigoBasePapelAlocacao.<BR>
     * Atributo gerado a partir da coluna BAPA_CD_BASE_PAPEL_ALOCACAO.
     * 
     * @return Valor do atributo codigoBasePapelAlocacao.
     */
    public Long getCodigoBasePapelAlocacao() {
        return this.codigoBasePapelAlocacao;
    }

    /**
     * Atualiza o valor do atributo codigoBasePapelAlocacao.<BR>
     * Atributo gerado a partir da coluna BAPA_CD_BASE_PAPEL_ALOCACAO.
     * 
     * @param codigoBasePapelAlocacao
     *            Novo valor para o atributo codigoBasePapelAlocacao.
     */
    public void setCodigoBasePapelAlocacao(final Long codigoBasePapelAlocacao) {
        this.codigoBasePapelAlocacao = codigoBasePapelAlocacao;
    }

    /**
     * Obtem o valor do atributo papelAlocacao.<BR>
     * Atributo gerado a partir da coluna PAAL_CD_PAPEL_ALOCACAO.
     * 
     * @return Valor do atributo papelAlocacao.
     */
    public PapelAlocacao getPapelAlocacao() {
        return this.papelAlocacao;
    }

    /**
     * Atualiza o valor do atributo papelAlocacao.<BR>
     * Atributo gerado a partir da coluna PAAL_CD_PAPEL_ALOCACAO.
     * 
     * @param papelAlocacao
     *            Novo valor para o atributo papelAlocacao.
     */
    public void setPapelAlocacao(final PapelAlocacao papelAlocacao) {
        this.papelAlocacao = papelAlocacao;
    }

    /**
     * Obtem o valor do atributo cidadeBase.<BR>
     * Atributo gerado a partir da coluna CIBA_CD_CIDADE_BASE.
     * 
     * @return Valor do atributo cidadeBase.
     */
    public CidadeBase getCidadeBase() {
        return this.cidadeBase;
    }

    /**
     * Atualiza o valor do atributo cidadeBase.<BR>
     * Atributo gerado a partir da coluna CIBA_CD_CIDADE_BASE.
     * 
     * @param cidadeBase
     *            Novo valor para o atributo cidadeBase.
     */
    public void setCidadeBase(final CidadeBase cidadeBase) {
        this.cidadeBase = cidadeBase;
    }

    /**
     * @return the custoBasePapelAlocacaos
     */
    public List<CustoBasePapelAlocacao> getCustoBasePapelAlocacaos() {
        return custoBasePapelAlocacaos;
    }

    /**
     * @param custoBasePapelAlocacaos
     *            the custoBasePapelAlocacaos to set
     */
    public void setCustoBasePapelAlocacaos(
            final List<CustoBasePapelAlocacao> custoBasePapelAlocacaos) {
        this.custoBasePapelAlocacaos = custoBasePapelAlocacaos;
    }

    public void setCodigoEmpresaERP (final Long codigoEmpresaERP)
    {
        this.codigoEmpresaERP = codigoEmpresaERP;
    }

    public Long getCodigoEmpresaERP () {return this.codigoEmpresaERP;}

    public void setNomeEmpresa (final String nomeEmpresa)
    {
        this.nomeEmpresa = nomeEmpresa;
    }

    public String getNomeEmpresa () {return this.nomeEmpresa;}

    public void setValorTCEVigente (final BigDecimal valorTCEVigente)
    {
        this.valorTCEVigente = valorTCEVigente;
    }

    public BigDecimal getValorTCEVigente () {return this.valorTCEVigente;}

    /**
     * @see Object#toString()
     * @return string
     */
    @Override
    public String toString() {
        StringBuffer buffer = new StringBuffer();

        buffer.append(getClass().getName()).append("@").append(
                Integer.toHexString(hashCode())).append(" [");
        buffer.append("codigoBasePapelAlocacao").append("='").append(
                getCodigoBasePapelAlocacao()).append("' ");
        buffer.append("papelAlocacao").append("='").append(getPapelAlocacao())
                .append("' ");
        buffer.append("cidadeBase").append("='").append(getCidadeBase())
                .append("' ");
        buffer.append("]");

        return buffer.toString();
    }

}
