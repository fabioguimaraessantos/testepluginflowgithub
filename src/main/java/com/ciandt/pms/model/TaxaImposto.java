/*
 * @(#) TaxaImposto.java
 * Copyright (c) 2008 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.*;

/**
 * Entity gerado a partir da tabela TAXA_IMPOSTO.
 * 
 * @author Generated by Hibernate Tools 3.2.4.GA
 * @since 07/04/2010 16:21:51
 * @version 09/01/19 1.1 10:08:00
 */
@Entity
@Table(name = "TAXA_IMPOSTO")
@SqlResultSetMappings(@SqlResultSetMapping(name = "scalarTaxaImposto"))
@NamedNativeQueries({
		@NamedNativeQuery(name = "TaxaImposto.findTaxesByClobAndDealFiscalAndMonth", query = "select ti.taim_vl_taxa, ti.taim_vl_ftaxa, ti.taim_vl_mtaxa from taxa_imposto ti \n" +
				" inner join deal_fiscal df on ti.empr_cd_empresa = df.empr_cd_empresa \n" +
				" inner join tipo_servico_deal_fiscal tsdf on tsdf.defi_cd_deal_fiscal = df.defi_cd_deal_fiscal and ti.tise_cd_tipo_servico = tsdf.tise_cd_tipo_servico \n" +
				" where df.defi_cd_deal_fiscal = :dealFiscalCode\n" +
				" and trunc(:dtMonth) between ti.taim_dt_inicio and nvl(ti.taim_dt_fim, trunc(ti.taim_dt_inicio + 3650)) ",resultSetMapping = "scalarTaxaImposto")
})
@NamedQueries({
		@NamedQuery(name = "TaxaImposto.findAll", query = "SELECT t FROM TaxaImposto t"),

		@NamedQuery(name = "TaxaImposto.findByEmpresaTipoServicoDate", query = "SELECT t FROM TaxaImposto t "
				+ "WHERE t.empresa.codigoEmpresa = ?1 "
				+ "     AND t.tipoServico.codigoTipoServico = ?2 "
				+ "     AND TRUNC(?3,'MONTH') >= TRUNC(t.dataInicio,'MONTH') "
				+ "     AND ( TRUNC(?3,'MONTH') <= TRUNC(t.dataFim,'MONTH') OR t.dataFim is null ) "),

		@NamedQuery(name = "TaxaImposto.findByEmpresaTipoServicoDataInicio", query = "SELECT t FROM TaxaImposto t "
				+ "WHERE t.empresa.codigoEmpresa = ? AND t.tipoServico.codigoTipoServico = ? "
				+ "AND TRUNC(t.dataInicio) = TRUNC(?) "),

		@NamedQuery(name = "TaxaImposto.findByDataAnterior", query = "SELECT t FROM TaxaImposto t "
				+ "WHERE t.empresa.codigoEmpresa = ?1 AND t.tipoServico.codigoTipoServico = ?2 AND "
				+ "t.dataInicio = "
				+ "     (SELECT MAX(ti.dataInicio) FROM TaxaImposto ti "
				+ "     WHERE ti.empresa.codigoEmpresa = ?1 "
				+ "     AND ti.tipoServico.codigoTipoServico = ?2 AND TRUNC(ti.dataInicio) < TRUNC(?3)) "),

		@NamedQuery(name = "TaxaImposto.findByDataPosterior", query = "SELECT t FROM TaxaImposto t "
				+ "WHERE  t.empresa.codigoEmpresa = ?1 AND t.tipoServico.codigoTipoServico = ?2 AND "
				+ " t.dataInicio = "
				+ "     (SELECT MIN(ti.dataInicio) FROM TaxaImposto ti "
				+ "      WHERE ti.empresa.codigoEmpresa = ?1 "
				+ "      AND ti.tipoServico.codigoTipoServico = ?2 AND TRUNC(ti.dataInicio) > TRUNC(?3)) "),

		@NamedQuery(name = "TaxaImposto.findByFilter", query = "SELECT t FROM TaxaImposto t "
				+ " JOIN FETCH t.empresa "
				+ " JOIN FETCH t.tipoServico "
				+ " WHERE ( (t.empresa.codigoEmpresa = ?1) OR (?1 = 0L) ) "
				+ " AND ( (t.tipoServico.codigoTipoServico = ?2) OR (?2 = 0L) ) "
				+ " AND ( (TRUNC(t.dataInicio) <= TRUNC(?3) OR TRUNC(?3) = TRUNC(?5)) ) "
				+ " AND ( TRUNC(t.dataFim) >= TRUNC(?4) OR TRUNC(?4) = TRUNC(?5) ) "
				+ " ORDER BY t.empresa.nomeEmpresa, t.tipoServico.nomeTipoServico, t.dataInicio ASC"),

		@NamedQuery(name = "TaxaImposto.findMaxStartDateByEmpresaAndTipoServico", query = "SELECT t FROM TaxaImposto t "
				+ " WHERE t.empresa.codigoEmpresa = ?1 "
				+ " AND t.tipoServico.codigoTipoServico = ?2 "
				+ " AND t.dataInicio = "
				+ " (SELECT MAX(t.dataInicio) FROM TaxaImposto t "
				+ "  WHERE t.empresa.codigoEmpresa = ?1 "
				+ "  AND t.tipoServico.codigoTipoServico = ?2 ) ")	})
public class TaxaImposto implements java.io.Serializable {

	// ========================================================================
	// BEGIN - Coloque aqui o codigo manual
	// ========================================================================

	/**
	 * Constante para NamedQuery
	 * "TaxaImposto.findByEmpresaTipoServicoDataInicio".
	 */
	public static final String FIND_BY_EMPRESA_TIPOSERVICO_DATAINICIO = "TaxaImposto.findByEmpresaTipoServicoDataInicio";

	/**
	 * Constante para NamedQuery "TaxaImposto.findByDataAnterior".
	 */
	public static final String FIND_BY_DATA_ANTERIOR = "TaxaImposto.findByDataAnterior";

	/**
	 * Constante para NamedQuery "TaxaImposto.findByDataPosterior".
	 */
	public static final String FIND_BY_DATA_POSTERIOR = "TaxaImposto.findByDataPosterior";

	/**
	 * Constante para NamedQuery "TaxaImposto.findByFilter".
	 */
	public static final String FIND_BY_FILTER = "TaxaImposto.findByFilter";

	/**
	 * Constante para NamedQuery "TaxaImposto.findByFilter".
	 */
	public static final String FIND_MAX_START_DATE_BY_EMP_TIP_SERV = "TaxaImposto.findMaxStartDateByEmpresaAndTipoServico";

	/**
	 * Constante para NamedQuery "TaxaImposto.findTaxesByClobAndDealFiscalAndMonth".
	 */
	public static final String FIND_TAX_BY_CLOB_DEALFISCAL_MONTH = "TaxaImposto.findTaxesByClobAndDealFiscalAndMonth";

	/**
	 * Constante para NamedQuery "TaxaImposto.findByEmpresaTipoServicoDate".
	 */
	public static final String FIND_BY_EMPRESA_TIPOSERVICO_DATE = "TaxaImposto.findByEmpresaTipoServicoDate";

	// ========================================================================
	// END
	// ========================================================================

	/**
	 * Valor do serialVersionUID.
	 */
	private static final long serialVersionUID = 1L;

	/**
	 * Constante para NamedQuery "TaxaImposto.findAll".
	 */
	public static final String FIND_ALL = "TaxaImposto.findAll";

	/**
	 * Atributo gerado a partir da coluna TAIM_CD_TAXA_IMPOSTO.
	 */
	@Id
	@GeneratedValue(generator = "TaxaImpostoSeq")
	@SequenceGenerator(name = "TaxaImpostoSeq", sequenceName = "SQ_TAIM_CD_TAXA_IMPOSTO", allocationSize = 1)
	@Column(name = "TAIM_CD_TAXA_IMPOSTO", unique = true, nullable = false, precision = 18, scale = 0)
	private Long codigoTaxaImposto;

	/**
	 * Atributo gerado a partir da coluna TISE_CD_TIPO_SERVICO.
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TISE_CD_TIPO_SERVICO", nullable = false)
	private TipoServico tipoServico;

	/**
	 * Atributo gerado a partir da coluna EMPR_CD_EMPRESA.
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EMPR_CD_EMPRESA", nullable = false)
	private Empresa empresa;

	/**
	 * Atributo gerado a partir da coluna TAIM_VL_TAXA.
	 */

	@Column(name = "TAIM_VL_TAXA", nullable = true, precision = 22, scale = 0)
	private BigDecimal valorTaxa;

	/**
	 * Atributo gerado a partir da coluna TAIM_DT_INICIO.
	 */
	@Temporal(TemporalType.DATE)
	@Column(name = "TAIM_DT_INICIO", nullable = false, length = 7)
	private Date dataInicio;

	/**
	 * Atributo gerado a partir da coluna TAIM_DT_FIM.
	 */
	@Temporal(TemporalType.DATE)
	@Column(name = "TAIM_DT_FIM", length = 7)
	private Date dataFim;

	@Column(name = "TAIM_VL_MTAXA")
	private BigDecimal valorTaxaMunicipal;

	@Column(name = "TAIM_VL_FTAXA")
	private BigDecimal valorTaxaFederal;

	/**
	 * Construtor default.
	 */
	public TaxaImposto() {
	}

	/**
	 * Construtor com preenchimento da entidade.
	 * 
	 * @param tipoServico
	 *            Valor do atributo tipoServico;
	 * @param empresa
	 *            Valor do atributo empresa;
	 */
	public TaxaImposto(final TipoServico tipoServico, final Empresa empresa) {
		this.tipoServico = tipoServico;
		this.empresa = empresa;
	}

	/**
	 * Construtor com preenchimento da entidade.
	 * 
	 * @param codigoTaxaImposto
	 *            Valor do atributo codigoTaxaImposto;
	 * @param tipoServico
	 *            Valor do atributo tipoServico;
	 * @param empresa
	 *            Valor do atributo empresa;
	 * @param valorTaxa
	 *            Valor do atributo valorTaxa;
	 * @param dataInicio
	 *            Valor do atributo dataInicio;
	 * @param dataFim
	 *            Valor do atributo dataFim;
	 */
	public TaxaImposto(final Long codigoTaxaImposto,
			final TipoServico tipoServico, final Empresa empresa,
			final BigDecimal valorTaxa, final Date dataInicio,
			final Date dataFim, final BigDecimal valorTaxaMunicipal,
			final BigDecimal valorTaxaFederal) {
		this.codigoTaxaImposto = codigoTaxaImposto;
		this.tipoServico = tipoServico;
		this.empresa = empresa;
		this.valorTaxa = valorTaxa;
		this.dataInicio = dataInicio;
		this.dataFim = dataFim;
		this.valorTaxaMunicipal = valorTaxaMunicipal;
		this.valorTaxaFederal = valorTaxaFederal;
	}

	/**
	 * Obtem o valor do atributo codigoTaxaImposto.<BR>
	 * Atributo gerado a partir da coluna TAIM_CD_TAXA_IMPOSTO.
	 * 
	 * @return Valor do atributo codigoTaxaImposto.
	 */
	public Long getCodigoTaxaImposto() {
		return this.codigoTaxaImposto;
	}

	/**
	 * Atualiza o valor do atributo codigoTaxaImposto.<BR>
	 * Atributo gerado a partir da coluna TAIM_CD_TAXA_IMPOSTO.
	 * 
	 * @param codigoTaxaImposto
	 *            Novo valor para o atributo codigoTaxaImposto.
	 */
	public void setCodigoTaxaImposto(final Long codigoTaxaImposto) {
		this.codigoTaxaImposto = codigoTaxaImposto;
	}

	/**
	 * Obtem o valor do atributo tipoServico.<BR>
	 * Atributo gerado a partir da coluna TISE_CD_TIPO_SERVICO.
	 * 
	 * @return Valor do atributo tipoServico.
	 */
	public TipoServico getTipoServico() {
		return this.tipoServico;
	}

	/**
	 * Atualiza o valor do atributo tipoServico.<BR>
	 * Atributo gerado a partir da coluna TISE_CD_TIPO_SERVICO.
	 * 
	 * @param tipoServico
	 *            Novo valor para o atributo tipoServico.
	 */
	public void setTipoServico(final TipoServico tipoServico) {
		this.tipoServico = tipoServico;
	}

	/**
	 * Obtem o valor do atributo empresa.<BR>
	 * Atributo gerado a partir da coluna EMPR_CD_EMPRESA.
	 * 
	 * @return Valor do atributo empresa.
	 */
	public Empresa getEmpresa() {
		return this.empresa;
	}

	/**
	 * Atualiza o valor do atributo empresa.<BR>
	 * Atributo gerado a partir da coluna EMPR_CD_EMPRESA.
	 * 
	 * @param empresa
	 *            Novo valor para o atributo empresa.
	 */
	public void setEmpresa(final Empresa empresa) {
		this.empresa = empresa;
	}

	/**
	 * Obtem o valor do atributo valorTaxa.<BR>
	 * Atributo gerado a partir da coluna TAIM_VL_TAXA.
	 * 
	 * @return Valor do atributo valorTaxa.
	 */
	public BigDecimal getValorTaxa() {
		return this.valorTaxa;
	}

	/**
	 * Atualiza o valor do atributo valorTaxa.<BR>
	 * Atributo gerado a partir da coluna TAIM_VL_TAXA.
	 * 
	 * @param valorTaxa
	 *            Novo valor para o atributo valorTaxa.
	 */
	public void setValorTaxa(final BigDecimal valorTaxa) {
		this.valorTaxa = valorTaxa;
	}

	/**
	 * Obtem o valor do atributo dataInicio.<BR>
	 * Atributo gerado a partir da coluna TAIM_DT_INICIO.
	 * 
	 * @return Valor do atributo dataInicio.
	 */
	public Date getDataInicio() {
		return this.dataInicio;
	}

	/**
	 * Atualiza o valor do atributo dataInicio.<BR>
	 * Atributo gerado a partir da coluna TAIM_DT_INICIO.
	 * 
	 * @param dataInicio
	 *            Novo valor para o atributo dataInicio.
	 */
	public void setDataInicio(final Date dataInicio) {
		this.dataInicio = dataInicio;
	}

	/**
	 * Obtem o valor do atributo dataFim.<BR>
	 * Atributo gerado a partir da coluna TAIM_DT_FIM.
	 * 
	 * @return Valor do atributo dataFim.
	 */
	public Date getDataFim() {
		return this.dataFim;
	}

	/**
	 * Atualiza o valor do atributo dataFim.<BR>
	 * Atributo gerado a partir da coluna TAIM_DT_FIM.
	 * 
	 * @param dataFim
	 *            Novo valor para o atributo dataFim.
	 */
	public void setDataFim(final Date dataFim) {
		this.dataFim = dataFim;
	}

	/**
	 * @return the valorTaxaMunicipal
	 */
	public BigDecimal getValorTaxaMunicipal() {
		return valorTaxaMunicipal;
	}

	/**
	 * @param valorTaxaMunicipal
	 *            the valorTaxaMunicipal to set
	 */
	public void setValorTaxaMunicipal(BigDecimal valorTaxaMunicipal) {
		this.valorTaxaMunicipal = valorTaxaMunicipal;
	}

	/**
	 * @return the valorTaxaFederal
	 */
	public BigDecimal getValorTaxaFederal() {
		return valorTaxaFederal;
	}

	/**
	 * @param valorTaxaFederal
	 *            the valorTaxaFederal to set
	 */
	public void setValorTaxaFederal(BigDecimal valorTaxaFederal) {
		this.valorTaxaFederal = valorTaxaFederal;
	}

	/**
	 * @see Object#toString()
	 * 
	 * @return retorna o objeto em foramto de string
	 */
	@Override
	public String toString() {
		StringBuffer buffer = new StringBuffer();

		buffer.append(getClass().getName()).append("@")
				.append(Integer.toHexString(hashCode())).append(" [");
		buffer.append("codigoTaxaImposto").append("='")
				.append(getCodigoTaxaImposto()).append("' ");
		buffer.append("tipoServico").append("='").append(getTipoServico())
				.append("' ");
		buffer.append("empresa").append("='").append(getEmpresa()).append("' ");
		buffer.append("valorTaxa").append("='").append(getValorTaxa())
				.append("' ");
		buffer.append("dataInicio").append("='").append(getDataInicio())
				.append("' ");
		buffer.append("dataFim").append("='").append(getDataFim()).append("' ");
		buffer.append("]");

		return buffer.toString();
	}

}
