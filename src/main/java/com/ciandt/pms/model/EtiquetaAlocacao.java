/*
 * @(#) EtiquetaAlocacao.java
 * Copyright (c) 2008 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * Entity gerado a partir da tabela ETIQUETA_ALOCACAO.
 *
 * @author Generated by Hibernate Tools 3.2.4.GA
 * @since 15/10/2009 09:03:53
 * @version 09/01/19 1.1 10:08:00
 */
@Entity
@Table(name = "ETIQUETA_ALOCACAO")
@NamedQueries({ 
    @NamedQuery(name = "EtiquetaAlocacao.findAll", query = "SELECT t FROM EtiquetaAlocacao t"),
    
    @NamedQuery(name = "EtiquetaAlocacao.findByEtiquetaAndMapaAlocacao", 
            query = "SELECT etal FROM EtiquetaAlocacao etal "
                + "WHERE etal.id.codigoEtiqueta = ? "
                + "AND etal.alocacao.mapaAlocacao.codigoMapaAlocacao = ? ")
    })
public class EtiquetaAlocacao implements java.io.Serializable, Cloneable {
    
    // ========================================================================
    // BEGIN - Coloque aqui o codigo manual
    // ========================================================================

    /** Constante para NamedQuery "EtiquetaAlocacao.findByEtiquetaAndMapaAlocacao". */
    public static final String FIND_BY_ETIQUETA_AND_MAPA_ALOCACAO = 
        "EtiquetaAlocacao.findByEtiquetaAndMapaAlocacao";
    
    /**
     * Realiza uma copia do objeto, porem com uma referencia diferente.
     * 
     * @return a cópia do objeto
     */
    public EtiquetaAlocacao getClone() {
       try {
           EtiquetaAlocacao clone = (EtiquetaAlocacao) super.clone();
           return clone;
        } catch (CloneNotSupportedException e) {
            e.printStackTrace();
            return null;
        }  
    }

    // ========================================================================
    // END
    // ========================================================================

    /**
     * Valor do serialVersionUID.
     */
    private static final long serialVersionUID = 1L;

    /** 
     * Constante para NamedQuery "EtiquetaAlocacao.findAll".
     */
    public static final String FIND_ALL = "EtiquetaAlocacao.findAll";

    /**
     * Atributo gerado a partir da coluna ETIQ_CD_ETIQUETA.
     */
    @EmbeddedId
    @GeneratedValue(generator = "EtiquetaAlocacaoSeq")
    @SequenceGenerator(name = "EtiquetaAlocacaoSeq", sequenceName = "SQ_ALOC_CD_ALOCACAO", allocationSize = 1)
    @AttributeOverrides({
            @AttributeOverride(name = "codigoAlocacao", column = @Column(name = "ALOC_CD_ALOCACAO", 
                    nullable = false, precision = 18, scale = 0)),
            @AttributeOverride(name = "codigoEtiqueta", column = @Column(name = "ETIQ_CD_ETIQUETA", 
                    nullable = false, precision = 18, scale = 0)) })
    private EtiquetaAlocacaoId id;

    /**
     * Atributo gerado a partir da coluna ETIQ_CD_ETIQUETA.
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ETIQ_CD_ETIQUETA", nullable = false, insertable = false, updatable = false)
    private Etiqueta etiqueta;

    /**
     * Atributo gerado a partir da coluna ALOC_CD_ALOCACAO.
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ALOC_CD_ALOCACAO", nullable = false, insertable = false, updatable = false)
    private Alocacao alocacao;

    /**
     * Construtor default.
     */
    public EtiquetaAlocacao() {
    }

    /**
     * Construtor com preenchimento da entidade.
     * @param id Valor do atributo id;
     * @param etiqueta Valor do atributo etiqueta;
     * @param alocacao Valor do atributo alocacao;
     */
    public EtiquetaAlocacao(final EtiquetaAlocacaoId id, final Etiqueta etiqueta,
            final Alocacao alocacao) {
        this.id = id;
        this.etiqueta = etiqueta;
        this.alocacao = alocacao;
    }

    /**
     * Obtem o valor do atributo id.<BR>
     * Atributo gerado a partir da coluna ETIQ_CD_ETIQUETA.
     * @return Valor do atributo id.
     */
    public EtiquetaAlocacaoId getId() {
        return this.id;
    }

    /**
     * Atualiza o valor do atributo id.<BR>
     * Atributo gerado a partir da coluna ETIQ_CD_ETIQUETA.
     * @param id Novo valor para o atributo id.
     */
    public void setId(final EtiquetaAlocacaoId id) {
        this.id = id;
    }

    /**
     * Obtem o valor do atributo etiqueta.<BR>
     * Atributo gerado a partir da coluna ETIQ_CD_ETIQUETA.
     * @return Valor do atributo etiqueta.
     */
    public Etiqueta getEtiqueta() {
        return this.etiqueta;
    }

    /**
     * Atualiza o valor do atributo etiqueta.<BR>
     * Atributo gerado a partir da coluna ETIQ_CD_ETIQUETA.
     * @param etiqueta Novo valor para o atributo etiqueta.
     */
    public void setEtiqueta(final Etiqueta etiqueta) {
        this.etiqueta = etiqueta;
    }

    /**
     * Obtem o valor do atributo alocacao.<BR>
     * Atributo gerado a partir da coluna ALOC_CD_ALOCACAO.
     * @return Valor do atributo alocacao.
     */
    public Alocacao getAlocacao() {
        return this.alocacao;
    }

    /**
     * Atualiza o valor do atributo alocacao.<BR>
     * Atributo gerado a partir da coluna ALOC_CD_ALOCACAO.
     * @param alocacao Novo valor para o atributo alocacao.
     */
    public void setAlocacao(final Alocacao alocacao) {
        this.alocacao = alocacao;
    }

    /**
     * @see Object#toString()
     * @return representação String do Objeto
     */
    @Override
    public String toString() {
        StringBuffer buffer = new StringBuffer();

        buffer.append(getClass().getName()).append("@").append(
                Integer.toHexString(hashCode())).append(" [");
        buffer.append("id").append("='").append(getId()).append("' ");
        buffer.append("etiqueta").append("='").append(getEtiqueta()).append(
                "' ");
        buffer.append("alocacao").append("='").append(getAlocacao()).append(
                "' ");
        buffer.append("]");

        return buffer.toString();
    }

}
