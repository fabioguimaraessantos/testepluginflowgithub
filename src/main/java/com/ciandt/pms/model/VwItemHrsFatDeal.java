/*
 * @(#) VwItemHrsFatDeal.java
 * Copyright (c) 2008 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

/**
 * Entity gerado a partir da tabela VW_ITEM_HRS_FAT_DEAL.
 * 
 * @author Generated by Hibernate Tools 3.2.4.GA
 * @since 29/09/2009 10:06:13
 * @version 09/01/19 1.1 10:08:00
 */
@Entity
@Table(name = "VW_ITEM_HRS_FAT_DEAL")
@NamedQueries({
        @NamedQuery(name = "VwItemHrsFatDeal.findAll", query = "SELECT t FROM VwItemHrsFatDeal t"),

        @NamedQuery(name = "VwItemHrsFatDeal.findByFilter", query = "SELECT ihfd FROM VwItemHrsFatDeal ihfd "
                + "WHERE (TRUNC(ihfd.id.dataAlocacaoPeriodo) = TRUNC(?) ) "
                + "AND (ihfd.id.codigoContratoPratica = ?) ") })
public class VwItemHrsFatDeal implements java.io.Serializable {

    // ========================================================================
    // BEGIN - Coloque aqui o codigo manual
    // ========================================================================

    /** Constante para NamedQuery "VwItemHrsFatDeal.findByFilter". */
    public static final String FIND_BY_FILTER = "VwItemHrsFatDeal.findByFilter";

    // ========================================================================
    // END
    // ========================================================================

    /**
     * Valor do serialVersionUID.
     */
    private static final long serialVersionUID = 1L;

    /**
     * Constante para NamedQuery "VwItemHrsFatDeal.findAll".
     */
    public static final String FIND_ALL = "VwItemHrsFatDeal.findAll";

    /**
     * Atributo gerado a partir das colunas da view.
     */
    @EmbeddedId
    @AttributeOverrides({
            @AttributeOverride(name = "codigoPessoa", 
                    column = @Column(name = "PESS_CD_PESSOA", precision = 18, scale = 0)),
            @AttributeOverride(name = "percentualAlocacaoPeriodo", 
                    column = @Column(name = "ALPE_PR_ALOCACAO_PERIODO", precision = 5)),
            @AttributeOverride(name = "codigoPerfilVendido", 
                    column = @Column(name = "PEVE_CD_PERFIL_VENDIDO", 
                            nullable = false, precision = 18, scale = 0)),
            @AttributeOverride(name = "valorPerfilVendido", 
                    column = @Column(name = "PEVE_VL_PERFIL_VENDIDO", precision = 22, scale = 0)),
            @AttributeOverride(name = "dataAlocacaoPeriodo", 
                    column = @Column(name = "ALPE_DT_ALOCACAO_PERIODO", length = 8)),
            @AttributeOverride(name = "codigoContratoPratica", 
                    column = @Column(name = "COPR_CD_CONTRATO_PRATICA", precision = 18, scale = 0)),
            @AttributeOverride(name = "codigoAlocacao",
                    column = @Column(name = "ALOC_CD_ALOCACAO", nullable = false, precision = 18, scale = 0)) })
    private VwItemHrsFatDealId id;

    /**
     * Construtor default.
     */
    public VwItemHrsFatDeal() {
    }

    /**
     * Construtor com preenchimento da entidade.
     * 
     * @param id
     *            Valor do atributo id;
     */
    public VwItemHrsFatDeal(final VwItemHrsFatDealId id) {
        this.id = id;
    }

    /**
     * Obtem o valor do atributo id.<BR>
     * 
     * @return Valor do atributo id.
     */
    public VwItemHrsFatDealId getId() {
        return this.id;
    }

    /**
     * Atualiza o valor do atributo id.<BR>
     * 
     * @param id
     *            Novo valor para o atributo id.
     */
    public void setId(final VwItemHrsFatDealId id) {
        this.id = id;
    }

    /**
     * @see Object#toString()
     * @return representação String do Objeto
     */
    @Override
    public String toString() {
        StringBuffer buffer = new StringBuffer();

        buffer.append(getClass().getName()).append("@").append(
                Integer.toHexString(hashCode())).append(" [");
        buffer.append("id").append("='").append(getId()).append("' ");
        buffer.append("]");

        return buffer.toString();
    }

}
