/*
 * @(#) CotacaoMoeda.java
 * Copyright (c) 2008 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Entity gerado a partir da tabela COTACAO_MOEDA.
 * 
 * @author Generated by Hibernate Tools 3.2.4.GA
 * @since 12/08/2009 17:14:06
 * @version 09/01/19 1.1 10:08:00
 */
@Entity
@Table(name = "COTACAO_MOEDA")
@NamedQueries({ 
    @NamedQuery(name = "CotacaoMoeda.findAll", query = "SELECT t FROM CotacaoMoeda t"),
    
    @NamedQuery(name = "CotacaoMoeda.findByMoedaAndPeriod", 
            query = "SELECT como FROM CotacaoMoeda como "
                + " LEFT JOIN FETCH como.moeda moeda "
                + " WHERE ((moeda.codigoMoeda = ?1) OR (?1 = 0L)) "
                + " AND TRUNC(como.dataDia) BETWEEN TRUNC(?2) AND TRUNC(?3) "
                + " AND (como.indicadorTipo = ?4 OR ?4 is null)"
                + " ORDER BY moeda.nomeMoeda ASC, como.dataDia DESC "),

    @NamedQuery(name = "CotacaoMoeda.findByMoedaMesAndTipo", 
            query = "SELECT como FROM CotacaoMoeda como "
                + " LEFT JOIN FETCH como.moeda moeda "
                + " WHERE moeda.codigoMoeda = ? "
                + " AND TRUNC(como.dataDia) = TRUNC(?) " 
                + " AND como.indicadorTipo = ?"),                
                
    @NamedQuery(name = "CotacaoMoeda.findLastByMonth", query = "SELECT cotacao FROM CotacaoMoeda cotacao "
                + " WHERE cotacao.moeda.codigoMoeda = ? " 
                + " AND cotacao.indicadorTipo = 'R' "
                + " AND cotacao.dataDia = (" 
                + "     SELECT MAX(c.dataDia) " 
                + "     FROM CotacaoMoeda c " 
                + "     WHERE c.moeda.codigoMoeda = ? " 
                + "     AND  c.dataDia <= last_day(?) AND c.indicadorTipo = 'R' )"),
    
    @NamedQuery(name = "CotacaoMoeda.findByMoedaAndLastDayMonth", 
            query = "SELECT como FROM CotacaoMoeda como "
                + " LEFT JOIN FETCH como.moeda moeda "
                + " WHERE moeda.codigoMoeda = ? "
                + " AND TRUNC(como.dataDia) = LAST_DAY(?) ")
})
public class CotacaoMoeda implements java.io.Serializable {
    
    // ========================================================================
    // BEGIN - Coloque aqui o codigo manual
    // ========================================================================
    
    /** Constante para NamedQuery "CotacaoMoeda.findByMoedaAndPeriod" . */
    public static final String FIND_BY_MOEDA_AND_PERIOD = "CotacaoMoeda.findByMoedaAndPeriod";
    
    /** Constante para NamedQuery "CotacaoMoeda.findLastByMonth" . */
    public static final String FIND_LAST_BY_MONTH = "CotacaoMoeda.findLastByMonth";
    
    /** Constante para NamedQuery "CotacaoMoeda.findByMoedaMesAndTipo" . */
    public static final String FIND_BY_MOEDA_MES_AND_TIPO = "CotacaoMoeda.findByMoedaMesAndTipo";
    
    /** Constante para NamedQuery "CotacaoMoeda.findByMoedaAndLastDayMonth" . */
    public static final String FIND_BY_MOEDA_AND_LAST_DAY_MONTH = "CotacaoMoeda.findByMoedaAndLastDayMonth";
    
    // ========================================================================
    // END
    // ========================================================================

    /**
     * Valor do serialVersionUID.
     */
    private static final long serialVersionUID = 1L;

    /**
     * Constante para NamedQuery "CotacaoMoeda.findAll".
     */
    public static final String FIND_ALL = "CotacaoMoeda.findAll";

    /**
     * Atributo gerado a partir da coluna COMO_CD_COTACAO_MOEDA.
     */
    @Id
    @GeneratedValue(generator = "CotacaoMoedaSeq")
    @SequenceGenerator(name = "CotacaoMoedaSeq", sequenceName = "SQ_COMO_CD_COTACAO_MOEDA", allocationSize = 1)
    @Column(name = "COMO_CD_COTACAO_MOEDA", unique = true, nullable = false, precision = 18, scale = 0)
    private Long codigoCotacaoMoeda;

    /**
     * Atributo gerado a partir da coluna MOED_CD_MOEDA. Codigo da Moeda
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "MOED_CD_MOEDA", nullable = false)
    private Moeda moeda;

    /**
     * Atributo gerado a partir da coluna COMO_DT_DIA. Data da Cotacao da Moeda
     */
    @Temporal(TemporalType.DATE)
    @Column(name = "COMO_DT_DIA", nullable = false, length = 7)
    private Date dataDia;

    /**
     * Atributo gerado a partir da coluna COMO_VL_COTACAO. Valor da Cotacao
     */

    @Column(name = "COMO_VL_COTACAO", precision = 22, scale = 0)
    private BigDecimal valorCotacao;

    /**
     * Atributo gerado a partir da coluna COMO_IN_TIPO. Tipo do Indicador (Real
     * / Previsto)
     */

    @Column(name = "COMO_IN_TIPO", nullable = false, length = 1)
    private String indicadorTipo;

    /**
     * Construtor default.
     */
    public CotacaoMoeda() {
    }

    /**
     * Construtor com preenchimento da entidade.
     * 
     * @param codigoCotacaoMoeda
     *            Valor do atributo codigoCotacaoMoeda;
     * @param moeda
     *            Valor do atributo moeda;
     * @param dataDia
     *            Valor do atributo dataDia;
     * @param indicadorTipo
     *            Valor do atributo indicadorTipo;
     */
    public CotacaoMoeda(final Long codigoCotacaoMoeda, final Moeda moeda,
            final Date dataDia, final String indicadorTipo) {
        this.codigoCotacaoMoeda = codigoCotacaoMoeda;
        this.moeda = moeda;
        this.dataDia = dataDia;
        this.indicadorTipo = indicadorTipo;
    }

    /**
     * Construtor com preenchimento da entidade.
     * 
     * @param codigoCotacaoMoeda
     *            Valor do atributo codigoCotacaoMoeda;
     * @param moeda
     *            Valor do atributo moeda;
     * @param dataDia
     *            Valor do atributo dataDia;
     * @param indicadorTipo
     *            Valor do atributo indicadorTipo;
     * @param valorCotacao
     *            Valor do atributo valorCotacao;
     */
    public CotacaoMoeda(final Long codigoCotacaoMoeda, final Moeda moeda,
            final Date dataDia, final BigDecimal valorCotacao,
            final String indicadorTipo) {
        this.codigoCotacaoMoeda = codigoCotacaoMoeda;
        this.moeda = moeda;
        this.dataDia = dataDia;
        this.valorCotacao = valorCotacao;
        this.indicadorTipo = indicadorTipo;
    }

    /**
     * Obtem o valor do atributo codigoCotacaoMoeda.<BR>
     * Atributo gerado a partir da coluna COMO_CD_COTACAO_MOEDA.
     * 
     * @return Valor do atributo codigoCotacaoMoeda.
     */
    public Long getCodigoCotacaoMoeda() {
        return this.codigoCotacaoMoeda;
    }

    /**
     * Atualiza o valor do atributo codigoCotacaoMoeda.<BR>
     * Atributo gerado a partir da coluna COMO_CD_COTACAO_MOEDA.
     * 
     * @param codigoCotacaoMoeda
     *            Novo valor para o atributo codigoCotacaoMoeda.
     */
    public void setCodigoCotacaoMoeda(final Long codigoCotacaoMoeda) {
        this.codigoCotacaoMoeda = codigoCotacaoMoeda;
    }

    /**
     * Obtem o valor do atributo moeda.<BR>
     * Atributo gerado a partir da coluna MOED_CD_MOEDA. Codigo da Moeda
     * 
     * @return Valor do atributo moeda.
     */
    public Moeda getMoeda() {
        return this.moeda;
    }

    /**
     * Atualiza o valor do atributo moeda.<BR>
     * Atributo gerado a partir da coluna MOED_CD_MOEDA. Codigo da Moeda
     * 
     * @param moeda
     *            Novo valor para o atributo moeda.
     */
    public void setMoeda(final Moeda moeda) {
        this.moeda = moeda;
    }

    /**
     * Obtem o valor do atributo dataDia.<BR>
     * Atributo gerado a partir da coluna COMO_DT_DIA. Data da Cotacao da Moeda
     * 
     * @return Valor do atributo dataDia.
     */
    public Date getDataDia() {
        return this.dataDia;
    }

    /**
     * Atualiza o valor do atributo dataDia.<BR>
     * Atributo gerado a partir da coluna COMO_DT_DIA. Data da Cotacao da Moeda
     * 
     * @param dataDia
     *            Novo valor para o atributo dataDia.
     */
    public void setDataDia(final Date dataDia) {
        this.dataDia = dataDia;
    }

    /**
     * Obtem o valor do atributo valorCotacao.<BR>
     * Atributo gerado a partir da coluna COMO_VL_COTACAO. Valor da Cotacao
     * 
     * @return Valor do atributo valorCotacao.
     */
    public BigDecimal getValorCotacao() {
        return this.valorCotacao;
    }

    /**
     * Atualiza o valor do atributo valorCotacao.<BR>
     * Atributo gerado a partir da coluna COMO_VL_COTACAO. Valor da Cotacao
     * 
     * @param valorCotacao
     *            Novo valor para o atributo valorCotacao.
     */
    public void setValorCotacao(final BigDecimal valorCotacao) {
        this.valorCotacao = valorCotacao;
    }

    /**
     * Obtem o valor do atributo indicadorTipo.<BR>
     * Atributo gerado a partir da coluna COMO_IN_TIPO. Tipo do Indicador (Real
     * / Previsto)
     * 
     * @return Valor do atributo indicadorTipo.
     */
    public String getIndicadorTipo() {
        return this.indicadorTipo;
    }

    /**
     * Atualiza o valor do atributo indicadorTipo.<BR>
     * Atributo gerado a partir da coluna COMO_IN_TIPO. Tipo do Indicador (Real
     * / Previsto)
     * 
     * @param indicadorTipo
     *            Novo valor para o atributo indicadorTipo.
     */
    public void setIndicadorTipo(final String indicadorTipo) {
        this.indicadorTipo = indicadorTipo;
    }

    /**
     * @see Object#toString()
     * @return representação String do Objeto
     */
    @Override
    public String toString() {
        StringBuffer buffer = new StringBuffer();

        buffer.append(getClass().getName()).append("@").append(
                Integer.toHexString(hashCode())).append(" [");
        buffer.append("codigoCotacaoMoeda").append("='").append(
                getCodigoCotacaoMoeda()).append("' ");
        buffer.append("moeda").append("='").append(getMoeda()).append("' ");
        buffer.append("dataDia").append("='").append(getDataDia()).append("' ");
        buffer.append("valorCotacao").append("='").append(getValorCotacao())
                .append("' ");
        buffer.append("indicadorTipo").append("='").append(getIndicadorTipo())
                .append("' ");
        buffer.append("]");

        return buffer.toString();
    }

}
