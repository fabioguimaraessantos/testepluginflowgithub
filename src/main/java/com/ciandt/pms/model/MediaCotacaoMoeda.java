/*
 * @(#) MediaCotacaoMoeda.java
 * Copyright (c) 2008 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Entity gerado a partir da tabela MEDIA_COTACAO_MOEDA.
 * 
 * @author Generated by Hibernate Tools 3.6.0
 * @since 05/09/2013 11:16:32
 * @version 09/01/19 1.1 10:08:00
 */
@Entity
@Table(name = "MEDIA_COTACAO_MOEDA", uniqueConstraints = @UniqueConstraint(columnNames = {
		"MOED_CD_MOEDA", "MECM_DT_DATA" }))
@NamedQueries({
		@NamedQuery(name = "MediaCotacaoMoeda.findAll", query = "SELECT t FROM MediaCotacaoMoeda t"),

		@NamedQuery(name = "MediaCotacaoMoeda.findByDataAndMoeda", query = "SELECT m FROM MediaCotacaoMoeda m "
				+ "WHERE to_char(m.dataData, 'yyyy') = ? " + " AND m.moeda.codigoMoeda = ? "),

		@NamedQuery(name = "MediaCotacaoMoeda.findByMoeda", query = "SELECT m FROM MediaCotacaoMoeda m "
				+ "WHERE m.moeda.codigoMoeda = ? ORDER BY m.dataData") })
public class MediaCotacaoMoeda implements java.io.Serializable {

	/**
	 * Valor do serialVersionUID.
	 */
	private static final long serialVersionUID = 2449352111598844336L;

	/**
	 * Constante para NamedQuery "MediaCotacaoMoeda.findAll".
	 */
	public static final String FIND_ALL = "MediaCotacaoMoeda.findAll";

	/**
	 * Constante para NamedQuery "MediaCotacaoMoeda.findByDataAndMoeda".
	 */
	public static final String FIND_BY_DATA_AND_MOEDA = "MediaCotacaoMoeda.findByDataAndMoeda";

	/**
	 * Constante para NamedQuery "MediaCotacaoMoeda.findByMoeda".
	 */
	public static final String FIND_BY_MOEDA = "MediaCotacaoMoeda.findByMoeda";

	/**
	 * Atributo gerado a partir da coluna MECM_CD_MEDIA_CT_MOEDA.
	 */
	@Id
	@GeneratedValue(generator = "MediaCotacaoMoedaSeq")
	@SequenceGenerator(name = "MediaCotacaoMoedaSeq", sequenceName = "SQ_MECM_CD_MEDIA_CT_MOEDA", allocationSize = 1)
	@Column(name = "MECM_CD_MEDIA_CT_MOEDA", unique = true, nullable = false, precision = 18, scale = 0)
	private Long codigoMediaCtMoeda;

	/**
	 * Atributo gerado a partir da coluna MOED_CD_MOEDA.
	 */
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "MOED_CD_MOEDA", nullable = false)
	private Moeda moeda;

	/**
	 * Atributo gerado a partir da coluna MECM_DT_DATA.
	 */
	@Temporal(TemporalType.DATE)
	@Column(name = "MECM_DT_DATA", nullable = false, length = 7)
	private Date dataData;

	/**
	 * Atributo gerado a partir da coluna MECM_VL_COTACAO.
	 */

	@Column(name = "MECM_VL_COTACAO", nullable = false, precision = 18, scale = 4)
	private BigDecimal valorCotacao;

	/**
	 * Construtor default.
	 */
	public MediaCotacaoMoeda() {
	}

	/**
	 * Construtor com preenchimento da entidade.
	 * 
	 * @param codigoMediaCtMoeda
	 *            Valor do atributo codigoMediaCtMoeda;
	 * @param moeda
	 *            Valor do atributo moeda;
	 * @param dataData
	 *            Valor do atributo dataData;
	 * @param valorCotacao
	 *            Valor do atributo valorCotacao;
	 */
	public MediaCotacaoMoeda(Long codigoMediaCtMoeda, Moeda moeda,
			Date dataData, BigDecimal valorCotacao) {
		this.codigoMediaCtMoeda = codigoMediaCtMoeda;
		this.moeda = moeda;
		this.dataData = dataData;
		this.valorCotacao = valorCotacao;
	}

	/**
	 * Obtem o valor do atributo codigoMediaCtMoeda.<BR>
	 * Atributo gerado a partir da coluna MECM_CD_MEDIA_CT_MOEDA.
	 * 
	 * @return Valor do atributo codigoMediaCtMoeda.
	 */
	public Long getCodigoMediaCtMoeda() {
		return this.codigoMediaCtMoeda;
	}

	/**
	 * Atualiza o valor do atributo codigoMediaCtMoeda.<BR>
	 * Atributo gerado a partir da coluna MECM_CD_MEDIA_CT_MOEDA.
	 * 
	 * @param codigoMediaCtMoeda
	 *            Novo valor para o atributo codigoMediaCtMoeda.
	 */
	public void setCodigoMediaCtMoeda(Long codigoMediaCtMoeda) {
		this.codigoMediaCtMoeda = codigoMediaCtMoeda;
	}

	/**
	 * Obtem o valor do atributo moeda.<BR>
	 * Atributo gerado a partir da coluna MOED_CD_MOEDA.
	 * 
	 * @return Valor do atributo moeda.
	 */
	public Moeda getMoeda() {
		return this.moeda;
	}

	/**
	 * Atualiza o valor do atributo moeda.<BR>
	 * Atributo gerado a partir da coluna MOED_CD_MOEDA.
	 * 
	 * @param moeda
	 *            Novo valor para o atributo moeda.
	 */
	public void setMoeda(Moeda moeda) {
		this.moeda = moeda;
	}

	/**
	 * Obtem o valor do atributo dataData.<BR>
	 * Atributo gerado a partir da coluna MECM_DT_DATA.
	 * 
	 * @return Valor do atributo dataData.
	 */
	public Date getDataData() {
		return this.dataData;
	}

	/**
	 * Atualiza o valor do atributo dataData.<BR>
	 * Atributo gerado a partir da coluna MECM_DT_DATA.
	 * 
	 * @param dataData
	 *            Novo valor para o atributo dataData.
	 */
	public void setDataData(Date dataData) {
		this.dataData = dataData;
	}

	/**
	 * Retorna o ano de uma determinada data
	 * 
	 * @param data
	 * @return String ano
	 */
	public String getAno() {
		if (this.dataData != null) {
			SimpleDateFormat sdf = new SimpleDateFormat("yyyy");
			return sdf.format(this.dataData);
		}
		return "";
	}

	/**
	 * Obtem o valor do atributo valorCotacao.<BR>
	 * Atributo gerado a partir da coluna MECM_VL_COTACAO.
	 * 
	 * @return Valor do atributo valorCotacao.
	 */
	public BigDecimal getValorCotacao() {
		return this.valorCotacao;
	}

	/**
	 * Atualiza o valor do atributo valorCotacao.<BR>
	 * Atributo gerado a partir da coluna MECM_VL_COTACAO.
	 * 
	 * @param valorCotacao
	 *            Novo valor para o atributo valorCotacao.
	 */
	public void setValorCotacao(BigDecimal valorCotacao) {
		this.valorCotacao = valorCotacao;
	}

	/**
	 * @see Object#toString()
	 */
	@Override
	public String toString() {
		StringBuffer buffer = new StringBuffer();

		buffer.append(getClass().getName()).append("@")
				.append(Integer.toHexString(hashCode())).append(" [");
		buffer.append("codigoMediaCtMoeda").append("='")
				.append(getCodigoMediaCtMoeda()).append("' ");
		buffer.append("moeda").append("='").append(getMoeda()).append("' ");
		buffer.append("dataData").append("='").append(getDataData())
				.append("' ");
		buffer.append("valorCotacao").append("='").append(getValorCotacao())
				.append("' ");
		buffer.append("]");

		return buffer.toString();
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((dataData == null) ? 0 : dataData.hashCode());
		result = prime * result + ((moeda == null) ? 0 : moeda.hashCode());
		return result;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		MediaCotacaoMoeda other = (MediaCotacaoMoeda) obj;
		if (dataData == null) {
			if (other.dataData != null)
				return false;
		} else {
			if (!this.getAno().equals(other.getAno())) {
				return false;
			}

		}
		if (moeda == null) {
			if (other.moeda != null)
				return false;
		} else if (!moeda.equals(other.moeda))
			return false;
		return true;
	}

}
