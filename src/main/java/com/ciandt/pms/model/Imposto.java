/*
 * @(#) Imposto.java
 * Copyright (c) 2008 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import javax.persistence.*;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

/**
 * Entity gerado a partir da tabela IMPOSTO.
 * 
 * @author Generated by Hibernate Tools 3.2.4.GA
 * @since 06/10/2009 14:24:04
 * @version 09/01/19 1.1 10:08:00
 */
@Entity
@Table(name = "IMPOSTO")
@NamedQueries({ @NamedQuery(name = "Imposto.findAll", query = "SELECT t FROM Imposto t "
        + "ORDER BY t.codigoImposto ASC") })
        
public class Imposto implements java.io.Serializable {
    
    // ========================================================================
    // BEGIN - Coloque aqui o codigo manual
    // ========================================================================
    
    /**
     * Relacionamento muitos pra muitos.
     */
    @ManyToMany(fetch = FetchType.LAZY, mappedBy = "impostos")
    private Set<ContratoPratica> contratoPraticas = new HashSet<ContratoPratica>(
            0);
    
    // ========================================================================
    // END
    // ========================================================================

    /**
     * Valor do serialVersionUID.
     */
    private static final long serialVersionUID = 1L;

    /**
     * Constante para NamedQuery "Imposto.findAll".
     */
    public static final String FIND_ALL = "Imposto.findAll";

    /**
     * Atributo gerado a partir da coluna IMPO_CD_IMPOSTO.
     */
    @Id
    @GeneratedValue(generator = "ImpostoSeq")
    @SequenceGenerator(name = "ImpostoSeq", sequenceName = "SQ_IMPO_CD_IMPOSTO", allocationSize = 1)
    @Column(name = "IMPO_CD_IMPOSTO", unique = true, nullable = false, precision = 18, scale = 0)
    private Long codigoImposto;

    /**
     * Atributo gerado a partir da coluna IMPO_NM_IMPOSTO.
     */

    @Column(name = "IMPO_NM_IMPOSTO", nullable = false, length = 100)
    private String nomeImposto;

    /**
     * Atributo gerado a partir da coluna IMPO_IN_STATUS.
     */

    @Column(name = "IMPO_IN_STATUS", nullable = false, length = 1)
    private String indicadorStatus;

    /**
     * Relacionamento um pra muitos.
     */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "imposto")
    private List<Aliquota> aliquotas = new ArrayList<Aliquota>(0);

    /**
     * Construtor default.
     */
    public Imposto() {
    }

    /**
     * Obtem o valor do atributo codigoImposto.<BR>
     * Atributo gerado a partir da coluna IMPO_CD_IMPOSTO.
     * 
     * @return Valor do atributo codigoImposto.
     */
    public Long getCodigoImposto() {
        return this.codigoImposto;
    }

    /**
     * Atualiza o valor do atributo codigoImposto.<BR>
     * Atributo gerado a partir da coluna IMPO_CD_IMPOSTO.
     * 
     * @param codigoImposto
     *            Novo valor para o atributo codigoImposto.
     */
    public void setCodigoImposto(final Long codigoImposto) {
        this.codigoImposto = codigoImposto;
    }

    /**
     * Obtem o valor do atributo nomeImposto.<BR>
     * Atributo gerado a partir da coluna IMPO_NM_IMPOSTO.
     * 
     * @return Valor do atributo nomeImposto.
     */
    public String getNomeImposto() {
        return this.nomeImposto;
    }

    /**
     * Atualiza o valor do atributo nomeImposto.<BR>
     * Atributo gerado a partir da coluna IMPO_NM_IMPOSTO.
     * 
     * @param nomeImposto
     *            Novo valor para o atributo nomeImposto.
     */
    public void setNomeImposto(final String nomeImposto) {
        this.nomeImposto = nomeImposto;
    }

    /**
     * Obtem o valor do atributo indicadorStatus.<BR>
     * Atributo gerado a partir da coluna IMPO_IN_STATUS.
     * 
     * @return Valor do atributo indicadorStatus.
     */
    public String getIndicadorStatus() {
        return this.indicadorStatus;
    }

    /**
     * Atualiza o valor do atributo indicadorStatus.<BR>
     * Atributo gerado a partir da coluna IMPO_IN_STATUS.
     * 
     * @param indicadorStatus
     *            Novo valor para o atributo indicadorStatus.
     */
    public void setIndicadorStatus(final String indicadorStatus) {
        this.indicadorStatus = indicadorStatus;
    }

    /**
     * Obtem o valor do atributo aliquotas.<BR>
     * 
     * @return Valor do atributo aliquotas.
     */
    public List<Aliquota> getAliquotas() {
        return this.aliquotas;
    }

    /**
     * Atualiza o valor do atributo aliquotas.<BR>
     * 
     * @param aliquotas
     *            Novo valor para o atributo aliquotas.
     */
    public void setAliquotas(final List<Aliquota> aliquotas) {
        this.aliquotas = aliquotas;
    }

    /**
     * @return the contratoPraticas
     */
    public Set<ContratoPratica> getContratoPraticas() {
        return contratoPraticas;
    }

    /**
     * @param contratoPraticas the contratoPraticas to set
     */
    public void setContratoPraticas(Set<ContratoPratica> contratoPraticas) {
        this.contratoPraticas = contratoPraticas;
    }

    /**
     * @see Object#toString()
     * @return representação String do Objeto
     */
    @Override
    public String toString() {
        StringBuffer buffer = new StringBuffer();

        buffer.append(getClass().getName()).append("@").append(
                Integer.toHexString(hashCode())).append(" [");
        buffer.append("codigoImposto").append("='").append(getCodigoImposto())
                .append("' ");
        buffer.append("nomeImposto").append("='").append(getNomeImposto())
                .append("' ");
        buffer.append("indicadorStatus").append("='").append(
                getIndicadorStatus()).append("' ");
        buffer.append("]");

        return buffer.toString();
    }
}