/*
 * @(#) PessoaDelegacao.java
 * Copyright (c) 2008 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Entity gerado a partir da tabela PESSOA_DELEGACAO.
 * 
 * @author Generated by Hibernate Tools 3.2.4.GA
 * @since 07/07/2011 09:24:08
 * @version 09/01/19 1.1 10:08:00
 */
@Entity
@Table(name = "PESSOA_DELEGACAO")
@NamedQueries({
        @NamedQuery(name = "PessoaDelegacao.findAll", query = "SELECT t FROM PessoaDelegacao t"),
        @NamedQuery(name = "PessoaDelegacao.findByPessoaAndDate", query = "SELECT t FROM PessoaDelegacao t "
                + " JOIN FETCH t.pessoa pessoa "
                + " WHERE (pessoa.codigoPessoa = ?) AND (TRUNC(t.dataInicio) <= TRUNC(?)) "
                + " AND (TRUNC(t.dataFim) >= TRUNC(?) OR t.dataFim IS NULL)"),
        @NamedQuery(name = "PessoaDelegacao.findByPessoaAndFinalDate", query = "SELECT t FROM PessoaDelegacao t "
                + " JOIN FETCH t.pessoa pessoa "
                + " WHERE (pessoa.codigoPessoa = ?) "
                + " AND (TRUNC(t.dataFim) >= TRUNC(?) OR t.dataFim IS NULL)") })
public class PessoaDelegacao implements java.io.Serializable {

    /**
     * Valor do serialVersionUID.
     */
    private static final long serialVersionUID = 1L;

    /**
     * Constante para NamedQuery "PessoaDelegacao.findAll".
     */
    public static final String FIND_ALL = "PessoaDelegacao.findAll";

    /**
     * Constante para NamedQuery "PessoaDelegacao.findByPessoaAndDate".
     */
    public static final String FIND_BY_PESSOA_AND_DATE = "PessoaDelegacao.findByPessoaAndDate";

    /**
     * Constante para NamedQuery "PessoaDelegacao.findByPessoaAndFinalDate".
     */
    public static final String FIND_BY_PESSOA_AND_FINAL_DATE = "PessoaDelegacao.findByPessoaAndFinalDate";

    /**
     * Atributo gerado a partir da coluna PEDE_CD_PESSOA_DELEGACAO.
     */
    @Id
    @GeneratedValue(generator = "PessoaDelegacaoSeq")
    @SequenceGenerator(name = "PessoaDelegacaoSeq", sequenceName = "SQ_PEDE_CD_PESSOA_DELEGACAO", allocationSize = 1)
    @Column(name = "PEDE_CD_PESSOA_DELEGACAO", unique = true, nullable = false, precision = 18, scale = 0)
    private Long codigoPessoaDelegacao;

    /**
     * Atributo gerado a partir da coluna PEDE_CD_PESSOA.
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "PEDE_CD_PESSOA", nullable = false)
    private Pessoa pessoa;

    /**
     * Atributo gerado a partir da coluna PEDE_CD_PESSOA_DELEGADA.
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "PEDE_CD_PESSOA_DELEGADA", nullable = false)
    private Pessoa pessoaDelegada;

    /**
     * Atributo gerado a partir da coluna PEDE_DT_INICIO.
     */
    @Temporal(TemporalType.DATE)
    @Column(name = "PEDE_DT_INICIO", nullable = false, length = 7)
    private Date dataInicio;

    /**
     * Atributo gerado a partir da coluna PEDE_DT_FIM.
     */
    @Temporal(TemporalType.DATE)
    @Column(name = "PEDE_DT_FIM", length = 7)
    private Date dataFim;

    /**
     * Construtor default.
     */
    public PessoaDelegacao() {
    }

    /**
     * Construtor com preenchimento da entidade.
     * 
     * @param codigoPessoaDelegacao
     *            Valor do atributo codigoPessoaDelegacao;
     * @param pessoa
     *            Valor do atributo pessoa;
     * @param pessoaDelegada
     *            Valor do atributo pessoaDelegada;
     * @param dataInicio
     *            Valor do atributo dataInicio;
     */
    public PessoaDelegacao(final Long codigoPessoaDelegacao,
            final Pessoa pessoa, final Pessoa pessoaDelegada,
            final Date dataInicio) {
        this.codigoPessoaDelegacao = codigoPessoaDelegacao;
        this.pessoa = pessoa;
        this.pessoaDelegada = pessoaDelegada;
        this.dataInicio = dataInicio;
    }

    /**
     * Construtor com preenchimento da entidade.
     * 
     * @param codigoPessoaDelegacao
     *            Valor do atributo codigoPessoaDelegacao;
     * @param pessoa
     *            Valor do atributo pessoa;
     * @param pessoaDelegada
     *            Valor do atributo pessoaDelegada;
     * @param dataInicio
     *            Valor do atributo dataInicio;
     * @param dataFim
     *            Valor do atributo dataFim;
     */
    public PessoaDelegacao(final Long codigoPessoaDelegacao,
            final Pessoa pessoa, final Pessoa pessoaDelegada,
            final Date dataInicio, final Date dataFim) {
        this.codigoPessoaDelegacao = codigoPessoaDelegacao;
        this.pessoa = pessoa;
        this.pessoaDelegada = pessoaDelegada;
        this.dataInicio = dataInicio;
        this.dataFim = dataFim;
    }

    /**
     * Obtem o valor do atributo codigoPessoaDelegacao.<BR>
     * Atributo gerado a partir da coluna PEDE_CD_PESSOA_DELEGACAO.
     * 
     * @return Valor do atributo codigoPessoaDelegacao.
     */
    public Long getCodigoPessoaDelegacao() {
        return this.codigoPessoaDelegacao;
    }

    /**
     * Atualiza o valor do atributo codigoPessoaDelegacao.<BR>
     * Atributo gerado a partir da coluna PEDE_CD_PESSOA_DELEGACAO.
     * 
     * @param codigoPessoaDelegacao
     *            Novo valor para o atributo codigoPessoaDelegacao.
     */
    public void setCodigoPessoaDelegacao(final Long codigoPessoaDelegacao) {
        this.codigoPessoaDelegacao = codigoPessoaDelegacao;
    }

    /**
     * Obtem o valor do atributo pessoa.<BR>
     * Atributo gerado a partir da coluna PEDE_CD_PESSOA.
     * 
     * @return Valor do atributo pessoa.
     */
    public Pessoa getPessoa() {
        return this.pessoa;
    }

    /**
     * Atualiza o valor do atributo pessoa.<BR>
     * Atributo gerado a partir da coluna PEDE_CD_PESSOA.
     * 
     * @param pessoa
     *            Novo valor para o atributo pessoa.
     */
    public void setPessoa(final Pessoa pessoa) {
        this.pessoa = pessoa;
    }

    /**
     * Obtem o valor do atributo pessoaDelegada.<BR>
     * Atributo gerado a partir da coluna PEDE_CD_PESSOA_DELEGADA.
     * 
     * @return Valor do atributo pessoaDelegada.
     */
    public Pessoa getPessoaDelegada() {
        return this.pessoaDelegada;
    }

    /**
     * Atualiza o valor do atributo pessoaDelegada.<BR>
     * Atributo gerado a partir da coluna PEDE_CD_PESSOA_DELEGADA.
     * 
     * @param pessoaDelegada
     *            Novo valor para o atributo pessoaDelegada.
     */
    public void setPessoaDelegada(final Pessoa pessoaDelegada) {
        this.pessoaDelegada = pessoaDelegada;
    }

    /**
     * Obtem o valor do atributo dataInicio.<BR>
     * Atributo gerado a partir da coluna PEDE_DT_INICIO.
     * 
     * @return Valor do atributo dataInicio.
     */
    public Date getDataInicio() {
        return this.dataInicio;
    }

    /**
     * Atualiza o valor do atributo dataInicio.<BR>
     * Atributo gerado a partir da coluna PEDE_DT_INICIO.
     * 
     * @param dataInicio
     *            Novo valor para o atributo dataInicio.
     */
    public void setDataInicio(final Date dataInicio) {
        this.dataInicio = dataInicio;
    }

    /**
     * Obtem o valor do atributo dataFim.<BR>
     * Atributo gerado a partir da coluna PEDE_DT_FIM.
     * 
     * @return Valor do atributo dataFim.
     */
    public Date getDataFim() {
        return this.dataFim;
    }

    /**
     * Atualiza o valor do atributo dataFim.<BR>
     * Atributo gerado a partir da coluna PEDE_DT_FIM.
     * 
     * @param dataFim
     *            Novo valor para o atributo dataFim.
     */
    public void setDataFim(final Date dataFim) {
        this.dataFim = dataFim;
    }

    /**
     * @see Object#toString()
     * @return string
     */
    @Override
    public String toString() {
        StringBuffer buffer = new StringBuffer();

        buffer.append(getClass().getName()).append("@").append(
                Integer.toHexString(hashCode())).append(" [");
        buffer.append("codigoPessoaDelegacao").append("='").append(
                getCodigoPessoaDelegacao()).append("' ");
        buffer.append("pessoa").append("='").append(getPessoa()).append("' ");
        buffer.append("pessoaDelegada").append("='")
                .append(getPessoaDelegada()).append("' ");
        buffer.append("dataInicio").append("='").append(getDataInicio())
                .append("' ");
        buffer.append("dataFim").append("='").append(getDataFim()).append("' ");
        buffer.append("]");

        return buffer.toString();
    }

}
