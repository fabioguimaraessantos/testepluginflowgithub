/*
 * @(#) ComissaoFatura.java
 * Copyright (c) 2010 Ci&T Software S/A.
 * All Rights Reserved.
 */
package com.ciandt.pms.model;

import java.math.BigDecimal;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * Entity gerado a partir da tabela COMISSAO_FATURA.
 * 
 * @author Generated by Hibernate Tools 3.2.4.GA
 * @since 15/10/2010 10:29:00
 * @version 09/01/19 1.1 10:08:00
 */
@Entity
@Table(name = "COMISSAO_FATURA")
@NamedQueries({
        @NamedQuery(name = "ComissaoFatura.findAll", query = "SELECT t FROM ComissaoFatura t"),

        @NamedQuery(name = "ComissaoFatura.findByFilter", query = "SELECT cf FROM ComissaoFatura cf"
                + " JOIN FETCH cf.itemFatura if "
                + " JOIN FETCH if.fonteReceita "
                + " JOIN FETCH if.tipoServico "
                + " JOIN FETCH if.fatura f "
                + " JOIN FETCH cf.comissao c "
                + " JOIN FETCH c.pessoaAe "
                + " JOIN FETCH c.pessoaAprovador "
                + " WHERE cf.comissao.dataComissao between (?1) AND (?2) "
                + " AND ( (cf.comissao.pessoaAe.codigoLogin = ?3) OR (?3 is null) ) "
                + " AND ( (cf.comissao.pessoaAprovador.codigoLogin = ?4) OR (?4 is null) )"
                + " AND ( cf.comissao.indicadorEstadoAtual = ?5 OR ?5 IS null)"
                + " AND ( (f.dealFiscal.msa.codigoMsa = ?6) OR (?6 is 0L) ) "
                + " AND ( (f.codigoFatura = ?7) OR (?7 is null) )"
                + " ORDER BY cf.comissao.dataComissao"),
        @NamedQuery(name = "ComissaoFatura.findByFilter2", query = "SELECT cf FROM ComissaoFatura cf "
                + " JOIN FETCH cf.itemFatura if "
                + " JOIN FETCH if.fonteReceita "
                + " JOIN FETCH if.tipoServico "
                + " JOIN FETCH if.fatura  "
                + " JOIN FETCH cf.comissao c "
                + " JOIN FETCH c.pessoaAe "
                + " JOIN FETCH c.pessoaAprovador "
                + "   WHERE ( (cf.itemFatura.fatura.dealFiscal.msa.cliente.codigoCliente = ?1) OR (?1 is 0L) ) "
                + "   AND (  cf.comissao.dataComissao between (?2) AND (?3) ) "
                + "   AND ( (cf.comissao.pessoaAe.codigoPessoa = ?4) OR (?4 = 0L) ) "
                + "   AND ( (cf.comissao.pessoaAprovador.codigoPessoa = ?5) OR (?5 = 0L) )"
                + "   AND (  cf.comissao.indicadorEstadoAtual like '%' || ?6 || '%' ) "
                + " ORDER BY cf.comissao.dataComissao"),
        @NamedQuery(name = "ComissaoFatura.findByItemFatura", query = "SELECT cf FROM ComissaoFatura cf"
                + " JOIN FETCH cf.itemFatura if "
                + " JOIN FETCH if.fonteReceita "
                + " JOIN FETCH if.tipoServico "
                + " JOIN FETCH if.fatura  "
                + " JOIN FETCH cf.comissao c "
                + " JOIN FETCH c.contratoPratica cp "
                + " JOIN FETCH c.pessoaAe "
                + " JOIN FETCH c.pessoaAprovador "
                + " JOIN FETCH cp.msa msa "
                + " JOIN FETCH msa.cliente "
                + " WHERE cf.itemFatura.codigoItemFatura = ?") })
public class ComissaoFatura implements java.io.Serializable {

    /**
     * Valor do serialVersionUID.
     */
    private static final long serialVersionUID = 1L;

    /** Constante para NamedQuery "ComissaoFatura.findAll". */
    public static final String FIND_ALL = "ComissaoFatura.findAll";

    /** Constante para NamedQuery "ComissaoFatura.findByFilter". */
    public static final String FIND_BY_FILTER = "ComissaoFatura.findByFilter";

    /** Constante para NamedQuery "ComissaoFatura.findByFilter". */
    public static final String FIND_BY_FILTER_2 = "ComissaoFatura.findByFilter2";

    /** Constante para NamedQuery "ComissaoFatura.findByItemFatura". */
    public static final String FIND_BY_ITEM_FATURA = "ComissaoFatura.findByItemFatura";

    /**
     * Atributo gerado a partir da coluna COFA_CD_COMISSAO_FATURA.
     */
    @Id
    @GeneratedValue(generator = "ComissaoFaturaSeq")
    @SequenceGenerator(name = "ComissaoFaturaSeq", 
            sequenceName = "SQ_COFA_CD_COMISSAO_FATURA", allocationSize = 1)
    @Column(name = "COFA_CD_COMISSAO_FATURA", unique = true, nullable = false, precision = 18, scale = 0)
    private Long codigoComissaoFatura;

    /**
     * Atributo gerado a partir da coluna COMI_CD_COMISSAO.
     */
    @ManyToOne(fetch = FetchType.EAGER, cascade = CascadeType.ALL)
    @JoinColumn(name = "COMI_CD_COMISSAO", nullable = false)
    private Comissao comissao;

    /**
     * Atributo gerado a partir da coluna ITFA_CD_ITEM_FATURA.
     */
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "ITFA_CD_ITEM_FATURA", nullable = false)
    private ItemFatura itemFatura;

    /**
     * Atributo gerado a partir da coluna COFA_VL_ITEM_FATURA.
     */

    @Column(name = "COFA_VL_ITEM_FATURA", precision = 22, scale = 0)
    private BigDecimal valorItemFatura;

    /**
     * Construtor default.
     */
    public ComissaoFatura() {
    }

    /**
     * Construtor com preenchimento da entidade.
     * 
     * @param codigoComissaoFatura
     *            Valor do atributo codigoComissaoFatura;
     * @param comissao
     *            Valor do atributo comissao;
     * @param itemFatura
     *            Valor do atributo itemFatura;
     */
    public ComissaoFatura(final Long codigoComissaoFatura,
            final Comissao comissao, final ItemFatura itemFatura) {
        this.codigoComissaoFatura = codigoComissaoFatura;
        this.comissao = comissao;
        this.itemFatura = itemFatura;
    }

    /**
     * Construtor com preenchimento da entidade.
     * 
     * @param codigoComissaoFatura
     *            Valor do atributo codigoComissaoFatura;
     * @param comissao
     *            Valor do atributo comissao;
     * @param itemFatura
     *            Valor do atributo itemFatura;
     * @param valorItemFatura
     *            Valor do atributo valorItemFatura;
     */
    public ComissaoFatura(final Long codigoComissaoFatura,
            final Comissao comissao, final ItemFatura itemFatura,
            final BigDecimal valorItemFatura) {
        this.codigoComissaoFatura = codigoComissaoFatura;
        this.comissao = comissao;
        this.itemFatura = itemFatura;
        this.valorItemFatura = valorItemFatura;
    }

    /**
     * Obtem o valor do atributo codigoComissaoFatura.<BR>
     * Atributo gerado a partir da coluna COFA_CD_COMISSAO_FATURA.
     * 
     * @return Valor do atributo codigoComissaoFatura.
     */
    public Long getCodigoComissaoFatura() {
        return this.codigoComissaoFatura;
    }

    /**
     * Atualiza o valor do atributo codigoComissaoFatura.<BR>
     * Atributo gerado a partir da coluna COFA_CD_COMISSAO_FATURA.
     * 
     * @param codigoComissaoFatura
     *            Novo valor para o atributo codigoComissaoFatura.
     */
    public void setCodigoComissaoFatura(final Long codigoComissaoFatura) {
        this.codigoComissaoFatura = codigoComissaoFatura;
    }

    /**
     * Obtem o valor do atributo comissao.<BR>
     * Atributo gerado a partir da coluna COMI_CD_COMISSAO.
     * 
     * @return Valor do atributo comissao.
     */
    public Comissao getComissao() {
        return this.comissao;
    }

    /**
     * Atualiza o valor do atributo comissao.<BR>
     * Atributo gerado a partir da coluna COMI_CD_COMISSAO.
     * 
     * @param comissao
     *            Novo valor para o atributo comissao.
     */
    public void setComissao(final Comissao comissao) {
        this.comissao = comissao;
    }

    /**
     * Obtem o valor do atributo itemFatura.<BR>
     * Atributo gerado a partir da coluna ITFA_CD_ITEM_FATURA.
     * 
     * @return Valor do atributo itemFatura.
     */
    public ItemFatura getItemFatura() {
        return this.itemFatura;
    }

    /**
     * Atualiza o valor do atributo itemFatura.<BR>
     * Atributo gerado a partir da coluna ITFA_CD_ITEM_FATURA.
     * 
     * @param itemFatura
     *            Novo valor para o atributo itemFatura.
     */
    public void setItemFatura(final ItemFatura itemFatura) {
        this.itemFatura = itemFatura;
    }

    /**
     * Obtem o valor do atributo valorItemFatura.<BR>
     * Atributo gerado a partir da coluna COFA_VL_ITEM_FATURA.
     * 
     * @return Valor do atributo valorItemFatura.
     */
    public BigDecimal getValorItemFatura() {
        return this.valorItemFatura;
    }

    /**
     * Atualiza o valor do atributo valorItemFatura.<BR>
     * Atributo gerado a partir da coluna COFA_VL_ITEM_FATURA.
     * 
     * @param valorItemFatura
     *            Novo valor para o atributo valorItemFatura.
     */
    public void setValorItemFatura(final BigDecimal valorItemFatura) {
        this.valorItemFatura = valorItemFatura;
    }

    /**
     * @see Object#toString()
     * 
     * @return retorna a entidade no formato de string
     */
    @Override
    public String toString() {
        StringBuffer buffer = new StringBuffer();

        buffer.append(getClass().getName()).append("@").append(
                Integer.toHexString(hashCode())).append(" [");
        buffer.append("codigoComissaoFatura").append("='").append(
                getCodigoComissaoFatura()).append("' ");
        buffer.append("comissao").append("='").append(getComissao()).append(
                "' ");
        buffer.append("itemFatura").append("='").append(getItemFatura())
                .append("' ");
        buffer.append("valorItemFatura").append("='").append(
                getValorItemFatura()).append("' ");
        buffer.append("]");

        return buffer.toString();
    }

}
